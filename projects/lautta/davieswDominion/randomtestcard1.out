Smithy:
Testing smithy
RANDOM TESTS
FAILED! * deck count = 202, expected = 203
FAILED! hand count = 102, expected = 101
FAILED! * deck count = 130, expected = 131
FAILED! hand count = 264, expected = 263
FAILED! * deck count = 278, expected = 279
FAILED! hand count = 198, expected = 197
FAILED! * deck count = 244, expected = 245
FAILED! hand count = 117, expected = 116
FAILED! * deck count = 435, expected = 436
FAILED! hand count = 142, expected = 141
FAILED! * deck count = 149, expected = 150
FAILED! hand count = 353, expected = 352
FAILED! * deck count = 398, expected = 399
FAILED! hand count = 440, expected = 439
FAILED! * deck count = 427, expected = 428
FAILED! hand count = 455, expected = 454
FAILED! * deck count = 433, expected = 434
FAILED! hand count = 137, expected = 136
FAILED! * deck count = 73, expected = 0
FAILED! hand count = 431, expected = 430
FAILED! * deck count = 469, expected = 470
FAILED! hand count = 8, expected = 7
FAILED! * deck count = 119, expected = 120
FAILED! hand count = 155, expected = 154
FAILED! * deck count = 416, expected = 417
FAILED! hand count = 390, expected = 389
FAILED! * deck count = 50, expected = 51
FAILED! hand count = 65, expected = 64
FAILED! * deck count = 294, expected = 295
FAILED! hand count = 440, expected = 439
FAILED! * deck count = 131, expected = 132
FAILED! hand count = 457, expected = 456
FAILED! * deck count = 29, expected = 30
FAILED! hand count = 258, expected = 257
FAILED! * deck count = 261, expected = 262
FAILED! hand count = 456, expected = 455
FAILED! * deck count = 405, expected = 406
FAILED! hand count = 424, expected = 423
FAILED! * deck count = 167, expected = 168
FAILED! hand count = 276, expected = 275
FAILED! * deck count = 91, expected = 92
FAILED! hand count = 160, expected = 159
FAILED! * deck count = 37, expected = 38
FAILED! hand count = 207, expected = 206
FAILED! * deck count = 170, expected = 171
FAILED! hand count = 76, expected = 75
FAILED! * deck count = 357, expected = 358
FAILED! hand count = 250, expected = 249
FAILED! * deck count = 4, expected = 5
FAILED! hand count = 223, expected = 222
FAILED! * deck count = 289, expected = 290
FAILED! hand count = 86, expected = 85
FAILED! * deck count = 283, expected = 284
FAILED! hand count = 151, expected = 150
FAILED! * deck count = 7, expected = 8
FAILED! hand count = 24, expected = 23
FAILED! * deck count = 62, expected = 63
FAILED! hand count = 445, expected = 444
FAILED! * deck count = 421, expected = 422
FAILED! hand count = 314, expected = 313
FAILED! * deck count = 466, expected = 467
FAILED! hand count = 376, expected = 375
FAILED! * deck count = 197, expected = 198
FAILED! hand count = 39, expected = 38
FAILED! * deck count = 221, expected = 222
FAILED! hand count = 275, expected = 274
FAILED! * deck count = 162, expected = 163
FAILED! hand count = 258, expected = 257
FAILED! * deck count = 364, expected = 365
FAILED! hand count = 68, expected = 67
FAILED! * deck count = 262, expected = 263
FAILED! hand count = 185, expected = 184
FAILED! * deck count = 261, expected = 262
FAILED! hand count = 234, expected = 233
FAILED! * deck count = 190, expected = 191
FAILED! hand count = 472, expected = 471
FAILED! * deck count = 294, expected = 295
FAILED! hand count = 467, expected = 466
FAILED! * deck count = 444, expected = 445
FAILED! hand count = 6, expected = 5
FAILED! * deck count = 438, expected = 439
FAILED! hand count = 116, expected = 115
FAILED! * deck count = 167, expected = 168
FAILED! hand count = 137, expected = 136
FAILED! * deck count = 346, expected = 347
FAILED! hand count = 17, expected = 16
FAILED! * deck count = 68, expected = 69
FAILED! hand count = 424, expected = 423
FAILED! * deck count = 1, expected = 2
FAILED! hand count = 65, expected = 64
FAILED! * deck count = 108, expected = 109
FAILED! hand count = 292, expected = 291
FAILED! * deck count = 109, expected = 110
FAILED! hand count = 469, expected = 468
FAILED! * deck count = 332, expected = 333
FAILED! hand count = 111, expected = 110
FAILED! * deck count = 399, expected = 400
FAILED! hand count = 80, expected = 79
FAILED! * deck count = 281, expected = 282
FAILED! hand count = 365, expected = 364
FAILED! * deck count = 165, expected = 166
FAILED! hand count = 79, expected = 78
FAILED! * deck count = 302, expected = 303
FAILED! hand count = 96, expected = 95
FAILED! * deck count = 463, expected = 464
FAILED! hand count = 317, expected = 316
FAILED! * deck count = 334, expected = 335
FAILED! hand count = 271, expected = 270
FAILED! * deck count = 158, expected = 159
FAILED! hand count = 358, expected = 357
FAILED! * deck count = 255, expected = 256
FAILED! hand count = 374, expected = 373
FAILED! hand count = 241, expected = 240
FAILED! *** deck count = 287, expected = 288
FAILED! * deck count = 298, expected = 299
FAILED! hand count = 221, expected = 220
FAILED! * deck count = 313, expected = 314
FAILED! hand count = 270, expected = 269
FAILED! * deck count = 373, expected = 374
FAILED! hand count = 202, expected = 201
FAILED! * deck count = 224, expected = 225
FAILED! hand count = 208, expected = 207
FAILED! * deck count = 405, expected = 406
FAILED! hand count = 300, expected = 299
FAILED! * deck count = 68, expected = 69
FAILED! hand count = 89, expected = 88
FAILED! * deck count = 331, expected = 332
FAILED! hand count = 415, expected = 414
FAILED! * deck count = 143, expected = 144
FAILED! hand count = 238, expected = 237
FAILED! * deck count = 16, expected = 17
FAILED! hand count = 208, expected = 207
FAILED! * deck count = 94, expected = 95
FAILED! hand count = 115, expected = 114
FAILED! * deck count = 396, expected = 397
FAILED! hand count = 52, expected = 51
FAILED! * deck count = 346, expected = 347
FAILED! hand count = 38, expected = 37
FAILED! * deck count = 353, expected = 354
FAILED! hand count = 301, expected = 300
FAILED! * deck count = 314, expected = 315
FAILED! hand count = 367, expected = 366
FAILED! * deck count = 9, expected = 10
FAILED! hand count = 296, expected = 295
FAILED! * deck count = 329, expected = 330
FAILED! hand count = 333, expected = 332
FAILED! * deck count = 162, expected = 163
FAILED! hand count = 252, expected = 251
FAILED! * deck count = 187, expected = 188
FAILED! hand count = 68, expected = 67
FAILED! * deck count = 451, expected = 452
FAILED! hand count = 262, expected = 261
FAILED! * deck count = 154, expected = 155
FAILED! hand count = 97, expected = 96
FAILED! * deck count = 1, expected = 2
FAILED! hand count = 292, expected = 291
FAILED! * deck count = 435, expected = 436
FAILED! hand count = 476, expected = 475
FAILED! * deck count = 213, expected = 214
FAILED! hand count = 212, expected = 211
FAILED! * deck count = 317, expected = 318
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 364, expected = 365
FAILED! hand count = 196, expected = 195
FAILED! * deck count = 435, expected = 436
FAILED! hand count = 116, expected = 115
FAILED! * deck count = 289, expected = 290
FAILED! hand count = 438, expected = 437
FAILED! * deck count = 468, expected = 469
FAILED! hand count = 447, expected = 446
FAILED! * deck count = 211, expected = 212
FAILED! hand count = 225, expected = 224
FAILED! * deck count = 140, expected = 141
FAILED! hand count = 189, expected = 188
FAILED! * deck count = 289, expected = 290
FAILED! hand count = 72, expected = 71
FAILED! * deck count = 468, expected = 469
FAILED! hand count = 441, expected = 440
FAILED! * deck count = 161, expected = 162
FAILED! hand count = 54, expected = 53
FAILED! * deck count = 10, expected = 11
FAILED! hand count = 353, expected = 352
FAILED! * deck count = 494, expected = 495
FAILED! hand count = 4, expected = 3
FAILED! * deck count = 316, expected = 317
FAILED! hand count = 430, expected = 429
FAILED! * deck count = 74, expected = 75
FAILED! hand count = 364, expected = 363
FAILED! * deck count = 85, expected = 86
FAILED! hand count = 369, expected = 368
FAILED! * deck count = 6, expected = 7
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 361, expected = 362
FAILED! hand count = 398, expected = 397
FAILED! * deck count = 439, expected = 440
FAILED! hand count = 71, expected = 70
FAILED! * deck count = 46, expected = 47
FAILED! hand count = 454, expected = 453
FAILED! * deck count = 205, expected = 206
FAILED! hand count = 427, expected = 426
FAILED! * deck count = 310, expected = 311
FAILED! hand count = 263, expected = 262
FAILED! * deck count = 232, expected = 233
FAILED! hand count = 233, expected = 232
FAILED! * deck count = 284, expected = 285
FAILED! hand count = 370, expected = 369
FAILED! * deck count = 35, expected = 36
FAILED! hand count = 185, expected = 184
FAILED! * deck count = 466, expected = 467
FAILED! hand count = 471, expected = 470
FAILED! * deck count = 457, expected = 458
FAILED! hand count = 130, expected = 129
FAILED! * deck count = 356, expected = 357
FAILED! hand count = 343, expected = 342
FAILED! * deck count = 183, expected = 184
FAILED! hand count = 246, expected = 245
FAILED! * deck count = 290, expected = 291
FAILED! hand count = 421, expected = 420
FAILED! * deck count = 323, expected = 324
FAILED! hand count = 275, expected = 274
FAILED! * deck count = 282, expected = 283
FAILED! hand count = 282, expected = 281
FAILED! * deck count = 173, expected = 174
FAILED! hand count = 107, expected = 106
FAILED! * deck count = 53, expected = 54
FAILED! hand count = 326, expected = 325
FAILED! * deck count = 256, expected = 257
FAILED! hand count = 367, expected = 366
FAILED! * deck count = 291, expected = 292
FAILED! hand count = 317, expected = 316
FAILED! * deck count = 376, expected = 377
FAILED! hand count = 103, expected = 102
FAILED! * deck count = 302, expected = 303
FAILED! hand count = 281, expected = 280
FAILED! * deck count = 398, expected = 399
FAILED! hand count = 306, expected = 305
FAILED! * deck count = 475, expected = 476
FAILED! hand count = 289, expected = 288
FAILED! * deck count = 343, expected = 344
FAILED! hand count = 88, expected = 87
FAILED! * deck count = 8, expected = 9
FAILED! hand count = 50, expected = 49
FAILED! * deck count = 327, expected = 328
FAILED! hand count = 287, expected = 286
FAILED! * deck count = 64, expected = 65
FAILED! hand count = 431, expected = 430
FAILED! * deck count = 274, expected = 275
FAILED! hand count = 387, expected = 386
FAILED! * deck count = 23, expected = 24
FAILED! hand count = 360, expected = 359
FAILED! * deck count = 295, expected = 296
FAILED! hand count = 420, expected = 419
FAILED! * deck count = 333, expected = 334
FAILED! hand count = 416, expected = 415
FAILED! * deck count = 127, expected = 128
FAILED! hand count = 218, expected = 217
FAILED! * deck count = 53, expected = 54
FAILED! hand count = 386, expected = 385
FAILED! * deck count = 382, expected = 383
FAILED! hand count = 368, expected = 367
FAILED! * deck count = 75, expected = 76
FAILED! hand count = 16, expected = 15
FAILED! * deck count = 416, expected = 417
FAILED! hand count = 359, expected = 358
FAILED! hand count = 188, expected = 187
FAILED! *** deck count = 177, expected = 178
FAILED! * deck count = 450, expected = 451
FAILED! hand count = 54, expected = 53
FAILED! * deck count = 45, expected = 46
FAILED! hand count = 217, expected = 216
FAILED! * deck count = 413, expected = 414
FAILED! hand count = 59, expected = 58
FAILED! * deck count = 11, expected = 12
FAILED! hand count = 269, expected = 268
FAILED! * deck count = 216, expected = 217
FAILED! hand count = 490, expected = 489
FAILED! * deck count = 414, expected = 415
FAILED! hand count = 433, expected = 432
FAILED! * deck count = 122, expected = 123
FAILED! hand count = 179, expected = 178
FAILED! * deck count = 150, expected = 151
FAILED! hand count = 197, expected = 196
FAILED! * deck count = 315, expected = 316
FAILED! hand count = 389, expected = 388
FAILED! * deck count = 330, expected = 331
FAILED! hand count = 377, expected = 376
FAILED! * deck count = 279, expected = 280
FAILED! hand count = 135, expected = 134
FAILED! * deck count = 11, expected = 12
FAILED! hand count = 442, expected = 441
FAILED! * deck count = 105, expected = 106
FAILED! hand count = 130, expected = 129
FAILED! * deck count = 348, expected = 349
FAILED! hand count = 127, expected = 126
FAILED! * deck count = 13, expected = 14
FAILED! hand count = 396, expected = 395
FAILED! * deck count = 386, expected = 387
FAILED! hand count = 375, expected = 374
FAILED! hand count = 351, expected = 350
FAILED! *** deck count = 475, expected = 476
FAILED! * deck count = 410, expected = 411
FAILED! hand count = 31, expected = 30
FAILED! * deck count = 333, expected = 334
FAILED! hand count = 214, expected = 213
FAILED! * deck count = 190, expected = 191
FAILED! hand count = 397, expected = 396
FAILED! hand count = 414, expected = 413
FAILED! *** deck count = 152, expected = 153
FAILED! * deck count = 368, expected = 369
FAILED! hand count = 337, expected = 336
FAILED! * deck count = 25, expected = 26
FAILED! hand count = 330, expected = 329
FAILED! * deck count = 407, expected = 408
FAILED! hand count = 138, expected = 137
FAILED! * deck count = 84, expected = 85
FAILED! hand count = 21, expected = 20
FAILED! * deck count = 47, expected = 48
FAILED! hand count = 334, expected = 333
FAILED! * deck count = 263, expected = 264
FAILED! hand count = 47, expected = 46
FAILED! * deck count = 456, expected = 457
FAILED! hand count = 382, expected = 381
FAILED! * deck count = 383, expected = 384
FAILED! hand count = 305, expected = 304
FAILED! * deck count = 471, expected = 472
FAILED! hand count = 239, expected = 238
FAILED! * deck count = 320, expected = 321
FAILED! hand count = 170, expected = 169
FAILED! * deck count = 485, expected = 486
FAILED! hand count = 127, expected = 126
FAILED! * deck count = 395, expected = 396
FAILED! hand count = 87, expected = 86
FAILED! * deck count = 358, expected = 359
FAILED! hand count = 429, expected = 428
FAILED! * deck count = 271, expected = 272
FAILED! hand count = 289, expected = 288
FAILED! * deck count = 225, expected = 226
FAILED! hand count = 481, expected = 480
FAILED! * deck count = 351, expected = 352
FAILED! hand count = 49, expected = 48
FAILED! * deck count = 25, expected = 26
FAILED! hand count = 16, expected = 15
FAILED! * deck count = 493, expected = 494
FAILED! hand count = 221, expected = 220
FAILED! * deck count = 284, expected = 285
FAILED! hand count = 307, expected = 306
FAILED! * deck count = 449, expected = 450
FAILED! hand count = 272, expected = 271
FAILED! * deck count = 171, expected = 172
FAILED! hand count = 297, expected = 296
FAILED! * deck count = 75, expected = 76
FAILED! hand count = 189, expected = 188
FAILED! * deck count = 250, expected = 251
FAILED! hand count = 276, expected = 275
FAILED! * deck count = 143, expected = 144
FAILED! hand count = 212, expected = 211
FAILED! * deck count = 405, expected = 406
FAILED! hand count = 255, expected = 254
FAILED! * deck count = 296, expected = 297
FAILED! hand count = 303, expected = 302
FAILED! * deck count = 175, expected = 176
FAILED! hand count = 59, expected = 58
FAILED! * deck count = 167, expected = 168
FAILED! hand count = 13, expected = 12
FAILED! * deck count = 348, expected = 349
FAILED! hand count = 477, expected = 476
FAILED! * deck count = 265, expected = 266
FAILED! hand count = 125, expected = 124
FAILED! * deck count = 324, expected = 325
FAILED! hand count = 326, expected = 325
FAILED! * deck count = 264, expected = 265
FAILED! hand count = 428, expected = 427
FAILED! * deck count = 316, expected = 317
FAILED! hand count = 327, expected = 326
FAILED! * deck count = 48, expected = 49
FAILED! hand count = 170, expected = 169
FAILED! * deck count = 124, expected = 125
FAILED! hand count = 141, expected = 140
FAILED! * deck count = 398, expected = 399
FAILED! hand count = 218, expected = 217
FAILED! * deck count = 81, expected = 82
FAILED! hand count = 261, expected = 260
FAILED! * deck count = 66, expected = 67
FAILED! hand count = 372, expected = 371
FAILED! * deck count = 64, expected = 65
FAILED! hand count = 454, expected = 453
FAILED! * deck count = 438, expected = 439
FAILED! hand count = 27, expected = 26
FAILED! * deck count = 260, expected = 261
FAILED! hand count = 406, expected = 405
FAILED! * deck count = 454, expected = 455
FAILED! hand count = 357, expected = 356
FAILED! * deck count = 427, expected = 428
FAILED! hand count = 358, expected = 357
FAILED! * deck count = 492, expected = 493
FAILED! hand count = 178, expected = 177
FAILED! * deck count = 57, expected = 58
FAILED! hand count = 354, expected = 353
FAILED! * deck count = 64, expected = 65
FAILED! hand count = 412, expected = 411
FAILED! * deck count = 228, expected = 229
FAILED! hand count = 303, expected = 302
FAILED! * deck count = 153, expected = 154
FAILED! hand count = 250, expected = 249
FAILED! * deck count = 491, expected = 492
FAILED! hand count = 151, expected = 150
FAILED! * deck count = 62, expected = 63
FAILED! hand count = 474, expected = 473
FAILED! * deck count = 427, expected = 428
FAILED! hand count = 57, expected = 56
FAILED! * deck count = 414, expected = 415
FAILED! hand count = 392, expected = 391
FAILED! * deck count = 210, expected = 211
FAILED! hand count = 385, expected = 384
FAILED! * deck count = 252, expected = 253
FAILED! hand count = 270, expected = 269
FAILED! * deck count = 381, expected = 382
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 488, expected = 489
FAILED! hand count = 89, expected = 88
FAILED! * deck count = 258, expected = 259
FAILED! hand count = 54, expected = 53
FAILED! * deck count = 210, expected = 211
FAILED! hand count = 87, expected = 86
FAILED! * deck count = 434, expected = 435
FAILED! hand count = 335, expected = 334
FAILED! * deck count = 86, expected = 87
FAILED! hand count = 491, expected = 490
FAILED! * deck count = 251, expected = 252
FAILED! hand count = 386, expected = 385
FAILED! * deck count = 415, expected = 416
FAILED! hand count = 463, expected = 462
FAILED! * deck count = 81, expected = 82
FAILED! hand count = 275, expected = 274
FAILED! * deck count = 379, expected = 380
FAILED! hand count = 112, expected = 111
FAILED! * deck count = 358, expected = 359
FAILED! hand count = 328, expected = 327
FAILED! * deck count = 411, expected = 412
FAILED! hand count = 235, expected = 234
FAILED! * deck count = 57, expected = 58
FAILED! hand count = 180, expected = 179
FAILED! * deck count = 218, expected = 219
FAILED! hand count = 164, expected = 163
FAILED! * deck count = 159, expected = 160
FAILED! hand count = 473, expected = 472
FAILED! * deck count = 181, expected = 182
FAILED! hand count = 314, expected = 313
FAILED! * deck count = 47, expected = 48
FAILED! hand count = 220, expected = 219
FAILED! * deck count = 438, expected = 439
FAILED! hand count = 401, expected = 400
FAILED! * deck count = 179, expected = 180
FAILED! hand count = 286, expected = 285
FAILED! * deck count = 459, expected = 460
FAILED! hand count = 457, expected = 456
FAILED! * deck count = 346, expected = 347
FAILED! hand count = 172, expected = 171
FAILED! * deck count = 217, expected = 218
FAILED! hand count = 420, expected = 419
FAILED! * deck count = 264, expected = 265
FAILED! hand count = 300, expected = 299
FAILED! * deck count = 111, expected = 112
FAILED! hand count = 12, expected = 11
FAILED! * deck count = 150, expected = 151
FAILED! hand count = 499, expected = 498
FAILED! * deck count = 454, expected = 455
FAILED! hand count = 82, expected = 81
FAILED! * deck count = 11, expected = 12
FAILED! hand count = 208, expected = 207
FAILED! * deck count = 242, expected = 243
FAILED! hand count = 153, expected = 152
FAILED! * deck count = 362, expected = 363
FAILED! hand count = 473, expected = 472
FAILED! * deck count = 122, expected = 123
FAILED! hand count = 272, expected = 271
FAILED! * deck count = 328, expected = 329
FAILED! hand count = 465, expected = 464
FAILED! * deck count = 475, expected = 476
FAILED! hand count = 156, expected = 155
FAILED! * deck count = 282, expected = 283
FAILED! hand count = 191, expected = 190
FAILED! * deck count = 403, expected = 404
FAILED! hand count = 445, expected = 444
FAILED! * deck count = 373, expected = 374
FAILED! hand count = 375, expected = 374
FAILED! * deck count = 452, expected = 453
FAILED! hand count = 37, expected = 36
FAILED! * deck count = 110, expected = 111
FAILED! hand count = 457, expected = 456
FAILED! * deck count = 117, expected = 118
FAILED! hand count = 23, expected = 22
FAILED! * deck count = 253, expected = 254
FAILED! hand count = 314, expected = 313
FAILED! * deck count = 341, expected = 342
FAILED! hand count = 15, expected = 14
FAILED! * deck count = 148, expected = 149
FAILED! hand count = 58, expected = 57
FAILED! * deck count = 167, expected = 168
FAILED! hand count = 378, expected = 377
FAILED! * deck count = 490, expected = 491
FAILED! hand count = 48, expected = 47
FAILED! * deck count = 76, expected = 77
FAILED! hand count = 427, expected = 426
FAILED! * deck count = 411, expected = 412
FAILED! hand count = 486, expected = 485
FAILED! * deck count = 133, expected = 134
FAILED! hand count = 345, expected = 344
FAILED! * deck count = 479, expected = 480
FAILED! hand count = 474, expected = 473
FAILED! * deck count = 243, expected = 244
FAILED! hand count = 186, expected = 185
FAILED! * deck count = 447, expected = 448
FAILED! hand count = 308, expected = 307
FAILED! * deck count = 39, expected = 40
FAILED! hand count = 234, expected = 233
FAILED! * deck count = 159, expected = 160
FAILED! hand count = 217, expected = 216
FAILED! * deck count = 63, expected = 64
FAILED! hand count = 320, expected = 319
FAILED! * deck count = 233, expected = 234
FAILED! hand count = 136, expected = 135
FAILED! * deck count = 482, expected = 483
FAILED! hand count = 335, expected = 334
FAILED! * deck count = 392, expected = 393
FAILED! hand count = 42, expected = 41
FAILED! * deck count = 477, expected = 478
FAILED! hand count = 267, expected = 266
FAILED! * deck count = 380, expected = 381
FAILED! hand count = 449, expected = 448
FAILED! * deck count = 194, expected = 195
FAILED! hand count = 213, expected = 212
FAILED! * deck count = 356, expected = 357
FAILED! hand count = 325, expected = 324
FAILED! * deck count = 328, expected = 329
FAILED! hand count = 263, expected = 262
FAILED! * deck count = 13, expected = 14
FAILED! hand count = 37, expected = 36
FAILED! * deck count = 188, expected = 189
FAILED! hand count = 268, expected = 267
FAILED! * deck count = 297, expected = 298
FAILED! hand count = 209, expected = 208
FAILED! * deck count = 400, expected = 401
FAILED! hand count = 220, expected = 219
FAILED! * deck count = 78, expected = 79
FAILED! hand count = 397, expected = 396
FAILED! * deck count = 232, expected = 233
FAILED! hand count = 114, expected = 113
FAILED! * deck count = 494, expected = 495
FAILED! hand count = 46, expected = 45
FAILED! * deck count = 339, expected = 340
FAILED! hand count = 115, expected = 114
FAILED! * deck count = 7, expected = 8
FAILED! hand count = 422, expected = 421
FAILED! * deck count = 55, expected = 56
FAILED! hand count = 171, expected = 170
FAILED! * deck count = 455, expected = 456
FAILED! hand count = 56, expected = 55
FAILED! * deck count = 471, expected = 472
FAILED! hand count = 430, expected = 429
FAILED! * deck count = 411, expected = 412
FAILED! hand count = 60, expected = 59
FAILED! * deck count = 366, expected = 367
FAILED! hand count = 383, expected = 382
FAILED! * deck count = 82, expected = 83
FAILED! hand count = 14, expected = 13
FAILED! * deck count = 341, expected = 342
FAILED! hand count = 465, expected = 464
FAILED! * deck count = 396, expected = 397
FAILED! hand count = 67, expected = 66
FAILED! * deck count = 46, expected = 47
FAILED! hand count = 426, expected = 425
FAILED! * deck count = 330, expected = 331
FAILED! hand count = 87, expected = 86
FAILED! * deck count = 438, expected = 439
FAILED! hand count = 422, expected = 421
FAILED! * deck count = 113, expected = 114
FAILED! hand count = 396, expected = 395
FAILED! * deck count = 118, expected = 119
FAILED! hand count = 169, expected = 168
FAILED! * deck count = 118, expected = 119
FAILED! hand count = 15, expected = 14
FAILED! * deck count = 175, expected = 176
FAILED! hand count = 365, expected = 364
FAILED! * deck count = 322, expected = 323
FAILED! hand count = 32, expected = 31
FAILED! * deck count = 469, expected = 470
FAILED! hand count = 50, expected = 49
FAILED! * deck count = 299, expected = 300
FAILED! hand count = 292, expected = 291
FAILED! * deck count = 47, expected = 48
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 42, expected = 43
FAILED! hand count = 377, expected = 376
FAILED! * deck count = 443, expected = 444
FAILED! hand count = 195, expected = 194
FAILED! * deck count = 321, expected = 322
FAILED! hand count = 481, expected = 480
FAILED! * deck count = 39, expected = 40
FAILED! hand count = 178, expected = 177
FAILED! * deck count = 105, expected = 106
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 221, expected = 222
FAILED! hand count = 430, expected = 429
FAILED! * deck count = 21, expected = 22
FAILED! hand count = 80, expected = 79
FAILED! * deck count = 212, expected = 213
FAILED! hand count = 43, expected = 42
FAILED! * deck count = 311, expected = 312
FAILED! hand count = 192, expected = 191
FAILED! * deck count = 89, expected = 90
FAILED! hand count = 330, expected = 329
FAILED! * deck count = 83, expected = 84
FAILED! hand count = 396, expected = 395
FAILED! * deck count = 143, expected = 144
FAILED! hand count = 122, expected = 121
FAILED! * deck count = 419, expected = 420
FAILED! hand count = 17, expected = 16
FAILED! * deck count = 121, expected = 122
FAILED! hand count = 436, expected = 435
FAILED! * deck count = 447, expected = 448
FAILED! hand count = 329, expected = 328
FAILED! * deck count = 412, expected = 413
FAILED! hand count = 189, expected = 188
FAILED! * deck count = 382, expected = 383
FAILED! hand count = 176, expected = 175
FAILED! * deck count = 372, expected = 373
FAILED! hand count = 466, expected = 465
FAILED! * deck count = 250, expected = 251
FAILED! hand count = 219, expected = 218
FAILED! * deck count = 372, expected = 373
FAILED! hand count = 496, expected = 495
FAILED! * deck count = 84, expected = 85
FAILED! hand count = 242, expected = 241
FAILED! * deck count = 472, expected = 473
FAILED! hand count = 72, expected = 71
FAILED! * deck count = 244, expected = 245
FAILED! hand count = 144, expected = 143
FAILED! * deck count = 47, expected = 48
FAILED! hand count = 27, expected = 26
FAILED! * deck count = 47, expected = 48
FAILED! hand count = 54, expected = 53
FAILED! * deck count = 350, expected = 351
FAILED! hand count = 501, expected = 500
FAILED! * deck count = 305, expected = 306
FAILED! hand count = 443, expected = 442
FAILED! * deck count = 117, expected = 118
FAILED! hand count = 134, expected = 133
FAILED! * deck count = 73, expected = 74
FAILED! hand count = 355, expected = 354
FAILED! * deck count = 472, expected = 473
FAILED! hand count = 214, expected = 213
FAILED! * deck count = 126, expected = 127
FAILED! hand count = 328, expected = 327
FAILED! * deck count = 365, expected = 366
FAILED! hand count = 74, expected = 73
FAILED! * deck count = 26, expected = 27
FAILED! hand count = 164, expected = 163
FAILED! * deck count = 213, expected = 214
FAILED! hand count = 234, expected = 233
FAILED! * deck count = 329, expected = 330
FAILED! hand count = 390, expected = 389
FAILED! * deck count = 449, expected = 450
FAILED! hand count = 11, expected = 10
FAILED! * deck count = 132, expected = 133
FAILED! hand count = 183, expected = 182
FAILED! * deck count = 381, expected = 382
FAILED! hand count = 210, expected = 209
FAILED! * deck count = 159, expected = 160
FAILED! hand count = 340, expected = 339
FAILED! * deck count = 438, expected = 439
FAILED! hand count = 452, expected = 451
FAILED! * deck count = 215, expected = 216
FAILED! hand count = 230, expected = 229
FAILED! * deck count = 375, expected = 376
FAILED! hand count = 328, expected = 327
FAILED! * deck count = 62, expected = 63
FAILED! hand count = 497, expected = 496
FAILED! * deck count = 59, expected = 60
FAILED! hand count = 463, expected = 462
FAILED! * deck count = 355, expected = 356
FAILED! hand count = 317, expected = 316
FAILED! * deck count = 216, expected = 217
FAILED! hand count = 304, expected = 303
FAILED! * deck count = 267, expected = 268
FAILED! hand count = 261, expected = 260
FAILED! * deck count = 473, expected = 474
FAILED! hand count = 242, expected = 241
FAILED! * deck count = 65, expected = 66
FAILED! hand count = 5, expected = 4
FAILED! * deck count = 13, expected = 14
FAILED! hand count = 212, expected = 211
FAILED! * deck count = 278, expected = 279
FAILED! hand count = 369, expected = 368
FAILED! * deck count = 232, expected = 233
FAILED! hand count = 360, expected = 359
FAILED! * deck count = 83, expected = 84
FAILED! hand count = 251, expected = 250
FAILED! * deck count = 62, expected = 63
FAILED! hand count = 282, expected = 281
FAILED! * deck count = 296, expected = 297
FAILED! hand count = 228, expected = 227
FAILED! * deck count = 93, expected = 94
FAILED! hand count = 259, expected = 258
FAILED! * deck count = 222, expected = 223
FAILED! hand count = 305, expected = 304
FAILED! * deck count = 103, expected = 104
FAILED! hand count = 444, expected = 443
FAILED! * deck count = 46, expected = 47
FAILED! hand count = 257, expected = 256
FAILED! * deck count = 101, expected = 102
FAILED! hand count = 135, expected = 134
FAILED! * deck count = 228, expected = 229
FAILED! hand count = 344, expected = 343
FAILED! * deck count = 430, expected = 431
FAILED! hand count = 360, expected = 359
FAILED! * deck count = 463, expected = 464
FAILED! hand count = 208, expected = 207
FAILED! * deck count = 366, expected = 367
FAILED! hand count = 97, expected = 96
FAILED! * deck count = 388, expected = 389
FAILED! hand count = 46, expected = 45
FAILED! * deck count = 481, expected = 482
FAILED! hand count = 149, expected = 148
FAILED! * deck count = 53, expected = 54
FAILED! hand count = 265, expected = 264
FAILED! * deck count = 86, expected = 87
FAILED! hand count = 308, expected = 307
FAILED! * deck count = 312, expected = 313
FAILED! hand count = 193, expected = 192
FAILED! * deck count = 472, expected = 473
FAILED! hand count = 369, expected = 368
FAILED! * deck count = 128, expected = 129
FAILED! hand count = 463, expected = 462
FAILED! * deck count = 70, expected = 71
FAILED! hand count = 303, expected = 302
FAILED! * deck count = 84, expected = 85
FAILED! hand count = 319, expected = 318
FAILED! * deck count = 383, expected = 384
FAILED! hand count = 164, expected = 163
FAILED! * deck count = 249, expected = 250
FAILED! hand count = 419, expected = 418
FAILED! * deck count = 95, expected = 96
FAILED! hand count = 490, expected = 489
FAILED! * deck count = 302, expected = 303
FAILED! hand count = 29, expected = 28
FAILED! * deck count = 163, expected = 164
FAILED! hand count = 378, expected = 377
FAILED! * deck count = 234, expected = 235
FAILED! hand count = 412, expected = 411
FAILED! * deck count = 88, expected = 89
FAILED! hand count = 126, expected = 125
FAILED! * deck count = 99, expected = 100
FAILED! hand count = 138, expected = 137
FAILED! * deck count = 317, expected = 318
FAILED! hand count = 223, expected = 222
FAILED! * deck count = 223, expected = 224
FAILED! hand count = 98, expected = 97
FAILED! * deck count = 289, expected = 290
FAILED! hand count = 491, expected = 490
FAILED! * deck count = 33, expected = 34
FAILED! hand count = 49, expected = 48
FAILED! * deck count = 368, expected = 369
FAILED! hand count = 94, expected = 93
FAILED! * deck count = 336, expected = 337
FAILED! hand count = 333, expected = 332
FAILED! * deck count = 190, expected = 191
FAILED! hand count = 487, expected = 486
FAILED! * deck count = 83, expected = 84
FAILED! hand count = 275, expected = 274
FAILED! * deck count = 170, expected = 171
FAILED! hand count = 256, expected = 255
FAILED! * deck count = 162, expected = 163
FAILED! hand count = 480, expected = 479
FAILED! * deck count = 32, expected = 33
FAILED! hand count = 225, expected = 224
FAILED! * deck count = 168, expected = 169
FAILED! hand count = 159, expected = 158
FAILED! * deck count = 379, expected = 380
FAILED! hand count = 349, expected = 348
FAILED! * deck count = 315, expected = 316
FAILED! hand count = 280, expected = 279
FAILED! * deck count = 212, expected = 213
FAILED! hand count = 115, expected = 114
FAILED! * deck count = 74, expected = 75
FAILED! hand count = 131, expected = 130
FAILED! * deck count = 222, expected = 223
FAILED! hand count = 12, expected = 11
FAILED! * deck count = 492, expected = 493
FAILED! hand count = 141, expected = 140
FAILED! * deck count = 95, expected = 96
FAILED! hand count = 435, expected = 434
FAILED! * deck count = 452, expected = 453
FAILED! hand count = 343, expected = 342
FAILED! * deck count = 121, expected = 122
FAILED! hand count = 287, expected = 286
FAILED! * deck count = 416, expected = 417
FAILED! hand count = 174, expected = 173
FAILED! * deck count = 215, expected = 216
FAILED! hand count = 392, expected = 391
FAILED! * deck count = 35, expected = 36
FAILED! hand count = 257, expected = 256
FAILED! * deck count = 296, expected = 297
FAILED! hand count = 100, expected = 99
FAILED! * deck count = 172, expected = 173
FAILED! hand count = 501, expected = 500
FAILED! * deck count = 379, expected = 380
FAILED! hand count = 23, expected = 22
FAILED! * deck count = 366, expected = 367
FAILED! hand count = 357, expected = 356
FAILED! * deck count = 348, expected = 349
FAILED! hand count = 448, expected = 447
FAILED! * deck count = 115, expected = 116
FAILED! hand count = 35, expected = 34
FAILED! * deck count = 148, expected = 149
FAILED! hand count = 13, expected = 12
FAILED! * deck count = 206, expected = 207
FAILED! hand count = 83, expected = 82
FAILED! * deck count = 486, expected = 487
FAILED! hand count = 336, expected = 335
FAILED! * deck count = 200, expected = 201
FAILED! hand count = 464, expected = 463
FAILED! * deck count = 101, expected = 102
FAILED! hand count = 191, expected = 190
FAILED! * deck count = 283, expected = 284
FAILED! hand count = 276, expected = 275
FAILED! * deck count = 137, expected = 138
FAILED! hand count = 99, expected = 98
FAILED! * deck count = 213, expected = 214
FAILED! hand count = 91, expected = 90
FAILED! * deck count = 85, expected = 86
FAILED! hand count = 323, expected = 322
FAILED! * deck count = 453, expected = 454
FAILED! hand count = 53, expected = 52
FAILED! * deck count = 380, expected = 381
FAILED! hand count = 486, expected = 485
FAILED! * deck count = 50, expected = 51
FAILED! hand count = 185, expected = 184
FAILED! * deck count = 52, expected = 53
FAILED! hand count = 201, expected = 200
FAILED! * deck count = 484, expected = 485
FAILED! hand count = 96, expected = 95
FAILED! * deck count = 21, expected = 22
FAILED! hand count = 451, expected = 450
FAILED! * deck count = 494, expected = 495
FAILED! hand count = 483, expected = 482
FAILED! * deck count = 429, expected = 430
FAILED! hand count = 262, expected = 261
FAILED! * deck count = 173, expected = 174
FAILED! hand count = 59, expected = 58
FAILED! * deck count = 453, expected = 454
FAILED! hand count = 14, expected = 13
FAILED! * deck count = 481, expected = 482
FAILED! hand count = 122, expected = 121
FAILED! * deck count = 455, expected = 456
FAILED! hand count = 127, expected = 126
FAILED! * deck count = 333, expected = 334
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 427, expected = 428
FAILED! hand count = 405, expected = 404
FAILED! * deck count = 261, expected = 262
FAILED! hand count = 268, expected = 267
FAILED! * deck count = 221, expected = 222
FAILED! hand count = 88, expected = 87
FAILED! * deck count = 466, expected = 467
FAILED! hand count = 23, expected = 22
FAILED! * deck count = 486, expected = 487
FAILED! hand count = 175, expected = 174
FAILED! * deck count = 340, expected = 341
FAILED! hand count = 190, expected = 189
FAILED! * deck count = 424, expected = 425
FAILED! hand count = 500, expected = 499
FAILED! * deck count = 378, expected = 379
FAILED! hand count = 92, expected = 91
FAILED! * deck count = 398, expected = 399
FAILED! hand count = 110, expected = 109
FAILED! * deck count = 67, expected = 68
FAILED! hand count = 229, expected = 228
FAILED! * deck count = 174, expected = 175
FAILED! hand count = 447, expected = 446
FAILED! * deck count = 490, expected = 491
FAILED! hand count = 170, expected = 169
FAILED! * deck count = 349, expected = 350
FAILED! hand count = 59, expected = 58
FAILED! * deck count = 317, expected = 318
FAILED! hand count = 226, expected = 225
FAILED! * deck count = 6, expected = 7
FAILED! hand count = 196, expected = 195
FAILED! * deck count = 207, expected = 208
FAILED! hand count = 289, expected = 288
FAILED! * deck count = 235, expected = 236
FAILED! hand count = 321, expected = 320
FAILED! * deck count = 208, expected = 209
FAILED! hand count = 233, expected = 232
FAILED! * deck count = 396, expected = 397
FAILED! hand count = 280, expected = 279
FAILED! * deck count = 369, expected = 370
FAILED! hand count = 188, expected = 187
FAILED! * deck count = 128, expected = 129
FAILED! hand count = 233, expected = 232
FAILED! * deck count = 172, expected = 173
FAILED! hand count = 171, expected = 170
FAILED! * deck count = 437, expected = 438
FAILED! hand count = 323, expected = 322
FAILED! * deck count = 114, expected = 115
FAILED! hand count = 480, expected = 479
FAILED! * deck count = 115, expected = 116
FAILED! hand count = 341, expected = 340
FAILED! * deck count = 214, expected = 215
FAILED! hand count = 409, expected = 408
FAILED! * deck count = 52, expected = 53
FAILED! hand count = 288, expected = 287
FAILED! * deck count = 395, expected = 396
FAILED! hand count = 277, expected = 276
FAILED! * deck count = 6, expected = 7
FAILED! hand count = 229, expected = 228
FAILED! * deck count = 184, expected = 185
FAILED! hand count = 384, expected = 383
FAILED! * deck count = 58, expected = 59
FAILED! hand count = 102, expected = 101
FAILED! * deck count = 59, expected = 60
FAILED! hand count = 315, expected = 314
FAILED! * deck count = 87, expected = 88
FAILED! hand count = 215, expected = 214
FAILED! * deck count = 225, expected = 226
FAILED! hand count = 283, expected = 282
FAILED! * deck count = 418, expected = 419
FAILED! hand count = 502, expected = 501
FAILED! * deck count = 434, expected = 435
FAILED! hand count = 482, expected = 481
FAILED! * deck count = 467, expected = 468
FAILED! hand count = 103, expected = 102
FAILED! * deck count = 429, expected = 430
FAILED! hand count = 392, expected = 391
FAILED! * deck count = 255, expected = 256
FAILED! hand count = 177, expected = 176
FAILED! * deck count = 309, expected = 310
FAILED! hand count = 354, expected = 353
FAILED! * deck count = 100, expected = 101
FAILED! hand count = 105, expected = 104
FAILED! * deck count = 122, expected = 123
FAILED! hand count = 366, expected = 365
FAILED! * deck count = 118, expected = 119
FAILED! hand count = 341, expected = 340
FAILED! * deck count = 185, expected = 186
FAILED! hand count = 412, expected = 411
FAILED! * deck count = 265, expected = 266
FAILED! hand count = 347, expected = 346
FAILED! * deck count = 185, expected = 186
FAILED! hand count = 256, expected = 255
FAILED! * deck count = 434, expected = 435
FAILED! hand count = 476, expected = 475
FAILED! * deck count = 82, expected = 83
FAILED! hand count = 251, expected = 250
FAILED! * deck count = 373, expected = 374
FAILED! hand count = 54, expected = 53
FAILED! * deck count = 66, expected = 67
FAILED! hand count = 45, expected = 44
FAILED! * deck count = 479, expected = 480
FAILED! hand count = 110, expected = 109
FAILED! * deck count = 51, expected = 52
FAILED! hand count = 137, expected = 136
FAILED! * deck count = 25, expected = 26
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 94, expected = 95
FAILED! hand count = 194, expected = 193
FAILED! * deck count = 361, expected = 362
FAILED! hand count = 88, expected = 87
FAILED! * deck count = 373, expected = 374
FAILED! hand count = 472, expected = 471
FAILED! * deck count = 25, expected = 26
FAILED! hand count = 47, expected = 46
FAILED! * deck count = 368, expected = 369
FAILED! hand count = 73, expected = 72
FAILED! * deck count = 435, expected = 436
FAILED! hand count = 176, expected = 175
FAILED! * deck count = 377, expected = 378
FAILED! hand count = 434, expected = 433
FAILED! * deck count = 410, expected = 411
FAILED! hand count = 322, expected = 321
FAILED! * deck count = 352, expected = 353
FAILED! hand count = 176, expected = 175
FAILED! * deck count = 35, expected = 36
FAILED! hand count = 287, expected = 286
FAILED! * deck count = 445, expected = 446
FAILED! hand count = 262, expected = 261
FAILED! * deck count = 164, expected = 165
FAILED! hand count = 150, expected = 149
FAILED! * deck count = 117, expected = 118
FAILED! hand count = 413, expected = 412
FAILED! * deck count = 127, expected = 128
FAILED! hand count = 55, expected = 54
FAILED! * deck count = 6, expected = 7
FAILED! hand count = 152, expected = 151
FAILED! * deck count = 295, expected = 296
FAILED! hand count = 411, expected = 410
FAILED! * deck count = 212, expected = 213
FAILED! hand count = 286, expected = 285
FAILED! * deck count = 228, expected = 229
FAILED! hand count = 284, expected = 283
FAILED! * deck count = 361, expected = 362
FAILED! hand count = 325, expected = 324
FAILED! * deck count = 468, expected = 469
FAILED! hand count = 202, expected = 201
FAILED! * deck count = 275, expected = 276
FAILED! hand count = 105, expected = 104
FAILED! * deck count = 464, expected = 465
FAILED! hand count = 474, expected = 473
FAILED! * deck count = 23, expected = 24
FAILED! hand count = 138, expected = 137
FAILED! * deck count = 213, expected = 214
FAILED! hand count = 453, expected = 452
FAILED! * deck count = 134, expected = 135
FAILED! hand count = 249, expected = 248
FAILED! * deck count = 429, expected = 430
FAILED! hand count = 48, expected = 47
FAILED! * deck count = 246, expected = 247
FAILED! hand count = 474, expected = 473
FAILED! * deck count = 413, expected = 414
FAILED! hand count = 79, expected = 78
FAILED! * deck count = 180, expected = 181
FAILED! hand count = 51, expected = 50
FAILED! * deck count = 97, expected = 98
FAILED! hand count = 434, expected = 433
FAILED! * deck count = 263, expected = 264
FAILED! hand count = 109, expected = 108
FAILED! * deck count = 119, expected = 120
FAILED! hand count = 383, expected = 382
FAILED! * deck count = 233, expected = 234
FAILED! hand count = 344, expected = 343
FAILED! * deck count = 403, expected = 404
FAILED! hand count = 16, expected = 15
FAILED! * deck count = 2, expected = 3
FAILED! hand count = 336, expected = 335
FAILED! * deck count = 454, expected = 455
FAILED! hand count = 395, expected = 394
FAILED! * deck count = 93, expected = 94
FAILED! hand count = 14, expected = 13
FAILED! * deck count = 50, expected = 51
FAILED! hand count = 193, expected = 192
FAILED! * deck count = 471, expected = 472
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 42, expected = 43
FAILED! hand count = 279, expected = 278
FAILED! * deck count = 443, expected = 444
FAILED! hand count = 332, expected = 331
FAILED! * deck count = 237, expected = 238
FAILED! hand count = 115, expected = 114
FAILED! * deck count = 489, expected = 490
FAILED! hand count = 391, expected = 390
FAILED! * deck count = 91, expected = 92
FAILED! hand count = 236, expected = 235
FAILED! * deck count = 65, expected = 66
FAILED! hand count = 263, expected = 262
FAILED! * deck count = 221, expected = 222
FAILED! hand count = 15, expected = 14
FAILED! * deck count = 87, expected = 88
FAILED! hand count = 356, expected = 355
FAILED! * deck count = 82, expected = 83
FAILED! hand count = 410, expected = 409
FAILED! * deck count = 323, expected = 324
FAILED! hand count = 276, expected = 275
FAILED! * deck count = 323, expected = 324
FAILED! hand count = 231, expected = 230
FAILED! * deck count = 183, expected = 184
FAILED! hand count = 357, expected = 356
FAILED! * deck count = 7, expected = 8
FAILED! hand count = 147, expected = 146
FAILED! * deck count = 376, expected = 377
FAILED! hand count = 294, expected = 293
FAILED! * deck count = 416, expected = 417
FAILED! hand count = 63, expected = 62
FAILED! * deck count = 78, expected = 79
FAILED! hand count = 347, expected = 346
FAILED! * deck count = 270, expected = 271
FAILED! hand count = 352, expected = 351
FAILED! * deck count = 113, expected = 114
FAILED! hand count = 246, expected = 245
FAILED! * deck count = 306, expected = 307
FAILED! hand count = 355, expected = 354
FAILED! * deck count = 129, expected = 130
FAILED! hand count = 84, expected = 83
FAILED! * deck count = 77, expected = 78
FAILED! hand count = 420, expected = 419
FAILED! * deck count = 193, expected = 194
FAILED! hand count = 67, expected = 66
FAILED! * deck count = 362, expected = 363
FAILED! hand count = 265, expected = 264
FAILED! * deck count = 182, expected = 183
FAILED! hand count = 116, expected = 115
FAILED! * deck count = 334, expected = 335
FAILED! hand count = 14, expected = 13
FAILED! * deck count = 308, expected = 309
FAILED! hand count = 334, expected = 333
FAILED! * deck count = 442, expected = 443
FAILED! hand count = 74, expected = 73
FAILED! * deck count = 387, expected = 388
FAILED! hand count = 136, expected = 135
FAILED! * deck count = 429, expected = 430
FAILED! hand count = 486, expected = 485
FAILED! * deck count = 397, expected = 398
FAILED! hand count = 221, expected = 220
FAILED! * deck count = 36, expected = 37
FAILED! hand count = 479, expected = 478
FAILED! * deck count = 99, expected = 100
FAILED! hand count = 411, expected = 410
FAILED! * deck count = 130, expected = 131
FAILED! hand count = 254, expected = 253
FAILED! * deck count = 102, expected = 103
FAILED! hand count = 86, expected = 85
FAILED! * deck count = 411, expected = 412
FAILED! hand count = 255, expected = 254
FAILED! * deck count = 467, expected = 468
FAILED! hand count = 40, expected = 39
FAILED! * deck count = 353, expected = 354
FAILED! hand count = 176, expected = 175
FAILED! * deck count = 316, expected = 317
FAILED! hand count = 56, expected = 55
FAILED! * deck count = 130, expected = 131
FAILED! hand count = 179, expected = 178
FAILED! * deck count = 67, expected = 68
FAILED! hand count = 44, expected = 43
FAILED! * deck count = 360, expected = 361
FAILED! hand count = 447, expected = 446
FAILED! * deck count = 176, expected = 177
FAILED! hand count = 495, expected = 494
FAILED! * deck count = 365, expected = 366
FAILED! hand count = 408, expected = 407
FAILED! * deck count = 110, expected = 111
FAILED! hand count = 221, expected = 220
FAILED! * deck count = 434, expected = 435
FAILED! hand count = 188, expected = 187
FAILED! * deck count = 259, expected = 260
FAILED! hand count = 322, expected = 321
FAILED! * deck count = 325, expected = 326
FAILED! hand count = 440, expected = 439
FAILED! * deck count = 418, expected = 419
FAILED! hand count = 482, expected = 481
FAILED! * deck count = 233, expected = 234
FAILED! hand count = 253, expected = 252
FAILED! * deck count = 167, expected = 168
FAILED! hand count = 107, expected = 106
FAILED! * deck count = 481, expected = 482
FAILED! hand count = 79, expected = 78
FAILED! * deck count = 370, expected = 371
FAILED! hand count = 80, expected = 79
FAILED! * deck count = 299, expected = 300
FAILED! hand count = 43, expected = 42
FAILED! * deck count = 342, expected = 343
FAILED! hand count = 356, expected = 355
FAILED! * deck count = 121, expected = 122
FAILED! hand count = 337, expected = 336
FAILED! * deck count = 421, expected = 422
FAILED! hand count = 60, expected = 59
FAILED! * deck count = 423, expected = 424
FAILED! hand count = 419, expected = 418
FAILED! * deck count = 89, expected = 90
FAILED! hand count = 305, expected = 304
FAILED! * deck count = 391, expected = 392
FAILED! hand count = 222, expected = 221
FAILED! * deck count = 141, expected = 142
FAILED! hand count = 349, expected = 348
FAILED! * deck count = 166, expected = 167
FAILED! hand count = 302, expected = 301
FAILED! * deck count = 352, expected = 353
FAILED! hand count = 183, expected = 182
FAILED! * deck count = 403, expected = 404
FAILED! hand count = 151, expected = 150
FAILED! * deck count = 362, expected = 363
FAILED! hand count = 11, expected = 10
FAILED! * deck count = 100, expected = 101
FAILED! hand count = 380, expected = 379
FAILED! * deck count = 479, expected = 480
FAILED! hand count = 333, expected = 332
FAILED! * deck count = 448, expected = 449
FAILED! hand count = 331, expected = 330
FAILED! * deck count = 164, expected = 165
FAILED! hand count = 406, expected = 405
FAILED! * deck count = 374, expected = 375
FAILED! hand count = 412, expected = 411
FAILED! * deck count = 102, expected = 103
FAILED! hand count = 450, expected = 449
FAILED! * deck count = 440, expected = 441
FAILED! hand count = 50, expected = 49
FAILED! * deck count = 97, expected = 98
FAILED! hand count = 362, expected = 361
FAILED! * deck count = 217, expected = 218
FAILED! hand count = 41, expected = 40
FAILED! * deck count = 35, expected = 36
FAILED! hand count = 37, expected = 36
FAILED! * deck count = 461, expected = 462
FAILED! hand count = 52, expected = 51
FAILED! * deck count = 322, expected = 323
FAILED! hand count = 467, expected = 466
FAILED! * deck count = 59, expected = 60
FAILED! hand count = 81, expected = 80
FAILED! * deck count = 350, expected = 351
FAILED! hand count = 5, expected = 4
FAILED! * deck count = 416, expected = 417
FAILED! hand count = 167, expected = 166
FAILED! * deck count = 485, expected = 486
FAILED! hand count = 450, expected = 449
FAILED! * deck count = 227, expected = 228
FAILED! hand count = 374, expected = 373
FAILED! * deck count = 21, expected = 22
FAILED! hand count = 26, expected = 25
FAILED! * deck count = 233, expected = 234
FAILED! hand count = 345, expected = 344
FAILED! * deck count = 263, expected = 264
FAILED! hand count = 63, expected = 62
FAILED! * deck count = 491, expected = 492
FAILED! hand count = 502, expected = 501
FAILED! * deck count = 454, expected = 455
FAILED! hand count = 9, expected = 8
FAILED! * deck count = 480, expected = 481
FAILED! hand count = 335, expected = 334
FAILED! * deck count = 267, expected = 268
FAILED! hand count = 496, expected = 495
FAILED! * deck count = 67, expected = 68
FAILED! hand count = 363, expected = 362
FAILED! * deck count = 255, expected = 256
FAILED! hand count = 62, expected = 61
FAILED! * deck count = 198, expected = 199
FAILED! hand count = 130, expected = 129
FAILED! * deck count = 212, expected = 213
FAILED! hand count = 231, expected = 230
FAILED! * deck count = 92, expected = 93
FAILED! hand count = 53, expected = 52
FAILED! * deck count = 191, expected = 192
FAILED! hand count = 423, expected = 422
FAILED! * deck count = 188, expected = 189
FAILED! hand count = 247, expected = 246
FAILED! * deck count = 265, expected = 266
FAILED! hand count = 298, expected = 297
FAILED! * deck count = 156, expected = 157
FAILED! hand count = 455, expected = 454
FAILED! * deck count = 445, expected = 446
FAILED! hand count = 270, expected = 269
FAILED! * deck count = 226, expected = 227
FAILED! hand count = 81, expected = 80
FAILED! hand count = 500, expected = 499
FAILED! *** deck count = 376, expected = 377
FAILED! * deck count = 281, expected = 282
FAILED! hand count = 182, expected = 181
FAILED! * deck count = 76, expected = 77
FAILED! hand count = 306, expected = 305
FAILED! * deck count = 139, expected = 140
FAILED! hand count = 401, expected = 400
FAILED! * deck count = 221, expected = 222
FAILED! hand count = 427, expected = 426
FAILED! * deck count = 109, expected = 110
FAILED! hand count = 114, expected = 113
FAILED! * deck count = 362, expected = 363
FAILED! hand count = 370, expected = 369
FAILED! * deck count = 313, expected = 314
FAILED! hand count = 61, expected = 60
FAILED! * deck count = 182, expected = 183
FAILED! hand count = 295, expected = 294
FAILED! * deck count = 413, expected = 414
FAILED! hand count = 30, expected = 29
FAILED! * deck count = 409, expected = 410
FAILED! hand count = 110, expected = 109
FAILED! * deck count = 219, expected = 220
FAILED! hand count = 84, expected = 83
FAILED! * deck count = 316, expected = 317
FAILED! hand count = 166, expected = 165
FAILED! * deck count = 428, expected = 429
FAILED! hand count = 268, expected = 267
FAILED! * deck count = 251, expected = 252
FAILED! hand count = 21, expected = 20
FAILED! * deck count = 464, expected = 465
FAILED! hand count = 99, expected = 98
FAILED! * deck count = 300, expected = 301
FAILED! hand count = 307, expected = 306
FAILED! * deck count = 247, expected = 248
FAILED! hand count = 399, expected = 398
FAILED! * deck count = 480, expected = 481
FAILED! hand count = 177, expected = 176
FAILED! * deck count = 129, expected = 130
FAILED! hand count = 409, expected = 408
FAILED! * deck count = 94, expected = 95
FAILED! hand count = 464, expected = 463
FAILED! * deck count = 454, expected = 455
FAILED! hand count = 180, expected = 179
FAILED! * deck count = 349, expected = 350
FAILED! hand count = 377, expected = 376
FAILED! * deck count = 437, expected = 438
FAILED! hand count = 228, expected = 227
FAILED! * deck count = 37, expected = 38
FAILED! hand count = 84, expected = 83
FAILED! * deck count = 216, expected = 217
FAILED! hand count = 332, expected = 331
FAILED! * deck count = 222, expected = 223
FAILED! hand count = 423, expected = 422
FAILED! * deck count = 283, expected = 284
FAILED! hand count = 203, expected = 202
FAILED! * deck count = 320, expected = 321
FAILED! hand count = 342, expected = 341
FAILED! * deck count = 412, expected = 413
FAILED! hand count = 105, expected = 104
FAILED! hand count = 229, expected = 228
FAILED! *** deck count = 480, expected = 481
FAILED! * deck count = 450, expected = 451
FAILED! hand count = 459, expected = 458
FAILED! * deck count = 318, expected = 319
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 96, expected = 97
FAILED! hand count = 419, expected = 418
FAILED! * deck count = 395, expected = 396
FAILED! hand count = 179, expected = 178
FAILED! * deck count = 337, expected = 338
FAILED! hand count = 369, expected = 368
FAILED! * deck count = 185, expected = 186
FAILED! hand count = 107, expected = 106
FAILED! * deck count = 338, expected = 339
FAILED! hand count = 209, expected = 208
FAILED! * deck count = 221, expected = 222
FAILED! hand count = 421, expected = 420
FAILED! * deck count = 69, expected = 70
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 380, expected = 381
FAILED! hand count = 379, expected = 378
FAILED! * deck count = 373, expected = 374
FAILED! hand count = 435, expected = 434
FAILED! * deck count = 84, expected = 85
FAILED! hand count = 170, expected = 169
FAILED! * deck count = 174, expected = 175
FAILED! hand count = 378, expected = 377
FAILED! * deck count = 147, expected = 148
FAILED! hand count = 485, expected = 484
FAILED! * deck count = 449, expected = 450
FAILED! hand count = 277, expected = 276
FAILED! * deck count = 17, expected = 18
FAILED! hand count = 202, expected = 201
FAILED! * deck count = 460, expected = 461
FAILED! hand count = 443, expected = 442
FAILED! * deck count = 64, expected = 65
FAILED! hand count = 104, expected = 103
FAILED! * deck count = 336, expected = 337
FAILED! hand count = 446, expected = 445
FAILED! * deck count = 332, expected = 333
FAILED! hand count = 146, expected = 145
FAILED! * deck count = 30, expected = 31
FAILED! hand count = 173, expected = 172
FAILED! * deck count = 156, expected = 157
FAILED! hand count = 272, expected = 271
FAILED! * deck count = 367, expected = 368
FAILED! hand count = 127, expected = 126
FAILED! * deck count = 444, expected = 445
FAILED! hand count = 373, expected = 372
FAILED! * deck count = 382, expected = 383
FAILED! hand count = 429, expected = 428
FAILED! * deck count = 376, expected = 377
FAILED! hand count = 370, expected = 369
FAILED! * deck count = 80, expected = 81
FAILED! hand count = 369, expected = 368
FAILED! * deck count = 244, expected = 245
FAILED! hand count = 194, expected = 193
FAILED! * deck count = 351, expected = 352
FAILED! hand count = 11, expected = 10
FAILED! * deck count = 86, expected = 87
FAILED! hand count = 106, expected = 105
FAILED! * deck count = 236, expected = 237
FAILED! hand count = 361, expected = 360
FAILED! * deck count = 12, expected = 13
FAILED! hand count = 33, expected = 32
FAILED! * deck count = 487, expected = 488
FAILED! hand count = 398, expected = 397
FAILED! * deck count = 266, expected = 267
FAILED! hand count = 437, expected = 436
FAILED! * deck count = 465, expected = 466
FAILED! hand count = 69, expected = 68
FAILED! * deck count = 488, expected = 489
FAILED! hand count = 19, expected = 18
FAILED! * deck count = 347, expected = 348
FAILED! hand count = 303, expected = 302
FAILED! * deck count = 330, expected = 331
FAILED! hand count = 58, expected = 57
FAILED! * deck count = 315, expected = 316
FAILED! hand count = 490, expected = 489
FAILED! * deck count = 320, expected = 321
FAILED! hand count = 175, expected = 174
FAILED! * deck count = 249, expected = 250
FAILED! hand count = 428, expected = 427
FAILED! * deck count = 84, expected = 85
FAILED! hand count = 296, expected = 295
FAILED! * deck count = 382, expected = 383
FAILED! hand count = 441, expected = 440
FAILED! * deck count = 223, expected = 224
FAILED! hand count = 98, expected = 97
FAILED! * deck count = 277, expected = 278
FAILED! hand count = 292, expected = 291
FAILED! * deck count = 14, expected = 15
FAILED! hand count = 192, expected = 191
FAILED! * deck count = 19, expected = 20
FAILED! hand count = 259, expected = 258
FAILED! * deck count = 196, expected = 197
FAILED! hand count = 483, expected = 482
FAILED! * deck count = 65, expected = 66
FAILED! hand count = 141, expected = 140
FAILED! * deck count = 127, expected = 128
FAILED! hand count = 329, expected = 328
FAILED! * deck count = 461, expected = 462
FAILED! hand count = 391, expected = 390
FAILED! * deck count = 240, expected = 241
FAILED! hand count = 489, expected = 488
FAILED! * deck count = 143, expected = 144
FAILED! hand count = 61, expected = 60
FAILED! * deck count = 343, expected = 344
FAILED! hand count = 337, expected = 336
FAILED! * deck count = 22, expected = 23
FAILED! hand count = 226, expected = 225
FAILED! * deck count = 435, expected = 436
FAILED! hand count = 224, expected = 223
FAILED! * deck count = 175, expected = 176
FAILED! hand count = 252, expected = 251
FAILED! * deck count = 6, expected = 7
FAILED! hand count = 180, expected = 179
FAILED! * deck count = 422, expected = 423
FAILED! hand count = 194, expected = 193
FAILED! * deck count = 477, expected = 478
FAILED! hand count = 11, expected = 10
FAILED! * deck count = 169, expected = 170
FAILED! hand count = 229, expected = 228
FAILED! * deck count = 69, expected = 70
FAILED! hand count = 474, expected = 473
FAILED! * deck count = 123, expected = 124
FAILED! hand count = 414, expected = 413
FAILED! * deck count = 380, expected = 381
FAILED! hand count = 22, expected = 21
FAILED! * deck count = 393, expected = 394
FAILED! hand count = 195, expected = 194
FAILED! * deck count = 98, expected = 99
FAILED! hand count = 273, expected = 272
FAILED! * deck count = 152, expected = 153
FAILED! hand count = 446, expected = 445
FAILED! * deck count = 86, expected = 87
FAILED! hand count = 491, expected = 490
FAILED! * deck count = 376, expected = 377
FAILED! hand count = 212, expected = 211
FAILED! * deck count = 391, expected = 392
FAILED! hand count = 152, expected = 151
FAILED! * deck count = 418, expected = 419
FAILED! hand count = 317, expected = 316
FAILED! * deck count = 21, expected = 22
FAILED! hand count = 89, expected = 88
FAILED! * deck count = 116, expected = 117
FAILED! hand count = 137, expected = 136
FAILED! * deck count = 207, expected = 208
FAILED! hand count = 46, expected = 45
FAILED! * deck count = 202, expected = 203
FAILED! hand count = 266, expected = 265
FAILED! * deck count = 258, expected = 259
FAILED! hand count = 317, expected = 316
FAILED! * deck count = 30, expected = 31
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 191, expected = 192
FAILED! hand count = 281, expected = 280
FAILED! * deck count = 485, expected = 486
FAILED! hand count = 498, expected = 497
FAILED! * deck count = 84, expected = 85
FAILED! hand count = 282, expected = 281
FAILED! * deck count = 110, expected = 111
FAILED! hand count = 356, expected = 355
FAILED! * deck count = 392, expected = 393
FAILED! hand count = 81, expected = 80
FAILED! * deck count = 55, expected = 56
FAILED! hand count = 35, expected = 34
FAILED! * deck count = 478, expected = 479
FAILED! hand count = 178, expected = 177
FAILED! * deck count = 372, expected = 373
FAILED! hand count = 386, expected = 385
FAILED! * deck count = 114, expected = 115
FAILED! hand count = 462, expected = 461
FAILED! * deck count = 153, expected = 154
FAILED! hand count = 110, expected = 109
FAILED! * deck count = 124, expected = 125
FAILED! hand count = 114, expected = 113
FAILED! * deck count = 295, expected = 296
FAILED! hand count = 111, expected = 110
FAILED! * deck count = 107, expected = 108
FAILED! hand count = 369, expected = 368
FAILED! * deck count = 416, expected = 417
FAILED! hand count = 461, expected = 460
FAILED! * deck count = 279, expected = 280
FAILED! hand count = 139, expected = 138
FAILED! * deck count = 57, expected = 58
FAILED! hand count = 180, expected = 179
FAILED! * deck count = 285, expected = 286
FAILED! hand count = 136, expected = 135
FAILED! * deck count = 435, expected = 436
FAILED! hand count = 308, expected = 307
FAILED! * deck count = 112, expected = 113
FAILED! hand count = 473, expected = 472
FAILED! * deck count = 83, expected = 84
FAILED! hand count = 225, expected = 224
FAILED! * deck count = 197, expected = 198
FAILED! hand count = 367, expected = 366
FAILED! * deck count = 213, expected = 214
FAILED! hand count = 137, expected = 136
FAILED! * deck count = 181, expected = 182
FAILED! hand count = 434, expected = 433
FAILED! * deck count = 351, expected = 352
FAILED! hand count = 326, expected = 325
FAILED! * deck count = 17, expected = 18
FAILED! hand count = 367, expected = 366
FAILED! * deck count = 346, expected = 347
FAILED! hand count = 210, expected = 209
FAILED! * deck count = 216, expected = 217
FAILED! hand count = 491, expected = 490
FAILED! * deck count = 163, expected = 164
FAILED! hand count = 377, expected = 376
FAILED! * deck count = 251, expected = 252
FAILED! hand count = 262, expected = 261
FAILED! * deck count = 300, expected = 301
FAILED! hand count = 88, expected = 87
FAILED! * deck count = 486, expected = 487
FAILED! hand count = 413, expected = 412
FAILED! * deck count = 385, expected = 386
FAILED! hand count = 153, expected = 152
FAILED! * deck count = 433, expected = 434
FAILED! hand count = 217, expected = 216
FAILED! * deck count = 225, expected = 226
FAILED! hand count = 60, expected = 59
FAILED! * deck count = 136, expected = 137
FAILED! hand count = 69, expected = 68
FAILED! * deck count = 284, expected = 285
FAILED! hand count = 96, expected = 95
FAILED! * deck count = 215, expected = 216
FAILED! hand count = 494, expected = 493
FAILED! * deck count = 171, expected = 172
FAILED! hand count = 76, expected = 75
FAILED! * deck count = 74, expected = 75
FAILED! hand count = 142, expected = 141
FAILED! * deck count = 173, expected = 174
FAILED! hand count = 334, expected = 333
FAILED! * deck count = 306, expected = 307
FAILED! hand count = 391, expected = 390
FAILED! * deck count = 120, expected = 121
FAILED! hand count = 395, expected = 394
FAILED! * deck count = 211, expected = 212
FAILED! hand count = 185, expected = 184
FAILED! * deck count = 136, expected = 137
FAILED! hand count = 378, expected = 377
FAILED! * deck count = 150, expected = 151
FAILED! hand count = 276, expected = 275
FAILED! * deck count = 128, expected = 129
FAILED! hand count = 472, expected = 471
FAILED! * deck count = 166, expected = 167
FAILED! hand count = 152, expected = 151
FAILED! * deck count = 163, expected = 164
FAILED! hand count = 191, expected = 190
FAILED! * deck count = 237, expected = 238
FAILED! hand count = 62, expected = 61
FAILED! * deck count = 228, expected = 229
FAILED! hand count = 42, expected = 41
FAILED! * deck count = 94, expected = 95
FAILED! hand count = 146, expected = 145
FAILED! * deck count = 404, expected = 405
FAILED! hand count = 267, expected = 266
FAILED! * deck count = 90, expected = 91
FAILED! hand count = 35, expected = 34
FAILED! * deck count = 449, expected = 450
FAILED! hand count = 148, expected = 147
FAILED! * deck count = 124, expected = 125
FAILED! hand count = 431, expected = 430
FAILED! * deck count = 26, expected = 27
FAILED! hand count = 259, expected = 258
FAILED! * deck count = 385, expected = 386
FAILED! hand count = 484, expected = 483
FAILED! * deck count = 286, expected = 287
FAILED! hand count = 367, expected = 366
FAILED! * deck count = 54, expected = 55
FAILED! hand count = 412, expected = 411
FAILED! * deck count = 348, expected = 349
FAILED! hand count = 284, expected = 283
FAILED! * deck count = 353, expected = 354
FAILED! hand count = 261, expected = 260
FAILED! * deck count = 350, expected = 351
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 72, expected = 73
FAILED! hand count = 388, expected = 387
FAILED! * deck count = 50, expected = 51
FAILED! hand count = 219, expected = 218
FAILED! * deck count = 273, expected = 274
FAILED! hand count = 162, expected = 161
FAILED! * deck count = 53, expected = 54
FAILED! hand count = 51, expected = 50
FAILED! * deck count = 42, expected = 43
FAILED! hand count = 84, expected = 83
FAILED! * deck count = 153, expected = 154
FAILED! hand count = 256, expected = 255
FAILED! * deck count = 290, expected = 291
FAILED! hand count = 128, expected = 127
FAILED! * deck count = 279, expected = 280
FAILED! hand count = 362, expected = 361
FAILED! * deck count = 383, expected = 384
FAILED! hand count = 352, expected = 351
FAILED! * deck count = 0, expected = 1
FAILED! hand count = 267, expected = 266
FAILED! * deck count = 318, expected = 319
FAILED! hand count = 88, expected = 87
FAILED! * deck count = 116, expected = 117
FAILED! hand count = 17, expected = 16
FAILED! * deck count = 148, expected = 149
FAILED! hand count = 204, expected = 203
FAILED! * deck count = 41, expected = 42
FAILED! hand count = 134, expected = 133
FAILED! * deck count = 408, expected = 409
FAILED! hand count = 188, expected = 187
FAILED! * deck count = 131, expected = 132
FAILED! hand count = 469, expected = 468
FAILED! * deck count = 223, expected = 224
FAILED! hand count = 225, expected = 224
FAILED! * deck count = 72, expected = 73
FAILED! hand count = 178, expected = 177
FAILED! * deck count = 355, expected = 356
FAILED! hand count = 380, expected = 379
FAILED! * deck count = 453, expected = 454
FAILED! hand count = 120, expected = 119
FAILED! * deck count = 264, expected = 265
FAILED! hand count = 459, expected = 458
FAILED! * deck count = 374, expected = 375
FAILED! hand count = 305, expected = 304
FAILED! * deck count = 343, expected = 344
FAILED! hand count = 155, expected = 154
FAILED! * deck count = 25, expected = 26
FAILED! hand count = 396, expected = 395
FAILED! * deck count = 469, expected = 470
FAILED! hand count = 188, expected = 187
FAILED! * deck count = 428, expected = 429
FAILED! hand count = 371, expected = 370
FAILED! * deck count = 454, expected = 455
FAILED! hand count = 389, expected = 388
FAILED! * deck count = 385, expected = 386
FAILED! hand count = 266, expected = 265
FAILED! * deck count = 288, expected = 289
FAILED! hand count = 255, expected = 254
FAILED! * deck count = 355, expected = 356
FAILED! hand count = 342, expected = 341
FAILED! * deck count = 105, expected = 106
FAILED! hand count = 206, expected = 205
FAILED! * deck count = 388, expected = 389
FAILED! hand count = 319, expected = 318
FAILED! * deck count = 438, expected = 439
FAILED! hand count = 315, expected = 314
FAILED! * deck count = 124, expected = 125
FAILED! hand count = 178, expected = 177
FAILED! * deck count = 193, expected = 194
FAILED! hand count = 152, expected = 151
FAILED! * deck count = 25, expected = 26
FAILED! hand count = 228, expected = 227
FAILED! * deck count = 465, expected = 466
FAILED! hand count = 399, expected = 398
FAILED! * deck count = 193, expected = 194
FAILED! hand count = 114, expected = 113
FAILED! * deck count = 63, expected = 64
FAILED! hand count = 189, expected = 188
FAILED! * deck count = 382, expected = 383
FAILED! hand count = 245, expected = 244
FAILED! * deck count = 298, expected = 299
FAILED! hand count = 159, expected = 158
FAILED! * deck count = 233, expected = 234
FAILED! hand count = 424, expected = 423
FAILED! * deck count = 222, expected = 223
FAILED! hand count = 68, expected = 67
FAILED! * deck count = 128, expected = 129
FAILED! hand count = 343, expected = 342
FAILED! * deck count = 141, expected = 142
FAILED! hand count = 363, expected = 362
FAILED! * deck count = 150, expected = 151
FAILED! hand count = 122, expected = 121
FAILED! * deck count = 15, expected = 16
FAILED! hand count = 495, expected = 494
FAILED! * deck count = 377, expected = 378
FAILED! hand count = 199, expected = 198
FAILED! * deck count = 245, expected = 246
FAILED! hand count = 216, expected = 215
FAILED! * deck count = 232, expected = 233
FAILED! hand count = 188, expected = 187
FAILED! * deck count = 469, expected = 470
FAILED! hand count = 184, expected = 183
FAILED! * deck count = 185, expected = 186
FAILED! hand count = 119, expected = 118
FAILED! * deck count = 294, expected = 295
FAILED! hand count = 378, expected = 377
FAILED! * deck count = 406, expected = 407
FAILED! hand count = 49, expected = 48
FAILED! * deck count = 323, expected = 324
FAILED! hand count = 456, expected = 455
FAILED! * deck count = 135, expected = 136
FAILED! hand count = 187, expected = 186
FAILED! * deck count = 84, expected = 85
FAILED! hand count = 479, expected = 478
FAILED! * deck count = 158, expected = 159
FAILED! hand count = 470, expected = 469
FAILED! * deck count = 313, expected = 314
FAILED! hand count = 236, expected = 235
FAILED! * deck count = 385, expected = 386
FAILED! hand count = 481, expected = 480
FAILED! * deck count = 110, expected = 111
FAILED! hand count = 483, expected = 482
FAILED! * deck count = 28, expected = 29
FAILED! hand count = 101, expected = 100
FAILED! * deck count = 410, expected = 411
FAILED! hand count = 257, expected = 256
FAILED! * deck count = 266, expected = 267
FAILED! hand count = 228, expected = 227
FAILED! * deck count = 432, expected = 433
FAILED! hand count = 484, expected = 483
FAILED! * deck count = 161, expected = 162
FAILED! hand count = 501, expected = 500
FAILED! * deck count = 133, expected = 134
FAILED! hand count = 337, expected = 336
FAILED! * deck count = 374, expected = 375
FAILED! hand count = 215, expected = 214
FAILED! * deck count = 21, expected = 22
FAILED! hand count = 144, expected = 143
FAILED! * deck count = 73, expected = 74
FAILED! hand count = 497, expected = 496
FAILED! * deck count = 399, expected = 400
FAILED! hand count = 129, expected = 128
FAILED! * deck count = 227, expected = 228
FAILED! hand count = 115, expected = 114
FAILED! * deck count = 242, expected = 243
FAILED! hand count = 329, expected = 328
FAILED! * deck count = 255, expected = 256
FAILED! hand count = 138, expected = 137
FAILED! * deck count = 373, expected = 374
FAILED! hand count = 233, expected = 232
FAILED! * deck count = 484, expected = 485
FAILED! hand count = 99, expected = 98
FAILED! * deck count = 31, expected = 32
FAILED! hand count = 35, expected = 34
FAILED! * deck count = 288, expected = 289
FAILED! hand count = 53, expected = 52
FAILED! * deck count = 84, expected = 85
FAILED! hand count = 35, expected = 34
FAILED! * deck count = 121, expected = 122
FAILED! hand count = 63, expected = 62
FAILED! * deck count = 209, expected = 210
FAILED! hand count = 92, expected = 91
FAILED! * deck count = 218, expected = 219
FAILED! hand count = 88, expected = 87
FAILED! * deck count = 244, expected = 245
FAILED! hand count = 135, expected = 134
FAILED! * deck count = 476, expected = 477
FAILED! hand count = 112, expected = 111
FAILED! * deck count = 143, expected = 144
FAILED! hand count = 98, expected = 97
FAILED! * deck count = 443, expected = 444
FAILED! hand count = 367, expected = 366
FAILED! * deck count = 484, expected = 485
FAILED! hand count = 114, expected = 113
FAILED! * deck count = 328, expected = 329
FAILED! hand count = 402, expected = 401
FAILED! * deck count = 156, expected = 157
FAILED! hand count = 191, expected = 190
FAILED! * deck count = 271, expected = 272
FAILED! hand count = 92, expected = 91
FAILED! * deck count = 273, expected = 274
FAILED! hand count = 317, expected = 316
FAILED! * deck count = 20, expected = 21
FAILED! hand count = 216, expected = 215
FAILED! * deck count = 305, expected = 306
FAILED! hand count = 272, expected = 271
FAILED! * deck count = 399, expected = 400
FAILED! hand count = 87, expected = 86
FAILED! * deck count = 469, expected = 470
FAILED! hand count = 88, expected = 87
FAILED! * deck count = 40, expected = 41
FAILED! hand count = 472, expected = 471
FAILED! * deck count = 353, expected = 354
FAILED! hand count = 4, expected = 3
FAILED! * deck count = 262, expected = 263
FAILED! hand count = 81, expected = 80
FAILED! * deck count = 27, expected = 28
FAILED! hand count = 36, expected = 35
FAILED! * deck count = 448, expected = 449
FAILED! hand count = 439, expected = 438
FAILED! * deck count = 42, expected = 43
FAILED! hand count = 383, expected = 382
FAILED! * deck count = 278, expected = 279
FAILED! hand count = 238, expected = 237
FAILED! * deck count = 289, expected = 290
FAILED! hand count = 430, expected = 429
FAILED! * deck count = 237, expected = 238
FAILED! hand count = 408, expected = 407
FAILED! * deck count = 98, expected = 99
FAILED! hand count = 354, expected = 353
FAILED! * deck count = 267, expected = 268
FAILED! hand count = 180, expected = 179
FAILED! * deck count = 213, expected = 214
FAILED! hand count = 305, expected = 304
FAILED! * deck count = 181, expected = 182
FAILED! hand count = 307, expected = 306
FAILED! * deck count = 263, expected = 264
FAILED! hand count = 233, expected = 232
FAILED! * deck count = 420, expected = 421
FAILED! hand count = 10, expected = 9
FAILED! * deck count = 129, expected = 130
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 135, expected = 136
FAILED! hand count = 104, expected = 103
FAILED! * deck count = 473, expected = 474
FAILED! hand count = 131, expected = 130
FAILED! * deck count = 457, expected = 458
FAILED! hand count = 266, expected = 265
FAILED! * deck count = 424, expected = 425
FAILED! hand count = 25, expected = 24
FAILED! * deck count = 331, expected = 332
FAILED! hand count = 474, expected = 473
FAILED! * deck count = 204, expected = 205
FAILED! hand count = 148, expected = 147
FAILED! * deck count = 485, expected = 486
FAILED! hand count = 263, expected = 262
FAILED! * deck count = 109, expected = 110
FAILED! hand count = 12, expected = 11
FAILED! * deck count = 62, expected = 63
FAILED! hand count = 462, expected = 461
FAILED! * deck count = 32, expected = 33
FAILED! hand count = 75, expected = 74
FAILED! * deck count = 429, expected = 430
FAILED! hand count = 32, expected = 31
FAILED! * deck count = 312, expected = 313
FAILED! hand count = 135, expected = 134
FAILED! * deck count = 279, expected = 280
FAILED! hand count = 322, expected = 321
FAILED! hand count = 408, expected = 407
FAILED! *** deck count = 398, expected = 399
FAILED! * deck count = 147, expected = 148
FAILED! hand count = 251, expected = 250
FAILED! * deck count = 461, expected = 462
FAILED! hand count = 289, expected = 288
FAILED! * deck count = 4, expected = 5
FAILED! hand count = 296, expected = 295
FAILED! * deck count = 420, expected = 421
FAILED! hand count = 342, expected = 341
FAILED! * deck count = 217, expected = 218
FAILED! hand count = 16, expected = 15
FAILED! * deck count = 444, expected = 445
FAILED! hand count = 318, expected = 317
FAILED! * deck count = 86, expected = 87
FAILED! hand count = 358, expected = 357
FAILED! * deck count = 105, expected = 106
FAILED! hand count = 68, expected = 67
FAILED! * deck count = 426, expected = 427
FAILED! hand count = 354, expected = 353
FAILED! * deck count = 139, expected = 140
FAILED! hand count = 478, expected = 477
FAILED! * deck count = 213, expected = 214
FAILED! hand count = 187, expected = 186
FAILED! * deck count = 458, expected = 459
FAILED! hand count = 4, expected = 3
FAILED! * deck count = 228, expected = 229
FAILED! hand count = 492, expected = 491
FAILED! * deck count = 495, expected = 496
FAILED! hand count = 263, expected = 262
FAILED! * deck count = 263, expected = 264
FAILED! hand count = 487, expected = 486
FAILED! * deck count = 352, expected = 353
FAILED! hand count = 319, expected = 318
FAILED! * deck count = 161, expected = 162
FAILED! hand count = 475, expected = 474
FAILED! * deck count = 314, expected = 315
FAILED! hand count = 409, expected = 408
FAILED! * deck count = 205, expected = 206
FAILED! hand count = 387, expected = 386
FAILED! * deck count = 367, expected = 368
FAILED! hand count = 120, expected = 119
FAILED! * deck count = 148, expected = 149
FAILED! hand count = 157, expected = 156
FAILED! * deck count = 488, expected = 489
FAILED! hand count = 190, expected = 189
FAILED! * deck count = 205, expected = 206
FAILED! hand count = 259, expected = 258
FAILED! * deck count = 393, expected = 394
FAILED! hand count = 358, expected = 357
FAILED! * deck count = 149, expected = 150
FAILED! hand count = 187, expected = 186
FAILED! * deck count = 15, expected = 16
FAILED! hand count = 159, expected = 158
FAILED! * deck count = 376, expected = 377
FAILED! hand count = 233, expected = 232
FAILED! * deck count = 362, expected = 363
FAILED! hand count = 188, expected = 187
FAILED! * deck count = 179, expected = 180
FAILED! hand count = 431, expected = 430
FAILED! * deck count = 102, expected = 103
FAILED! hand count = 230, expected = 229
FAILED! * deck count = 51, expected = 52
FAILED! hand count = 194, expected = 193
FAILED! * deck count = 143, expected = 144
FAILED! hand count = 356, expected = 355
FAILED! * deck count = 243, expected = 244
FAILED! hand count = 18, expected = 17
FAILED! * deck count = 267, expected = 268
FAILED! hand count = 382, expected = 381
FAILED! * deck count = 105, expected = 106
FAILED! hand count = 317, expected = 316
FAILED! * deck count = 98, expected = 99
FAILED! hand count = 414, expected = 413
FAILED! * deck count = 424, expected = 425
FAILED! hand count = 406, expected = 405
FAILED! * deck count = 311, expected = 312
FAILED! hand count = 72, expected = 71
FAILED! hand count = 208, expected = 207
FAILED! *** deck count = 452, expected = 453
FAILED! * deck count = 251, expected = 252
FAILED! hand count = 111, expected = 110
FAILED! * deck count = 468, expected = 469
FAILED! hand count = 22, expected = 21
FAILED! * deck count = 288, expected = 289
FAILED! hand count = 271, expected = 270
FAILED! * deck count = 488, expected = 489
FAILED! hand count = 165, expected = 164
FAILED! * deck count = 240, expected = 241
FAILED! hand count = 464, expected = 463
FAILED! * deck count = 343, expected = 344
FAILED! hand count = 379, expected = 378
FAILED! * deck count = 99, expected = 100
FAILED! hand count = 432, expected = 431
FAILED! * deck count = 17, expected = 18
FAILED! hand count = 159, expected = 158
FAILED! * deck count = 285, expected = 286
FAILED! hand count = 149, expected = 148
FAILED! * deck count = 221, expected = 222
FAILED! hand count = 147, expected = 146
FAILED! * deck count = 441, expected = 442
FAILED! hand count = 342, expected = 341
FAILED! * deck count = 2, expected = 3
FAILED! hand count = 385, expected = 384
FAILED! * deck count = 264, expected = 265
FAILED! hand count = 94, expected = 93
FAILED! * deck count = 333, expected = 334
FAILED! hand count = 223, expected = 222
FAILED! * deck count = 487, expected = 488
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 488, expected = 489
FAILED! hand count = 445, expected = 444
FAILED! * deck count = 107, expected = 108
FAILED! hand count = 383, expected = 382
FAILED! * deck count = 205, expected = 206
FAILED! hand count = 368, expected = 367
FAILED! * deck count = 266, expected = 267
FAILED! hand count = 257, expected = 256
FAILED! * deck count = 12, expected = 13
FAILED! hand count = 18, expected = 17
FAILED! * deck count = 334, expected = 335
FAILED! hand count = 42, expected = 41
FAILED! * deck count = 144, expected = 145
FAILED! hand count = 501, expected = 500
FAILED! * deck count = 330, expected = 331
FAILED! hand count = 320, expected = 319
FAILED! * deck count = 317, expected = 318
FAILED! hand count = 374, expected = 373
FAILED! * deck count = 374, expected = 375
FAILED! hand count = 197, expected = 196
FAILED! * deck count = 414, expected = 415
FAILED! hand count = 31, expected = 30
FAILED! * deck count = 275, expected = 276
FAILED! hand count = 320, expected = 319
FAILED! * deck count = 249, expected = 250
FAILED! hand count = 168, expected = 167
FAILED! * deck count = 337, expected = 338
FAILED! hand count = 423, expected = 422
FAILED! * deck count = 358, expected = 359
FAILED! hand count = 388, expected = 387
FAILED! * deck count = 91, expected = 92
FAILED! hand count = 457, expected = 456
FAILED! * deck count = 188, expected = 189
FAILED! hand count = 465, expected = 464
FAILED! * deck count = 46, expected = 0
FAILED! hand count = 412, expected = 411
FAILED! * deck count = 212, expected = 213
FAILED! hand count = 303, expected = 302
FAILED! * deck count = 336, expected = 337
FAILED! hand count = 74, expected = 73
FAILED! * deck count = 297, expected = 298
FAILED! hand count = 58, expected = 57
FAILED! * deck count = 87, expected = 88
FAILED! hand count = 322, expected = 321
FAILED! * deck count = 209, expected = 210
FAILED! hand count = 359, expected = 358
FAILED! * deck count = 369, expected = 370
FAILED! hand count = 103, expected = 102
FAILED! * deck count = 341, expected = 342
FAILED! hand count = 74, expected = 73
FAILED! * deck count = 8, expected = 9
FAILED! hand count = 343, expected = 342
FAILED! * deck count = 99, expected = 100
FAILED! hand count = 393, expected = 392
FAILED! * deck count = 21, expected = 22
FAILED! hand count = 337, expected = 336
FAILED! * deck count = 212, expected = 213
FAILED! hand count = 134, expected = 133
FAILED! * deck count = 460, expected = 461
FAILED! hand count = 35, expected = 34
FAILED! * deck count = 337, expected = 338
FAILED! hand count = 322, expected = 321
FAILED! * deck count = 435, expected = 436
FAILED! hand count = 486, expected = 485
FAILED! * deck count = 60, expected = 61
FAILED! hand count = 50, expected = 49
FAILED! * deck count = 264, expected = 265
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 86, expected = 87
FAILED! hand count = 466, expected = 465
FAILED! * deck count = 385, expected = 386
FAILED! hand count = 327, expected = 326
FAILED! * deck count = 443, expected = 444
FAILED! hand count = 502, expected = 501
FAILED! * deck count = 83, expected = 84
FAILED! hand count = 123, expected = 122
FAILED! * deck count = 30, expected = 31
FAILED! hand count = 59, expected = 58
FAILED! * deck count = 152, expected = 153
FAILED! hand count = 479, expected = 478
FAILED! * deck count = 204, expected = 205
FAILED! hand count = 451, expected = 450
FAILED! * deck count = 11, expected = 12
FAILED! hand count = 114, expected = 113
FAILED! * deck count = 36, expected = 37
FAILED! hand count = 205, expected = 204
FAILED! * deck count = 91, expected = 92
FAILED! hand count = 344, expected = 343
FAILED! * deck count = 330, expected = 331
FAILED! hand count = 68, expected = 67
FAILED! * deck count = 125, expected = 126
FAILED! hand count = 155, expected = 154
FAILED! * deck count = 140, expected = 141
FAILED! hand count = 437, expected = 436
FAILED! * deck count = 85, expected = 86
FAILED! hand count = 93, expected = 92
FAILED! * deck count = 129, expected = 130
FAILED! hand count = 467, expected = 466
FAILED! * deck count = 59, expected = 60
FAILED! hand count = 456, expected = 455
FAILED! * deck count = 94, expected = 95
FAILED! hand count = 398, expected = 397
FAILED! * deck count = 208, expected = 209
FAILED! hand count = 251, expected = 250
FAILED! * deck count = 438, expected = 439
FAILED! hand count = 362, expected = 361
FAILED! * deck count = 75, expected = 76
FAILED! hand count = 409, expected = 408
FAILED! * deck count = 489, expected = 490
FAILED! hand count = 254, expected = 253
FAILED! * deck count = 492, expected = 493
FAILED! hand count = 135, expected = 134
FAILED! * deck count = 495, expected = 496
FAILED! hand count = 81, expected = 80
FAILED! * deck count = 489, expected = 490
FAILED! hand count = 125, expected = 124
FAILED! * deck count = 271, expected = 272
FAILED! hand count = 90, expected = 89
FAILED! * deck count = 187, expected = 188
FAILED! hand count = 198, expected = 197
FAILED! * deck count = 457, expected = 458
FAILED! hand count = 256, expected = 255
FAILED! * deck count = 351, expected = 352
FAILED! hand count = 391, expected = 390
FAILED! * deck count = 315, expected = 316
FAILED! hand count = 174, expected = 173
FAILED! * deck count = 249, expected = 250
FAILED! hand count = 349, expected = 348
FAILED! * deck count = 439, expected = 440
FAILED! hand count = 317, expected = 316
FAILED! * deck count = 494, expected = 495
FAILED! hand count = 407, expected = 406
FAILED! * deck count = 386, expected = 387
FAILED! hand count = 308, expected = 307
FAILED! * deck count = 185, expected = 186
FAILED! hand count = 117, expected = 116
FAILED! * deck count = 180, expected = 181
FAILED! hand count = 132, expected = 131
FAILED! * deck count = 172, expected = 173
FAILED! hand count = 380, expected = 379
FAILED! * deck count = 8, expected = 9
FAILED! hand count = 469, expected = 468
FAILED! * deck count = 97, expected = 98
FAILED! hand count = 484, expected = 483
FAILED! * deck count = 405, expected = 406
FAILED! hand count = 315, expected = 314
FAILED! * deck count = 32, expected = 33
FAILED! hand count = 410, expected = 409
FAILED! * deck count = 228, expected = 229
FAILED! hand count = 411, expected = 410
FAILED! * deck count = 367, expected = 368
FAILED! hand count = 99, expected = 98
FAILED! * deck count = 447, expected = 448
FAILED! hand count = 11, expected = 10
FAILED! * deck count = 116, expected = 117
FAILED! hand count = 394, expected = 393
FAILED! * deck count = 434, expected = 435
FAILED! hand count = 139, expected = 138
FAILED! * deck count = 424, expected = 425
FAILED! hand count = 489, expected = 488
FAILED! * deck count = 346, expected = 347
FAILED! hand count = 270, expected = 269
FAILED! * deck count = 281, expected = 282
FAILED! hand count = 16, expected = 15
FAILED! * deck count = 455, expected = 456
FAILED! hand count = 362, expected = 361
FAILED! * deck count = 4, expected = 5
FAILED! hand count = 390, expected = 389
FAILED! * deck count = 466, expected = 467
FAILED! hand count = 455, expected = 454
FAILED! * deck count = 83, expected = 84
FAILED! hand count = 245, expected = 244
FAILED! * deck count = 169, expected = 170
FAILED! hand count = 38, expected = 37
FAILED! * deck count = 226, expected = 227
FAILED! hand count = 420, expected = 419
FAILED! * deck count = 175, expected = 176
FAILED! hand count = 487, expected = 486
FAILED! * deck count = 350, expected = 351
FAILED! hand count = 177, expected = 176
FAILED! * deck count = 164, expected = 165
FAILED! hand count = 162, expected = 161
FAILED! * deck count = 6, expected = 7
FAILED! hand count = 354, expected = 353
FAILED! * deck count = 483, expected = 484
FAILED! hand count = 14, expected = 13
FAILED! * deck count = 320, expected = 321
FAILED! hand count = 412, expected = 411
FAILED! * deck count = 453, expected = 454
FAILED! hand count = 436, expected = 435
FAILED! * deck count = 264, expected = 265
FAILED! hand count = 195, expected = 194
FAILED! * deck count = 303, expected = 304
FAILED! hand count = 46, expected = 45
FAILED! * deck count = 383, expected = 384
FAILED! hand count = 16, expected = 15
FAILED! * deck count = 176, expected = 177
FAILED! hand count = 162, expected = 161
FAILED! * deck count = 474, expected = 475
FAILED! hand count = 408, expected = 407
FAILED! * deck count = 109, expected = 110
FAILED! hand count = 88, expected = 87
FAILED! * deck count = 142, expected = 143
FAILED! hand count = 237, expected = 236
FAILED! * deck count = 173, expected = 174
FAILED! hand count = 265, expected = 264
FAILED! * deck count = 166, expected = 167
FAILED! hand count = 378, expected = 377
FAILED! * deck count = 449, expected = 450
FAILED! hand count = 497, expected = 496
FAILED! * deck count = 57, expected = 58
FAILED! hand count = 35, expected = 34
FAILED! * deck count = 213, expected = 214
FAILED! hand count = 84, expected = 83
FAILED! * deck count = 431, expected = 432
FAILED! hand count = 495, expected = 494
FAILED! * deck count = 209, expected = 210
FAILED! hand count = 305, expected = 304
FAILED! * deck count = 280, expected = 281
FAILED! hand count = 375, expected = 374
FAILED! * deck count = 99, expected = 100
FAILED! hand count = 414, expected = 413
FAILED! * deck count = 265, expected = 266
FAILED! hand count = 148, expected = 147
FAILED! * deck count = 349, expected = 350
FAILED! hand count = 433, expected = 432
FAILED! * deck count = 20, expected = 21
FAILED! hand count = 381, expected = 380
FAILED! * deck count = 16, expected = 17
FAILED! hand count = 169, expected = 168
FAILED! * deck count = 184, expected = 185
FAILED! hand count = 74, expected = 73
FAILED! * deck count = 331, expected = 332
FAILED! hand count = 309, expected = 308
FAILED! * deck count = 421, expected = 422
FAILED! hand count = 320, expected = 319
FAILED! * deck count = 307, expected = 308
FAILED! hand count = 288, expected = 287
FAILED! * deck count = 349, expected = 350
FAILED! hand count = 15, expected = 14
FAILED! * deck count = 335, expected = 336
FAILED! hand count = 175, expected = 174
FAILED! * deck count = 326, expected = 327
FAILED! hand count = 395, expected = 394
FAILED! * deck count = 144, expected = 145
FAILED! hand count = 148, expected = 147
FAILED! * deck count = 268, expected = 269
FAILED! hand count = 471, expected = 470
FAILED! * deck count = 129, expected = 130
FAILED! hand count = 370, expected = 369
FAILED! * deck count = 475, expected = 476
FAILED! hand count = 191, expected = 190
FAILED! * deck count = 25, expected = 26
FAILED! hand count = 33, expected = 32
FAILED! * deck count = 407, expected = 408
FAILED! hand count = 406, expected = 405
FAILED! hand count = 7, expected = 6
FAILED! *** deck count = 144, expected = 145
FAILED! * deck count = 130, expected = 131
FAILED! hand count = 193, expected = 192
FAILED! * deck count = 194, expected = 195
FAILED! hand count = 392, expected = 391
FAILED! * deck count = 5, expected = 6
FAILED! hand count = 475, expected = 474
FAILED! * deck count = 51, expected = 52
FAILED! hand count = 323, expected = 322
FAILED! * deck count = 283, expected = 284
FAILED! hand count = 373, expected = 372
FAILED! * deck count = 408, expected = 409
FAILED! hand count = 145, expected = 144
FAILED! * deck count = 300, expected = 301
FAILED! hand count = 93, expected = 92
FAILED! * deck count = 171, expected = 172
FAILED! hand count = 252, expected = 251
FAILED! * deck count = 168, expected = 169
FAILED! hand count = 361, expected = 360
FAILED! * deck count = 120, expected = 121
FAILED! hand count = 451, expected = 450
FAILED! * deck count = 175, expected = 176
FAILED! hand count = 30, expected = 29
FAILED! * deck count = 418, expected = 419
FAILED! hand count = 230, expected = 229
FAILED! * deck count = 94, expected = 95
FAILED! hand count = 142, expected = 141
FAILED! * deck count = 422, expected = 423
FAILED! hand count = 430, expected = 429
FAILED! * deck count = 255, expected = 256
FAILED! hand count = 234, expected = 233
FAILED! * deck count = 110, expected = 111
FAILED! hand count = 160, expected = 159
FAILED! * deck count = 383, expected = 384
FAILED! hand count = 147, expected = 146
FAILED! * deck count = 26, expected = 27
FAILED! hand count = 101, expected = 100
FAILED! * deck count = 263, expected = 264
FAILED! hand count = 32, expected = 31
FAILED! * deck count = 174, expected = 175
FAILED! hand count = 236, expected = 235
FAILED! * deck count = 306, expected = 307
FAILED! hand count = 424, expected = 423
FAILED! * deck count = 446, expected = 447
FAILED! hand count = 210, expected = 209
FAILED! * deck count = 270, expected = 271
FAILED! hand count = 288, expected = 287
FAILED! * deck count = 138, expected = 139
FAILED! hand count = 226, expected = 225
FAILED! * deck count = 450, expected = 451
FAILED! hand count = 94, expected = 93
FAILED! * deck count = 148, expected = 149
FAILED! hand count = 61, expected = 60
FAILED! * deck count = 275, expected = 276
FAILED! hand count = 176, expected = 175
FAILED! * deck count = 82, expected = 83
FAILED! hand count = 328, expected = 327
FAILED! * deck count = 134, expected = 135
FAILED! hand count = 324, expected = 323
FAILED! * deck count = 257, expected = 258
FAILED! hand count = 414, expected = 413
FAILED! * deck count = 345, expected = 346
FAILED! hand count = 390, expected = 389
FAILED! * deck count = 269, expected = 270
FAILED! hand count = 32, expected = 31
FAILED! * deck count = 289, expected = 290
FAILED! hand count = 70, expected = 69
FAILED! * deck count = 289, expected = 290
FAILED! hand count = 497, expected = 496
FAILED! * deck count = 388, expected = 389
FAILED! hand count = 242, expected = 241
FAILED! * deck count = 326, expected = 327
FAILED! hand count = 47, expected = 46
FAILED! * deck count = 265, expected = 266
FAILED! hand count = 83, expected = 82
FAILED! * deck count = 199, expected = 200
FAILED! hand count = 390, expected = 389
FAILED! * deck count = 324, expected = 325
FAILED! hand count = 253, expected = 252
FAILED! * deck count = 64, expected = 65
FAILED! hand count = 455, expected = 454
FAILED! * deck count = 4, expected = 5
FAILED! hand count = 479, expected = 478
FAILED! * deck count = 287, expected = 288
FAILED! hand count = 367, expected = 366
FAILED! * deck count = 27, expected = 28
FAILED! hand count = 340, expected = 339
FAILED! * deck count = 89, expected = 90
FAILED! hand count = 464, expected = 463
FAILED! * deck count = 457, expected = 458
FAILED! hand count = 324, expected = 323
FAILED! * deck count = 469, expected = 470
FAILED! hand count = 191, expected = 190
FAILED! * deck count = 296, expected = 297
FAILED! hand count = 486, expected = 485
FAILED! * deck count = 413, expected = 414
FAILED! hand count = 80, expected = 79
FAILED! * deck count = 411, expected = 412
FAILED! hand count = 425, expected = 424
FAILED! * deck count = 459, expected = 460
FAILED! hand count = 445, expected = 444
FAILED! * deck count = 138, expected = 139
FAILED! hand count = 471, expected = 470
FAILED! * deck count = 297, expected = 298
FAILED! hand count = 281, expected = 280
FAILED! * deck count = 182, expected = 183
FAILED! hand count = 461, expected = 460
FAILED! * deck count = 90, expected = 91
FAILED! hand count = 219, expected = 218
FAILED! * deck count = 304, expected = 305
FAILED! hand count = 370, expected = 369
FAILED! * deck count = 288, expected = 289
FAILED! hand count = 23, expected = 22
FAILED! * deck count = 43, expected = 44
FAILED! hand count = 172, expected = 171
FAILED! * deck count = 431, expected = 432
FAILED! hand count = 224, expected = 223
FAILED! * deck count = 349, expected = 350
FAILED! hand count = 284, expected = 283
FAILED! * deck count = 182, expected = 183
FAILED! hand count = 423, expected = 422
FAILED! * deck count = 381, expected = 382
FAILED! hand count = 372, expected = 371
FAILED! * deck count = 429, expected = 430
FAILED! hand count = 28, expected = 27
FAILED! * deck count = 125, expected = 126
FAILED! hand count = 163, expected = 162
FAILED! * deck count = 0, expected = 1
FAILED! hand count = 251, expected = 250
FAILED! * deck count = 66, expected = 67
FAILED! hand count = 402, expected = 401
FAILED! * deck count = 350, expected = 351
FAILED! hand count = 111, expected = 110
FAILED! * deck count = 174, expected = 175
FAILED! hand count = 110, expected = 109
FAILED! * deck count = 23, expected = 24
FAILED! hand count = 264, expected = 263
FAILED! * deck count = 388, expected = 389
FAILED! hand count = 337, expected = 336
FAILED! * deck count = 410, expected = 411
FAILED! hand count = 224, expected = 223
FAILED! * deck count = 491, expected = 492
FAILED! hand count = 51, expected = 50
FAILED! * deck count = 328, expected = 329
FAILED! hand count = 266, expected = 265
FAILED! * deck count = 470, expected = 471
FAILED! hand count = 220, expected = 219
FAILED! * deck count = 155, expected = 156
FAILED! hand count = 485, expected = 484
FAILED! * deck count = 266, expected = 267
FAILED! hand count = 362, expected = 361
FAILED! * deck count = 56, expected = 57
FAILED! hand count = 10, expected = 9
FAILED! * deck count = 197, expected = 198
FAILED! hand count = 137, expected = 136
FAILED! * deck count = 471, expected = 472
FAILED! hand count = 425, expected = 424
FAILED! * deck count = 326, expected = 327
FAILED! hand count = 224, expected = 223
FAILED! * deck count = 98, expected = 99
FAILED! hand count = 164, expected = 163
FAILED! * deck count = 116, expected = 117
FAILED! hand count = 381, expected = 380
FAILED! * deck count = 475, expected = 476
FAILED! hand count = 282, expected = 281
FAILED! * deck count = 193, expected = 194
FAILED! hand count = 174, expected = 173
FAILED! * deck count = 172, expected = 173
FAILED! hand count = 130, expected = 129
FAILED! * deck count = 459, expected = 460
FAILED! hand count = 332, expected = 331
FAILED! * deck count = 454, expected = 455
FAILED! hand count = 431, expected = 430
FAILED! * deck count = 81, expected = 82
FAILED! hand count = 161, expected = 160
FAILED! * deck count = 217, expected = 218
FAILED! hand count = 187, expected = 186
FAILED! * deck count = 15, expected = 16
FAILED! hand count = 45, expected = 44
FAILED! * deck count = 448, expected = 449
FAILED! hand count = 114, expected = 113
FAILED! * deck count = 272, expected = 273
FAILED! hand count = 192, expected = 191
FAILED! * deck count = 126, expected = 127
FAILED! hand count = 288, expected = 287
FAILED! * deck count = 386, expected = 387
FAILED! hand count = 152, expected = 151
FAILED! * deck count = 388, expected = 389
FAILED! hand count = 21, expected = 20
FAILED! * deck count = 21, expected = 22
FAILED! hand count = 344, expected = 343
FAILED! * deck count = 227, expected = 228
FAILED! hand count = 324, expected = 323
FAILED! * deck count = 464, expected = 465
FAILED! hand count = 442, expected = 441
FAILED! * deck count = 124, expected = 125
FAILED! hand count = 462, expected = 461
FAILED! * deck count = 262, expected = 263
FAILED! hand count = 284, expected = 283
FAILED! * deck count = 317, expected = 318
FAILED! hand count = 206, expected = 205
FAILED! * deck count = 112, expected = 113
FAILED! hand count = 40, expected = 39
FAILED! * deck count = 258, expected = 259
FAILED! hand count = 82, expected = 81
FAILED! * deck count = 240, expected = 241
FAILED! hand count = 440, expected = 439
FAILED! * deck count = 193, expected = 194
FAILED! hand count = 55, expected = 54
FAILED! * deck count = 344, expected = 345
FAILED! hand count = 108, expected = 107
FAILED! * deck count = 254, expected = 255
FAILED! hand count = 335, expected = 334
FAILED! * deck count = 119, expected = 120
FAILED! hand count = 60, expected = 59
FAILED! * deck count = 107, expected = 108
FAILED! hand count = 488, expected = 487
FAILED! * deck count = 94, expected = 95
FAILED! hand count = 72, expected = 71
FAILED! * deck count = 460, expected = 461
FAILED! hand count = 299, expected = 298
FAILED! * deck count = 367, expected = 368
FAILED! hand count = 341, expected = 340
FAILED! * deck count = 216, expected = 217
FAILED! hand count = 92, expected = 91
FAILED! * deck count = 238, expected = 239
FAILED! hand count = 213, expected = 212
FAILED! * deck count = 150, expected = 151
FAILED! hand count = 420, expected = 419
FAILED! * deck count = 115, expected = 116
FAILED! hand count = 174, expected = 173
FAILED! * deck count = 22, expected = 23
FAILED! hand count = 204, expected = 203
FAILED! * deck count = 137, expected = 138
FAILED! hand count = 29, expected = 28
FAILED! * deck count = 33, expected = 34
FAILED! hand count = 392, expected = 391
FAILED! * deck count = 481, expected = 482
FAILED! hand count = 139, expected = 138
FAILED! * deck count = 103, expected = 104
FAILED! hand count = 310, expected = 309
FAILED! * deck count = 51, expected = 52
FAILED! hand count = 103, expected = 102
FAILED! * deck count = 115, expected = 116
FAILED! hand count = 392, expected = 391
FAILED! * deck count = 466, expected = 467
FAILED! hand count = 443, expected = 442
FAILED! * deck count = 182, expected = 183
FAILED! hand count = 431, expected = 430
FAILED! * deck count = 304, expected = 305
FAILED! hand count = 176, expected = 175
FAILED! * deck count = 354, expected = 355
FAILED! hand count = 267, expected = 266
FAILED! * deck count = 212, expected = 213
FAILED! hand count = 72, expected = 71
FAILED! * deck count = 478, expected = 479
FAILED! hand count = 472, expected = 471
FAILED! * deck count = 93, expected = 94
FAILED! hand count = 402, expected = 401
FAILED! * deck count = 471, expected = 472
FAILED! hand count = 192, expected = 191
FAILED! * deck count = 194, expected = 195
FAILED! hand count = 273, expected = 272
FAILED! * deck count = 78, expected = 79
FAILED! hand count = 397, expected = 396
FAILED! * deck count = 236, expected = 237
FAILED! hand count = 286, expected = 285
FAILED! * deck count = 146, expected = 147
FAILED! hand count = 98, expected = 97
FAILED! * deck count = 252, expected = 253
FAILED! hand count = 86, expected = 85
FAILED! * deck count = 447, expected = 448
FAILED! hand count = 111, expected = 110
FAILED! * deck count = 425, expected = 426
FAILED! hand count = 77, expected = 76
FAILED! * deck count = 194, expected = 195
FAILED! hand count = 225, expected = 224
FAILED! * deck count = 393, expected = 394
FAILED! hand count = 214, expected = 213
FAILED! * deck count = 37, expected = 38
FAILED! hand count = 472, expected = 471
FAILED! * deck count = 222, expected = 223
FAILED! hand count = 359, expected = 358
FAILED! * deck count = 323, expected = 324
FAILED! hand count = 74, expected = 73
FAILED! * deck count = 445, expected = 446
FAILED! hand count = 229, expected = 228
FAILED! * deck count = 251, expected = 252
FAILED! hand count = 463, expected = 462
FAILED! * deck count = 429, expected = 430
FAILED! hand count = 251, expected = 250
FAILED! * deck count = 156, expected = 157
FAILED! hand count = 471, expected = 470
FAILED! * deck count = 344, expected = 345
FAILED! hand count = 493, expected = 492
FAILED! * deck count = 1, expected = 2
FAILED! hand count = 123, expected = 122
FAILED! * deck count = 59, expected = 60
FAILED! hand count = 388, expected = 387
FAILED! * deck count = 85, expected = 86
FAILED! hand count = 456, expected = 455
FAILED! * deck count = 74, expected = 75
FAILED! hand count = 84, expected = 83
FAILED! * deck count = 58, expected = 59
FAILED! hand count = 94, expected = 93
FAILED! * deck count = 281, expected = 282
FAILED! hand count = 108, expected = 107
FAILED! * deck count = 151, expected = 152
FAILED! hand count = 159, expected = 158
FAILED! * deck count = 10, expected = 11
FAILED! hand count = 479, expected = 478
FAILED! * deck count = 225, expected = 226
FAILED! hand count = 110, expected = 109
FAILED! * deck count = 189, expected = 190
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 214, expected = 215
FAILED! hand count = 476, expected = 475
FAILED! * deck count = 368, expected = 369
FAILED! hand count = 29, expected = 28
FAILED! * deck count = 213, expected = 214
FAILED! hand count = 252, expected = 251
FAILED! * deck count = 483, expected = 484
FAILED! hand count = 445, expected = 444
FAILED! * deck count = 300, expected = 301
FAILED! hand count = 113, expected = 112
FAILED! * deck count = 196, expected = 197
FAILED! hand count = 420, expected = 419
FAILED! * deck count = 78, expected = 79
FAILED! hand count = 297, expected = 296
FAILED! * deck count = 103, expected = 104
FAILED! hand count = 486, expected = 485
FAILED! * deck count = 205, expected = 206
FAILED! hand count = 71, expected = 70
FAILED! * deck count = 238, expected = 239
FAILED! hand count = 145, expected = 144
FAILED! * deck count = 276, expected = 277
FAILED! hand count = 392, expected = 391
FAILED! * deck count = 167, expected = 168
FAILED! hand count = 371, expected = 370
FAILED! * deck count = 81, expected = 82
FAILED! hand count = 337, expected = 336
FAILED! * deck count = 149, expected = 150
FAILED! hand count = 260, expected = 259
FAILED! * deck count = 108, expected = 109
FAILED! hand count = 42, expected = 41
FAILED! * deck count = 106, expected = 107
FAILED! hand count = 227, expected = 226
FAILED! * deck count = 263, expected = 264
FAILED! hand count = 38, expected = 37
FAILED! * deck count = 118, expected = 119
FAILED! hand count = 468, expected = 467
FAILED! * deck count = 198, expected = 199
FAILED! hand count = 15, expected = 14
FAILED! * deck count = 445, expected = 446
FAILED! hand count = 160, expected = 159
FAILED! * deck count = 447, expected = 448
FAILED! hand count = 152, expected = 151
FAILED! * deck count = 283, expected = 284
FAILED! hand count = 372, expected = 371
FAILED! * deck count = 332, expected = 333
FAILED! hand count = 239, expected = 238
FAILED! * deck count = 66, expected = 67
FAILED! hand count = 466, expected = 465
FAILED! * deck count = 417, expected = 418
FAILED! hand count = 455, expected = 454
FAILED! * deck count = 40, expected = 41
FAILED! hand count = 41, expected = 40
FAILED! * deck count = 139, expected = 140
FAILED! hand count = 241, expected = 240
FAILED! * deck count = 323, expected = 324
FAILED! hand count = 343, expected = 342
FAILED! * deck count = 264, expected = 265
FAILED! hand count = 35, expected = 34
FAILED! * deck count = 7, expected = 8
FAILED! hand count = 6, expected = 5
FAILED! * deck count = 448, expected = 449
FAILED! hand count = 275, expected = 274
FAILED! * deck count = 371, expected = 372
FAILED! hand count = 380, expected = 379
FAILED! * deck count = 221, expected = 222
FAILED! hand count = 221, expected = 220
FAILED! * deck count = 370, expected = 371
FAILED! hand count = 106, expected = 105
FAILED! * deck count = 447, expected = 448
FAILED! hand count = 342, expected = 341
FAILED! * deck count = 170, expected = 171
FAILED! hand count = 365, expected = 364
FAILED! * deck count = 237, expected = 238
FAILED! hand count = 301, expected = 300
FAILED! * deck count = 74, expected = 75
FAILED! hand count = 205, expected = 204
FAILED! * deck count = 303, expected = 304
FAILED! hand count = 23, expected = 22
FAILED! * deck count = 44, expected = 45
FAILED! hand count = 180, expected = 179
FAILED! * deck count = 193, expected = 194
FAILED! hand count = 84, expected = 83
FAILED! * deck count = 101, expected = 102
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 115, expected = 116
FAILED! hand count = 120, expected = 119
FAILED! * deck count = 188, expected = 189
FAILED! hand count = 446, expected = 445
FAILED! * deck count = 363, expected = 364
FAILED! hand count = 456, expected = 455
FAILED! * deck count = 348, expected = 349
FAILED! hand count = 487, expected = 486
FAILED! * deck count = 138, expected = 139
FAILED! hand count = 377, expected = 376
FAILED! * deck count = 232, expected = 233
FAILED! hand count = 222, expected = 221
FAILED! * deck count = 74, expected = 75
FAILED! hand count = 246, expected = 245
FAILED! * deck count = 360, expected = 361
FAILED! hand count = 303, expected = 302
FAILED! * deck count = 158, expected = 159
FAILED! hand count = 376, expected = 375
FAILED! * deck count = 62, expected = 63
FAILED! hand count = 207, expected = 206
FAILED! * deck count = 475, expected = 476
FAILED! hand count = 61, expected = 60
FAILED! * deck count = 430, expected = 431
FAILED! hand count = 365, expected = 364
FAILED! * deck count = 118, expected = 119
FAILED! hand count = 212, expected = 211
FAILED! * deck count = 174, expected = 175
FAILED! hand count = 208, expected = 207
FAILED! * deck count = 155, expected = 156
FAILED! hand count = 4, expected = 3
FAILED! * deck count = 381, expected = 382
FAILED! hand count = 220, expected = 219
FAILED! * deck count = 426, expected = 427
FAILED! hand count = 104, expected = 103
FAILED! * deck count = 401, expected = 402
FAILED! hand count = 352, expected = 351
FAILED! * deck count = 468, expected = 469
FAILED! hand count = 436, expected = 435
FAILED! * deck count = 347, expected = 348
FAILED! hand count = 266, expected = 265
FAILED! * deck count = 320, expected = 321
FAILED! hand count = 224, expected = 223
FAILED! * deck count = 388, expected = 389
FAILED! hand count = 13, expected = 12
FAILED! * deck count = 311, expected = 312
FAILED! hand count = 192, expected = 191
FAILED! * deck count = 223, expected = 224
FAILED! hand count = 262, expected = 261
FAILED! * deck count = 108, expected = 109
FAILED! hand count = 26, expected = 25
FAILED! * deck count = 467, expected = 468
FAILED! hand count = 89, expected = 88
FAILED! * deck count = 107, expected = 108
FAILED! hand count = 135, expected = 134
FAILED! * deck count = 4, expected = 5
FAILED! hand count = 387, expected = 386
FAILED! * deck count = 141, expected = 142
FAILED! hand count = 246, expected = 245
FAILED! * deck count = 408, expected = 409
FAILED! hand count = 248, expected = 247
FAILED! * deck count = 483, expected = 484
FAILED! hand count = 319, expected = 318
FAILED! * deck count = 328, expected = 329
FAILED! hand count = 86, expected = 85
FAILED! * deck count = 130, expected = 131
FAILED! hand count = 123, expected = 122
FAILED! * deck count = 154, expected = 155
FAILED! hand count = 214, expected = 213
FAILED! * deck count = 224, expected = 225
FAILED! hand count = 336, expected = 335
FAILED! * deck count = 7, expected = 8
FAILED! hand count = 375, expected = 374
FAILED! * deck count = 81, expected = 82
FAILED! hand count = 57, expected = 56
FAILED! * deck count = 187, expected = 188
FAILED! hand count = 165, expected = 164
FAILED! * deck count = 235, expected = 236
FAILED! hand count = 127, expected = 126
FAILED! * deck count = 148, expected = 149
FAILED! hand count = 161, expected = 160
FAILED! * deck count = 351, expected = 352
FAILED! hand count = 382, expected = 381
FAILED! * deck count = 234, expected = 235
FAILED! hand count = 347, expected = 346
FAILED! * deck count = 179, expected = 180
FAILED! hand count = 58, expected = 57
FAILED! * deck count = 211, expected = 212
FAILED! hand count = 296, expected = 295
FAILED! * deck count = 339, expected = 340
FAILED! hand count = 500, expected = 499
FAILED! * deck count = 380, expected = 381
FAILED! hand count = 502, expected = 501
FAILED! * deck count = 169, expected = 170
FAILED! hand count = 199, expected = 198
FAILED! * deck count = 169, expected = 170
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 176, expected = 177
FAILED! hand count = 482, expected = 481
FAILED! * deck count = 292, expected = 293
FAILED! hand count = 480, expected = 479
FAILED! * deck count = 430, expected = 431
FAILED! hand count = 441, expected = 440
FAILED! * deck count = 27, expected = 28
FAILED! hand count = 354, expected = 353
FAILED! * deck count = 166, expected = 167
FAILED! hand count = 421, expected = 420
FAILED! * deck count = 276, expected = 277
FAILED! hand count = 193, expected = 192
FAILED! * deck count = 197, expected = 198
FAILED! hand count = 252, expected = 251
FAILED! * deck count = 430, expected = 431
FAILED! hand count = 440, expected = 439
FAILED! * deck count = 396, expected = 397
FAILED! hand count = 169, expected = 168
FAILED! * deck count = 366, expected = 367
FAILED! hand count = 286, expected = 285
FAILED! * deck count = 44, expected = 45
FAILED! hand count = 142, expected = 141
FAILED! * deck count = 331, expected = 332
FAILED! hand count = 18, expected = 17
FAILED! * deck count = 120, expected = 121
FAILED! hand count = 400, expected = 399
FAILED! * deck count = 470, expected = 471
FAILED! hand count = 146, expected = 145
FAILED! * deck count = 170, expected = 171
FAILED! hand count = 329, expected = 328
FAILED! * deck count = 427, expected = 428
FAILED! hand count = 381, expected = 380
FAILED! * deck count = 184, expected = 185
FAILED! hand count = 261, expected = 260
FAILED! * deck count = 159, expected = 160
FAILED! hand count = 154, expected = 153
FAILED! * deck count = 232, expected = 233
FAILED! hand count = 189, expected = 188
FAILED! * deck count = 163, expected = 164
FAILED! hand count = 227, expected = 226
FAILED! * deck count = 253, expected = 254
FAILED! hand count = 26, expected = 25
FAILED! * deck count = 132, expected = 133
FAILED! hand count = 99, expected = 98
FAILED! * deck count = 167, expected = 168
FAILED! hand count = 419, expected = 418
FAILED! * deck count = 463, expected = 464
FAILED! hand count = 65, expected = 64
FAILED! * deck count = 299, expected = 300
FAILED! hand count = 256, expected = 255
FAILED! * deck count = 328, expected = 329
FAILED! hand count = 488, expected = 487
FAILED! * deck count = 71, expected = 72
FAILED! hand count = 404, expected = 403
FAILED! * deck count = 165, expected = 166
FAILED! hand count = 471, expected = 470
FAILED! * deck count = 234, expected = 235
FAILED! hand count = 6, expected = 5
FAILED! * deck count = 492, expected = 493
FAILED! hand count = 385, expected = 384
FAILED! * deck count = 58, expected = 59
FAILED! hand count = 202, expected = 201
FAILED! * deck count = 4, expected = 5
FAILED! hand count = 440, expected = 439
FAILED! * deck count = 167, expected = 168
FAILED! hand count = 152, expected = 151
FAILED! * deck count = 365, expected = 366
FAILED! hand count = 369, expected = 368
FAILED! * deck count = 167, expected = 168
FAILED! hand count = 231, expected = 230
FAILED! * deck count = 303, expected = 304
FAILED! hand count = 66, expected = 65
FAILED! * deck count = 405, expected = 406
FAILED! hand count = 465, expected = 464
FAILED! * deck count = 291, expected = 292
FAILED! hand count = 449, expected = 448
FAILED! * deck count = 400, expected = 401
FAILED! hand count = 65, expected = 64
FAILED! * deck count = 372, expected = 373
FAILED! hand count = 124, expected = 123
FAILED! * deck count = 224, expected = 225
FAILED! hand count = 335, expected = 334
FAILED! * deck count = 327, expected = 328
FAILED! hand count = 473, expected = 472
FAILED! * deck count = 314, expected = 315
FAILED! hand count = 29, expected = 28
FAILED! * deck count = 476, expected = 477
FAILED! hand count = 178, expected = 177
FAILED! * deck count = 110, expected = 111
FAILED! hand count = 219, expected = 218
FAILED! * deck count = 105, expected = 106
FAILED! hand count = 79, expected = 78
FAILED! * deck count = 138, expected = 139
FAILED! hand count = 285, expected = 284
FAILED! * deck count = 44, expected = 45
FAILED! hand count = 102, expected = 101
FAILED! * deck count = 474, expected = 475
FAILED! hand count = 369, expected = 368
FAILED! * deck count = 374, expected = 375
FAILED! hand count = 47, expected = 46
FAILED! * deck count = 125, expected = 126
FAILED! hand count = 129, expected = 128
FAILED! * deck count = 177, expected = 178
FAILED! hand count = 268, expected = 267
FAILED! * deck count = 158, expected = 159
FAILED! hand count = 169, expected = 168
FAILED! * deck count = 478, expected = 479
FAILED! hand count = 312, expected = 311
FAILED! * deck count = 395, expected = 396
FAILED! hand count = 204, expected = 203
FAILED! * deck count = 144, expected = 145
FAILED! hand count = 211, expected = 210
FAILED! * deck count = 221, expected = 222
FAILED! hand count = 293, expected = 292
FAILED! * deck count = 205, expected = 206
FAILED! hand count = 371, expected = 370
FAILED! * deck count = 246, expected = 247
FAILED! hand count = 474, expected = 473
FAILED! * deck count = 215, expected = 216
FAILED! hand count = 196, expected = 195
FAILED! * deck count = 422, expected = 423
FAILED! hand count = 116, expected = 115
FAILED! * deck count = 304, expected = 305
FAILED! hand count = 492, expected = 491
FAILED! * deck count = 255, expected = 256
FAILED! hand count = 97, expected = 96
FAILED! * deck count = 427, expected = 428
FAILED! hand count = 261, expected = 260
FAILED! * deck count = 123, expected = 124
FAILED! hand count = 274, expected = 273
FAILED! * deck count = 138, expected = 139
FAILED! hand count = 135, expected = 134
FAILED! * deck count = 195, expected = 196
FAILED! hand count = 152, expected = 151
FAILED! * deck count = 149, expected = 150
FAILED! hand count = 303, expected = 302
FAILED! * deck count = 483, expected = 484
FAILED! hand count = 188, expected = 187
FAILED! * deck count = 35, expected = 36
FAILED! hand count = 241, expected = 240
FAILED! * deck count = 241, expected = 242
FAILED! hand count = 362, expected = 361
FAILED! * deck count = 246, expected = 247
FAILED! hand count = 439, expected = 438
FAILED! * deck count = 0, expected = 1
FAILED! hand count = 68, expected = 67
FAILED! * deck count = 268, expected = 269
FAILED! hand count = 418, expected = 417
FAILED! * deck count = 310, expected = 311
FAILED! hand count = 500, expected = 499
FAILED! * deck count = 435, expected = 436
FAILED! hand count = 190, expected = 189
FAILED! * deck count = 461, expected = 462
FAILED! hand count = 16, expected = 15
FAILED! * deck count = 387, expected = 388
FAILED! hand count = 320, expected = 319
FAILED! * deck count = 474, expected = 475
FAILED! hand count = 456, expected = 455
FAILED! * deck count = 109, expected = 110
FAILED! hand count = 279, expected = 278
FAILED! * deck count = 29, expected = 30
FAILED! hand count = 399, expected = 398
FAILED! * deck count = 410, expected = 411
FAILED! hand count = 20, expected = 19
FAILED! * deck count = 347, expected = 348
FAILED! hand count = 218, expected = 217
FAILED! * deck count = 102, expected = 103
FAILED! hand count = 408, expected = 407
FAILED! * deck count = 298, expected = 299
FAILED! hand count = 182, expected = 181
FAILED! * deck count = 0, expected = 1
FAILED! hand count = 432, expected = 431
FAILED! * deck count = 91, expected = 92
FAILED! hand count = 56, expected = 55
FAILED! * deck count = 177, expected = 178
FAILED! hand count = 306, expected = 305
FAILED! * deck count = 223, expected = 224
FAILED! hand count = 55, expected = 54
FAILED! * deck count = 56, expected = 57
FAILED! hand count = 44, expected = 43
FAILED! * deck count = 469, expected = 470
FAILED! hand count = 184, expected = 183
FAILED! * deck count = 162, expected = 163
FAILED! hand count = 307, expected = 306
FAILED! * deck count = 419, expected = 420
FAILED! hand count = 352, expected = 351
FAILED! * deck count = 335, expected = 336
FAILED! hand count = 135, expected = 134
FAILED! * deck count = 48, expected = 0
FAILED! hand count = 127, expected = 126
FAILED! * deck count = 243, expected = 244
FAILED! hand count = 206, expected = 205
FAILED! * deck count = 162, expected = 163
FAILED! hand count = 363, expected = 362
FAILED! * deck count = 295, expected = 296
FAILED! hand count = 7, expected = 6
FAILED! * deck count = 384, expected = 385
FAILED! hand count = 497, expected = 496
FAILED! * deck count = 119, expected = 120
FAILED! hand count = 448, expected = 447
FAILED! * deck count = 34, expected = 35
FAILED! hand count = 79, expected = 78
FAILED! * deck count = 266, expected = 267
FAILED! hand count = 344, expected = 343
FAILED! * deck count = 439, expected = 440
FAILED! hand count = 82, expected = 81
FAILED! * deck count = 421, expected = 422
FAILED! hand count = 346, expected = 345
FAILED! * deck count = 246, expected = 247
FAILED! hand count = 417, expected = 416
FAILED! * deck count = 169, expected = 170
FAILED! hand count = 486, expected = 485
FAILED! * deck count = 34, expected = 35
FAILED! hand count = 194, expected = 193
FAILED! * deck count = 153, expected = 154
FAILED! hand count = 448, expected = 447
FAILED! * deck count = 199, expected = 200
FAILED! hand count = 4, expected = 3
FAILED! * deck count = 109, expected = 110
FAILED! hand count = 196, expected = 195
FAILED! * deck count = 263, expected = 264
FAILED! hand count = 102, expected = 101
FAILED! * deck count = 394, expected = 395
FAILED! hand count = 349, expected = 348
FAILED! * deck count = 69, expected = 70
FAILED! hand count = 227, expected = 226
FAILED! * deck count = 27, expected = 28
FAILED! hand count = 93, expected = 92
FAILED! * deck count = 273, expected = 274
FAILED! hand count = 189, expected = 188
FAILED! * deck count = 370, expected = 371
FAILED! hand count = 259, expected = 258
FAILED! * deck count = 27, expected = 28
FAILED! hand count = 15, expected = 14
FAILED! * deck count = 434, expected = 435
FAILED! hand count = 272, expected = 271
FAILED! * deck count = 426, expected = 427
FAILED! hand count = 501, expected = 500
FAILED! * deck count = 436, expected = 437
FAILED! hand count = 64, expected = 63
FAILED! * deck count = 241, expected = 242
FAILED! hand count = 443, expected = 442
FAILED! * deck count = 237, expected = 238
FAILED! hand count = 400, expected = 399
FAILED! * deck count = 71, expected = 72
FAILED! hand count = 325, expected = 324
FAILED! * deck count = 50, expected = 51
FAILED! hand count = 231, expected = 230
FAILED! * deck count = 400, expected = 401
FAILED! hand count = 26, expected = 25
FAILED! * deck count = 314, expected = 315
FAILED! hand count = 201, expected = 200
FAILED! * deck count = 376, expected = 377
FAILED! hand count = 483, expected = 482
FAILED! * deck count = 6, expected = 7
FAILED! hand count = 251, expected = 250
FAILED! * deck count = 432, expected = 433
FAILED! hand count = 359, expected = 358
FAILED! * deck count = 487, expected = 488
FAILED! hand count = 134, expected = 133
FAILED! * deck count = 147, expected = 148
FAILED! hand count = 391, expected = 390
FAILED! hand count = 112, expected = 111
FAILED! *** deck count = 384, expected = 385
FAILED! * deck count = 121, expected = 122
FAILED! hand count = 285, expected = 284
FAILED! * deck count = 106, expected = 107
FAILED! hand count = 380, expected = 379
FAILED! * deck count = 143, expected = 144
FAILED! hand count = 289, expected = 288
FAILED! * deck count = 493, expected = 494
FAILED! hand count = 169, expected = 168
FAILED! * deck count = 78, expected = 79
FAILED! hand count = 489, expected = 488
FAILED! * deck count = 268, expected = 269
FAILED! hand count = 410, expected = 409
FAILED! * deck count = 182, expected = 183
FAILED! hand count = 70, expected = 69
FAILED! * deck count = 422, expected = 423
FAILED! hand count = 261, expected = 260
FAILED! * deck count = 441, expected = 442
FAILED! hand count = 323, expected = 322
FAILED! * deck count = 189, expected = 190
FAILED! hand count = 293, expected = 292
FAILED! * deck count = 76, expected = 77
FAILED! hand count = 79, expected = 78
FAILED! * deck count = 371, expected = 372
FAILED! hand count = 86, expected = 85
FAILED! * deck count = 362, expected = 363
FAILED! hand count = 329, expected = 328
FAILED! * deck count = 133, expected = 134
FAILED! hand count = 360, expected = 359
FAILED! * deck count = 484, expected = 485
FAILED! hand count = 153, expected = 152
FAILED! * deck count = 202, expected = 203
FAILED! hand count = 212, expected = 211
FAILED! * deck count = 222, expected = 223
FAILED! hand count = 350, expected = 349
FAILED! * deck count = 34, expected = 35
FAILED! hand count = 104, expected = 103
FAILED! * deck count = 335, expected = 336
FAILED! hand count = 90, expected = 89
FAILED! * deck count = 196, expected = 197
FAILED! hand count = 167, expected = 166
FAILED! * deck count = 362, expected = 363
FAILED! hand count = 211, expected = 210
FAILED! * deck count = 49, expected = 50
FAILED! hand count = 78, expected = 77
FAILED! * deck count = 381, expected = 382
FAILED! hand count = 279, expected = 278
FAILED! * deck count = 414, expected = 415
FAILED! hand count = 385, expected = 384
FAILED! * deck count = 456, expected = 457
FAILED! hand count = 88, expected = 87
FAILED! * deck count = 296, expected = 297
FAILED! hand count = 58, expected = 57
FAILED! * deck count = 318, expected = 319
FAILED! hand count = 402, expected = 401
FAILED! * deck count = 311, expected = 312
FAILED! hand count = 438, expected = 437
FAILED! * deck count = 485, expected = 486
FAILED! hand count = 417, expected = 416
FAILED! * deck count = 84, expected = 85
FAILED! hand count = 55, expected = 54
FAILED! * deck count = 271, expected = 272
FAILED! hand count = 447, expected = 446
FAILED! * deck count = 245, expected = 246
FAILED! hand count = 310, expected = 309
FAILED! * deck count = 146, expected = 147
FAILED! hand count = 328, expected = 327
FAILED! * deck count = 172, expected = 173
FAILED! hand count = 239, expected = 238
FAILED! * deck count = 198, expected = 199
FAILED! hand count = 36, expected = 35
FAILED! * deck count = 31, expected = 32
FAILED! hand count = 470, expected = 469
FAILED! * deck count = 262, expected = 263
FAILED! hand count = 40, expected = 39
FAILED! * deck count = 91, expected = 92
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 430, expected = 431
FAILED! hand count = 437, expected = 436
FAILED! * deck count = 220, expected = 221
FAILED! hand count = 102, expected = 101
FAILED! * deck count = 344, expected = 345
FAILED! hand count = 453, expected = 452
FAILED! * deck count = 358, expected = 359
FAILED! hand count = 422, expected = 421
FAILED! * deck count = 479, expected = 480
FAILED! hand count = 67, expected = 66
FAILED! * deck count = 430, expected = 431
FAILED! hand count = 256, expected = 255
FAILED! * deck count = 334, expected = 335
FAILED! hand count = 181, expected = 180
FAILED! * deck count = 350, expected = 351
FAILED! hand count = 475, expected = 474
FAILED! hand count = 22, expected = 21
FAILED! *** deck count = 128, expected = 129
FAILED! * deck count = 322, expected = 323
FAILED! hand count = 422, expected = 421
FAILED! * deck count = 71, expected = 72
FAILED! hand count = 208, expected = 207
FAILED! * deck count = 66, expected = 67
FAILED! hand count = 436, expected = 435
FAILED! * deck count = 57, expected = 58
FAILED! hand count = 17, expected = 16
FAILED! * deck count = 316, expected = 317
FAILED! hand count = 244, expected = 243
FAILED! * deck count = 215, expected = 216
FAILED! hand count = 48, expected = 47
FAILED! * deck count = 280, expected = 281
FAILED! hand count = 56, expected = 55
FAILED! * deck count = 166, expected = 167
FAILED! hand count = 238, expected = 237
FAILED! * deck count = 80, expected = 81
FAILED! hand count = 287, expected = 286
FAILED! * deck count = 207, expected = 208
FAILED! hand count = 413, expected = 412
FAILED! * deck count = 108, expected = 109
FAILED! hand count = 97, expected = 96
FAILED! * deck count = 372, expected = 373
FAILED! hand count = 99, expected = 98
FAILED! * deck count = 148, expected = 149
FAILED! hand count = 354, expected = 353
FAILED! * deck count = 8, expected = 9
FAILED! hand count = 268, expected = 267
FAILED! * deck count = 299, expected = 300
FAILED! hand count = 140, expected = 139
FAILED! * deck count = 390, expected = 391
FAILED! hand count = 111, expected = 110
FAILED! * deck count = 62, expected = 63
FAILED! hand count = 455, expected = 454
FAILED! * deck count = 183, expected = 184
FAILED! hand count = 386, expected = 385
FAILED! * deck count = 124, expected = 125
FAILED! hand count = 496, expected = 495
FAILED! * deck count = 317, expected = 318
FAILED! hand count = 227, expected = 226
FAILED! * deck count = 1, expected = 2
FAILED! hand count = 436, expected = 435
FAILED! * deck count = 41, expected = 42
FAILED! hand count = 258, expected = 257
FAILED! * deck count = 254, expected = 255
FAILED! hand count = 440, expected = 439
FAILED! * deck count = 482, expected = 483
FAILED! hand count = 456, expected = 455
FAILED! * deck count = 456, expected = 457
FAILED! hand count = 408, expected = 407
FAILED! * deck count = 207, expected = 208
FAILED! hand count = 151, expected = 150
FAILED! * deck count = 470, expected = 471
FAILED! hand count = 148, expected = 147
FAILED! * deck count = 80, expected = 81
FAILED! hand count = 482, expected = 481
FAILED! * deck count = 239, expected = 240
FAILED! hand count = 227, expected = 226
FAILED! * deck count = 330, expected = 331
FAILED! hand count = 25, expected = 24
FAILED! * deck count = 299, expected = 300
FAILED! hand count = 37, expected = 36
FAILED! * deck count = 222, expected = 223
FAILED! hand count = 141, expected = 140
FAILED! * deck count = 302, expected = 303
FAILED! hand count = 327, expected = 326
FAILED! * deck count = 71, expected = 72
FAILED! hand count = 395, expected = 394
FAILED! * deck count = 99, expected = 100
FAILED! hand count = 18, expected = 17
FAILED! * deck count = 292, expected = 293
FAILED! hand count = 31, expected = 30
FAILED! * deck count = 268, expected = 269
FAILED! hand count = 414, expected = 413
FAILED! * deck count = 264, expected = 265
FAILED! hand count = 214, expected = 213
FAILED! * deck count = 305, expected = 306
FAILED! hand count = 99, expected = 98
FAILED! * deck count = 302, expected = 303
FAILED! hand count = 162, expected = 161
FAILED! * deck count = 364, expected = 365
FAILED! hand count = 322, expected = 321
FAILED! * deck count = 81, expected = 82
FAILED! hand count = 234, expected = 233
FAILED! * deck count = 3, expected = 4
FAILED! hand count = 245, expected = 244
FAILED! * deck count = 410, expected = 411
FAILED! hand count = 349, expected = 348
FAILED! * deck count = 174, expected = 175
FAILED! hand count = 25, expected = 24
FAILED! * deck count = 434, expected = 435
FAILED! hand count = 401, expected = 400
FAILED! * deck count = 308, expected = 309
FAILED! hand count = 96, expected = 95
FAILED! * deck count = 92, expected = 93
FAILED! hand count = 120, expected = 119
FAILED! * deck count = 353, expected = 354
FAILED! hand count = 417, expected = 416
FAILED! * deck count = 16, expected = 17
FAILED! hand count = 78, expected = 77
FAILED! * deck count = 464, expected = 465
FAILED! hand count = 403, expected = 402
FAILED! * deck count = 323, expected = 324
FAILED! hand count = 371, expected = 370
FAILED! * deck count = 357, expected = 358
FAILED! hand count = 152, expected = 151
FAILED! * deck count = 102, expected = 103
FAILED! hand count = 270, expected = 269
FAILED! * deck count = 257, expected = 258
FAILED! hand count = 155, expected = 154
FAILED! * deck count = 264, expected = 265
FAILED! hand count = 174, expected = 173
FAILED! * deck count = 91, expected = 92
FAILED! hand count = 87, expected = 86
FAILED! * deck count = 244, expected = 245
FAILED! hand count = 292, expected = 291
FAILED! * deck count = 92, expected = 93
FAILED! hand count = 55, expected = 54
FAILED! * deck count = 172, expected = 173
FAILED! hand count = 352, expected = 351
FAILED! * deck count = 15, expected = 16
FAILED! hand count = 287, expected = 286
FAILED! * deck count = 63, expected = 64
FAILED! hand count = 95, expected = 94
FAILED! * deck count = 327, expected = 328
FAILED! hand count = 213, expected = 212
FAILED! * deck count = 445, expected = 446
FAILED! hand count = 105, expected = 104
FAILED! * deck count = 148, expected = 149
FAILED! hand count = 360, expected = 359
FAILED! * deck count = 440, expected = 441
FAILED! hand count = 400, expected = 399
FAILED! * deck count = 416, expected = 417
FAILED! hand count = 291, expected = 290
FAILED! * deck count = 192, expected = 193
FAILED! hand count = 430, expected = 429
FAILED! * deck count = 26, expected = 27
FAILED! hand count = 409, expected = 408
FAILED! * deck count = 46, expected = 47
FAILED! hand count = 64, expected = 63
FAILED! * deck count = 351, expected = 352
FAILED! hand count = 390, expected = 389
FAILED! * deck count = 492, expected = 493
FAILED! hand count = 391, expected = 390
FAILED! * deck count = 489, expected = 490
FAILED! hand count = 303, expected = 302
FAILED! * deck count = 237, expected = 238
FAILED! hand count = 295, expected = 294
FAILED! * deck count = 131, expected = 132
FAILED! hand count = 188, expected = 187
FAILED! * deck count = 86, expected = 87
FAILED! hand count = 379, expected = 378
FAILED! * deck count = 20, expected = 21
FAILED! hand count = 167, expected = 166
FAILED! * deck count = 452, expected = 453
FAILED! hand count = 14, expected = 13
FAILED! * deck count = 126, expected = 127
FAILED! hand count = 209, expected = 208
FAILED! * deck count = 456, expected = 457
FAILED! hand count = 92, expected = 91
FAILED! * deck count = 197, expected = 198
FAILED! hand count = 480, expected = 479
FAILED! * deck count = 280, expected = 281
FAILED! hand count = 275, expected = 274
FAILED! * deck count = 343, expected = 344
FAILED! hand count = 14, expected = 13
FAILED! * deck count = 232, expected = 233
FAILED! hand count = 140, expected = 139
FAILED! * deck count = 218, expected = 219
FAILED! hand count = 359, expected = 358
FAILED! * deck count = 35, expected = 36
FAILED! hand count = 146, expected = 145
FAILED! * deck count = 478, expected = 479
FAILED! hand count = 68, expected = 67
FAILED! * deck count = 50, expected = 51
FAILED! hand count = 309, expected = 308
FAILED! * deck count = 247, expected = 248
FAILED! hand count = 317, expected = 316
FAILED! * deck count = 450, expected = 451
FAILED! hand count = 401, expected = 400
FAILED! * deck count = 368, expected = 369
FAILED! hand count = 441, expected = 440
FAILED! * deck count = 94, expected = 95
FAILED! hand count = 378, expected = 377
FAILED! * deck count = 7, expected = 8
FAILED! hand count = 402, expected = 401
FAILED! * deck count = 133, expected = 134
FAILED! hand count = 155, expected = 154
FAILED! * deck count = 74, expected = 75
FAILED! hand count = 321, expected = 320
FAILED! * deck count = 485, expected = 486
FAILED! hand count = 390, expected = 389
FAILED! * deck count = 201, expected = 202
FAILED! hand count = 323, expected = 322
FAILED! * deck count = 108, expected = 109
FAILED! hand count = 67, expected = 66
FAILED! * deck count = 206, expected = 207
FAILED! hand count = 233, expected = 232
FAILED! * deck count = 54, expected = 55
FAILED! hand count = 309, expected = 308
FAILED! * deck count = 343, expected = 344
FAILED! hand count = 400, expected = 399
FAILED! * deck count = 473, expected = 474
FAILED! hand count = 294, expected = 293
FAILED! * deck count = 397, expected = 398
FAILED! hand count = 487, expected = 486
FAILED! * deck count = 130, expected = 131
FAILED! hand count = 226, expected = 225
FAILED! * deck count = 218, expected = 219
FAILED! hand count = 153, expected = 152
FAILED! * deck count = 232, expected = 233
FAILED! hand count = 22, expected = 21
FAILED! * deck count = 59, expected = 60
FAILED! hand count = 304, expected = 303
FAILED! * deck count = 200, expected = 201
FAILED! hand count = 420, expected = 419
FAILED! * deck count = 302, expected = 303
FAILED! hand count = 202, expected = 201
FAILED! * deck count = 98, expected = 99
FAILED! hand count = 173, expected = 172
FAILED! * deck count = 444, expected = 445
FAILED! hand count = 160, expected = 159
FAILED! * deck count = 105, expected = 106
FAILED! hand count = 277, expected = 276
FAILED! * deck count = 333, expected = 334
FAILED! hand count = 167, expected = 166
FAILED! * deck count = 266, expected = 267
FAILED! hand count = 315, expected = 314
FAILED! * deck count = 189, expected = 190
FAILED! hand count = 282, expected = 281
FAILED! * deck count = 422, expected = 423
FAILED! hand count = 180, expected = 179
FAILED! * deck count = 50, expected = 51
FAILED! hand count = 155, expected = 154
FAILED! * deck count = 203, expected = 204
FAILED! hand count = 352, expected = 351
FAILED! * deck count = 27, expected = 28
FAILED! hand count = 162, expected = 161
FAILED! * deck count = 420, expected = 421
FAILED! hand count = 391, expected = 390
FAILED! * deck count = 151, expected = 152
FAILED! hand count = 397, expected = 396
FAILED! * deck count = 391, expected = 392
FAILED! hand count = 89, expected = 88
FAILED! * deck count = 225, expected = 226
FAILED! hand count = 227, expected = 226
FAILED! * deck count = 182, expected = 183
FAILED! hand count = 190, expected = 189
FAILED! * deck count = 224, expected = 225
FAILED! hand count = 136, expected = 135
FAILED! * deck count = 154, expected = 155
FAILED! hand count = 465, expected = 464
FAILED! * deck count = 81, expected = 82
FAILED! hand count = 87, expected = 86
FAILED! * deck count = 410, expected = 411
FAILED! hand count = 107, expected = 106
FAILED! * deck count = 31, expected = 32
FAILED! hand count = 404, expected = 403
FAILED! * deck count = 354, expected = 355
FAILED! hand count = 467, expected = 466
FAILED! * deck count = 134, expected = 135
FAILED! hand count = 222, expected = 221
FAILED! * deck count = 162, expected = 163
FAILED! hand count = 320, expected = 319
FAILED! * deck count = 165, expected = 166
FAILED! hand count = 131, expected = 130
FAILED! * deck count = 34, expected = 35
FAILED! hand count = 92, expected = 91
FAILED! * deck count = 221, expected = 222
FAILED! hand count = 359, expected = 358
FAILED! * deck count = 277, expected = 278
FAILED! hand count = 469, expected = 468
FAILED! * deck count = 33, expected = 34
FAILED! hand count = 99, expected = 98
FAILED! * deck count = 236, expected = 237
FAILED! hand count = 393, expected = 392
FAILED! * deck count = 85, expected = 86
FAILED! hand count = 284, expected = 283
FAILED! * deck count = 59, expected = 60
FAILED! hand count = 7, expected = 6
FAILED! * deck count = 155, expected = 156
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 354, expected = 355
FAILED! hand count = 109, expected = 108
FAILED! * deck count = 417, expected = 418
FAILED! hand count = 460, expected = 459
FAILED! * deck count = 223, expected = 224
FAILED! hand count = 446, expected = 445
FAILED! * deck count = 27, expected = 28
FAILED! hand count = 124, expected = 123
FAILED! * deck count = 314, expected = 315
FAILED! hand count = 418, expected = 417
FAILED! * deck count = 4, expected = 5
FAILED! hand count = 412, expected = 411
FAILED! * deck count = 58, expected = 59
FAILED! hand count = 194, expected = 193
FAILED! * deck count = 101, expected = 102
FAILED! hand count = 378, expected = 377
FAILED! * deck count = 75, expected = 76
FAILED! hand count = 494, expected = 493
FAILED! * deck count = 194, expected = 195
FAILED! hand count = 383, expected = 382
FAILED! * deck count = 220, expected = 221
FAILED! hand count = 227, expected = 226
FAILED! * deck count = 377, expected = 378
FAILED! hand count = 119, expected = 118
FAILED! * deck count = 95, expected = 96
FAILED! hand count = 236, expected = 235
FAILED! * deck count = 463, expected = 464
FAILED! hand count = 440, expected = 439
FAILED! * deck count = 86, expected = 87
FAILED! hand count = 15, expected = 14
FAILED! * deck count = 293, expected = 294
FAILED! hand count = 384, expected = 383
FAILED! * deck count = 267, expected = 268
FAILED! hand count = 126, expected = 125
FAILED! * deck count = 22, expected = 23
FAILED! hand count = 10, expected = 9
FAILED! * deck count = 320, expected = 321
FAILED! hand count = 404, expected = 403
FAILED! * deck count = 280, expected = 281
FAILED! hand count = 140, expected = 139
FAILED! * deck count = 123, expected = 124
FAILED! hand count = 55, expected = 54
FAILED! * deck count = 155, expected = 156
FAILED! hand count = 304, expected = 303
FAILED! * deck count = 251, expected = 252
FAILED! hand count = 55, expected = 54
FAILED! * deck count = 23, expected = 24
FAILED! hand count = 355, expected = 354
FAILED! * deck count = 19, expected = 20
FAILED! hand count = 441, expected = 440
FAILED! * deck count = 340, expected = 341
FAILED! hand count = 462, expected = 461
FAILED! * deck count = 67, expected = 68
FAILED! hand count = 475, expected = 474
FAILED! * deck count = 341, expected = 342
FAILED! hand count = 353, expected = 352
FAILED! * deck count = 85, expected = 86
FAILED! hand count = 440, expected = 439
FAILED! * deck count = 199, expected = 200
FAILED! hand count = 89, expected = 88
FAILED! * deck count = 390, expected = 391
FAILED! hand count = 204, expected = 203
FAILED! * deck count = 430, expected = 431
FAILED! hand count = 120, expected = 119
FAILED! * deck count = 485, expected = 486
FAILED! hand count = 36, expected = 35
FAILED! * deck count = 51, expected = 52
FAILED! hand count = 257, expected = 256
FAILED! * deck count = 260, expected = 261
FAILED! hand count = 54, expected = 53
FAILED! * deck count = 62, expected = 63
FAILED! hand count = 215, expected = 214
FAILED! * deck count = 53, expected = 54
FAILED! hand count = 245, expected = 244
FAILED! * deck count = 12, expected = 13
FAILED! hand count = 420, expected = 419
FAILED! * deck count = 14, expected = 15
FAILED! hand count = 92, expected = 91
FAILED! * deck count = 219, expected = 220
FAILED! hand count = 412, expected = 411
FAILED! * deck count = 465, expected = 466
FAILED! hand count = 155, expected = 154
FAILED! * deck count = 428, expected = 429
FAILED! hand count = 435, expected = 434
FAILED! * deck count = 183, expected = 184
FAILED! hand count = 50, expected = 49
FAILED! * deck count = 3, expected = 4
FAILED! hand count = 359, expected = 358
FAILED! * deck count = 373, expected = 374
FAILED! hand count = 472, expected = 471
FAILED! * deck count = 441, expected = 442
FAILED! hand count = 21, expected = 20
FAILED! * deck count = 233, expected = 234
FAILED! hand count = 283, expected = 282
FAILED! * deck count = 210, expected = 211
FAILED! hand count = 264, expected = 263
FAILED! * deck count = 15, expected = 16
FAILED! hand count = 252, expected = 251
FAILED! * deck count = 366, expected = 367
FAILED! hand count = 391, expected = 390
FAILED! * deck count = 403, expected = 404
FAILED! hand count = 203, expected = 202
FAILED! * deck count = 213, expected = 214
FAILED! hand count = 437, expected = 436
FAILED! * deck count = 453, expected = 454
FAILED! hand count = 500, expected = 499
FAILED! * deck count = 407, expected = 408
FAILED! hand count = 346, expected = 345
FAILED! * deck count = 198, expected = 199
FAILED! hand count = 279, expected = 278
FAILED! * deck count = 457, expected = 458
FAILED! hand count = 386, expected = 385
FAILED! * deck count = 234, expected = 235
FAILED! hand count = 56, expected = 55
FAILED! * deck count = 450, expected = 451
FAILED! hand count = 456, expected = 455
FAILED! * deck count = 164, expected = 165
FAILED! hand count = 58, expected = 57
FAILED! * deck count = 270, expected = 271
FAILED! hand count = 490, expected = 489
FAILED! * deck count = 367, expected = 368
FAILED! hand count = 313, expected = 312
FAILED! * deck count = 281, expected = 282
FAILED! hand count = 239, expected = 238
FAILED! * deck count = 462, expected = 463
FAILED! hand count = 7, expected = 6
FAILED! * deck count = 116, expected = 117
FAILED! hand count = 262, expected = 261
FAILED! * deck count = 44, expected = 45
FAILED! hand count = 132, expected = 131
FAILED! * deck count = 438, expected = 439
FAILED! hand count = 71, expected = 70
FAILED! * deck count = 474, expected = 475
FAILED! hand count = 243, expected = 242
FAILED! * deck count = 240, expected = 241
FAILED! hand count = 329, expected = 328
FAILED! * deck count = 1, expected = 2
FAILED! hand count = 125, expected = 124
FAILED! * deck count = 259, expected = 260
FAILED! hand count = 74, expected = 73
FAILED! * deck count = 279, expected = 280
FAILED! hand count = 317, expected = 316
FAILED! * deck count = 322, expected = 323
FAILED! hand count = 98, expected = 97
FAILED! * deck count = 162, expected = 163
FAILED! hand count = 115, expected = 114
FAILED! * deck count = 452, expected = 453
FAILED! hand count = 368, expected = 367
FAILED! * deck count = 125, expected = 126
FAILED! hand count = 291, expected = 290
FAILED! * deck count = 292, expected = 293
FAILED! hand count = 238, expected = 237
FAILED! * deck count = 273, expected = 274
FAILED! hand count = 150, expected = 149
FAILED! * deck count = 181, expected = 182
FAILED! hand count = 304, expected = 303
FAILED! * deck count = 470, expected = 471
FAILED! hand count = 280, expected = 279
FAILED! * deck count = 186, expected = 187
FAILED! hand count = 351, expected = 350
FAILED! * deck count = 388, expected = 389
FAILED! hand count = 328, expected = 327
FAILED! * deck count = 207, expected = 208
FAILED! hand count = 155, expected = 154
FAILED! * deck count = 102, expected = 103
FAILED! hand count = 145, expected = 144
FAILED! * deck count = 483, expected = 484
FAILED! hand count = 235, expected = 234
FAILED! * deck count = 246, expected = 247
FAILED! hand count = 68, expected = 67
FAILED! hand count = 111, expected = 110
FAILED! *** deck count = 168, expected = 169
FAILED! * deck count = 296, expected = 297
FAILED! hand count = 406, expected = 405
FAILED! * deck count = 99, expected = 100
FAILED! hand count = 493, expected = 492
FAILED! * deck count = 97, expected = 98
FAILED! hand count = 476, expected = 475
FAILED! * deck count = 343, expected = 344
FAILED! hand count = 385, expected = 384
FAILED! * deck count = 495, expected = 496
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 343, expected = 344
FAILED! hand count = 486, expected = 485
FAILED! * deck count = 5, expected = 6
FAILED! hand count = 207, expected = 206
FAILED! * deck count = 109, expected = 110
FAILED! hand count = 247, expected = 246
FAILED! * deck count = 360, expected = 361
FAILED! hand count = 440, expected = 439
FAILED! hand count = 467, expected = 466
FAILED! *** deck count = 472, expected = 473
FAILED! * deck count = 381, expected = 382
FAILED! hand count = 458, expected = 457
FAILED! * deck count = 451, expected = 452
FAILED! hand count = 426, expected = 425
FAILED! * deck count = 258, expected = 259
FAILED! hand count = 205, expected = 204
FAILED! * deck count = 19, expected = 20
FAILED! hand count = 87, expected = 86
FAILED! * deck count = 64, expected = 65
FAILED! hand count = 311, expected = 310
FAILED! * deck count = 131, expected = 132
FAILED! hand count = 44, expected = 43
FAILED! * deck count = 467, expected = 468
FAILED! hand count = 150, expected = 149
FAILED! * deck count = 17, expected = 18
FAILED! hand count = 401, expected = 400
FAILED! * deck count = 428, expected = 429
FAILED! hand count = 449, expected = 448
FAILED! * deck count = 434, expected = 435
FAILED! hand count = 389, expected = 388
FAILED! * deck count = 409, expected = 410
FAILED! hand count = 85, expected = 84
FAILED! * deck count = 463, expected = 464
FAILED! hand count = 135, expected = 134
FAILED! * deck count = 425, expected = 426
FAILED! hand count = 455, expected = 454
FAILED! * deck count = 392, expected = 393
FAILED! hand count = 181, expected = 180
FAILED! * deck count = 157, expected = 158
FAILED! hand count = 399, expected = 398
FAILED! * deck count = 462, expected = 463
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 47, expected = 48
FAILED! hand count = 168, expected = 167
FAILED! * deck count = 381, expected = 382
FAILED! hand count = 463, expected = 462
FAILED! * deck count = 495, expected = 496
FAILED! hand count = 332, expected = 331
FAILED! * deck count = 406, expected = 407
FAILED! hand count = 166, expected = 165
FAILED! * deck count = 347, expected = 348
FAILED! hand count = 311, expected = 310
FAILED! * deck count = 348, expected = 349
FAILED! hand count = 359, expected = 358
FAILED! * deck count = 8, expected = 9
FAILED! hand count = 262, expected = 261
FAILED! * deck count = 199, expected = 200
FAILED! hand count = 92, expected = 91
FAILED! * deck count = 304, expected = 305
FAILED! hand count = 444, expected = 443
FAILED! * deck count = 190, expected = 191
FAILED! hand count = 384, expected = 383
FAILED! * deck count = 263, expected = 264
FAILED! hand count = 363, expected = 362
FAILED! * deck count = 114, expected = 115
FAILED! hand count = 292, expected = 291
FAILED! * deck count = 407, expected = 408
FAILED! hand count = 339, expected = 338
FAILED! * deck count = 390, expected = 391
FAILED! hand count = 406, expected = 405
FAILED! * deck count = 15, expected = 16
FAILED! hand count = 351, expected = 350
FAILED! * deck count = 433, expected = 434
FAILED! hand count = 441, expected = 440
FAILED! * deck count = 461, expected = 462
FAILED! hand count = 14, expected = 13
FAILED! * deck count = 18, expected = 19
FAILED! hand count = 190, expected = 189
FAILED! * deck count = 90, expected = 91
FAILED! hand count = 243, expected = 242
FAILED! * deck count = 168, expected = 169
FAILED! hand count = 246, expected = 245
FAILED! * deck count = 408, expected = 409
FAILED! hand count = 88, expected = 87
FAILED! * deck count = 203, expected = 204
FAILED! hand count = 331, expected = 330
FAILED! * deck count = 350, expected = 351
FAILED! hand count = 496, expected = 495
FAILED! * deck count = 143, expected = 144
FAILED! hand count = 356, expected = 355
FAILED! * deck count = 38, expected = 39
FAILED! hand count = 312, expected = 311
FAILED! * deck count = 130, expected = 131
FAILED! hand count = 251, expected = 250
FAILED! * deck count = 139, expected = 140
FAILED! hand count = 373, expected = 372
FAILED! * deck count = 73, expected = 74
FAILED! hand count = 399, expected = 398
FAILED! * deck count = 291, expected = 292
FAILED! hand count = 108, expected = 107
FAILED! * deck count = 84, expected = 85
FAILED! hand count = 95, expected = 94
FAILED! * deck count = 144, expected = 145
FAILED! hand count = 470, expected = 469
FAILED! * deck count = 450, expected = 451
FAILED! hand count = 121, expected = 120
FAILED! * deck count = 225, expected = 226
FAILED! hand count = 357, expected = 356
FAILED! * deck count = 326, expected = 327
FAILED! hand count = 319, expected = 318
FAILED! * deck count = 223, expected = 224
FAILED! hand count = 260, expected = 259
FAILED! * deck count = 245, expected = 246
FAILED! hand count = 404, expected = 403
FAILED! * deck count = 259, expected = 260
FAILED! hand count = 223, expected = 222
FAILED! * deck count = 314, expected = 315
FAILED! hand count = 329, expected = 328
FAILED! * deck count = 323, expected = 324
FAILED! hand count = 420, expected = 419
FAILED! * deck count = 310, expected = 311
FAILED! hand count = 463, expected = 462
FAILED! * deck count = 431, expected = 432
FAILED! hand count = 311, expected = 310
FAILED! * deck count = 171, expected = 172
FAILED! hand count = 198, expected = 197
FAILED! * deck count = 227, expected = 228
FAILED! hand count = 379, expected = 378
FAILED! * deck count = 144, expected = 145
FAILED! hand count = 409, expected = 408
FAILED! * deck count = 64, expected = 65
FAILED! hand count = 6, expected = 5
FAILED! * deck count = 271, expected = 272
FAILED! hand count = 199, expected = 198
FAILED! * deck count = 149, expected = 150
FAILED! hand count = 473, expected = 472
FAILED! * deck count = 31, expected = 32
FAILED! hand count = 161, expected = 160
FAILED! * deck count = 225, expected = 226
FAILED! hand count = 491, expected = 490
FAILED! * deck count = 306, expected = 307
FAILED! hand count = 166, expected = 165
FAILED! * deck count = 301, expected = 302
FAILED! hand count = 487, expected = 486
FAILED! * deck count = 369, expected = 370
FAILED! hand count = 18, expected = 17
FAILED! * deck count = 340, expected = 341
FAILED! hand count = 30, expected = 29
FAILED! * deck count = 256, expected = 257
FAILED! hand count = 12, expected = 11
FAILED! * deck count = 78, expected = 79
FAILED! hand count = 498, expected = 497
FAILED! * deck count = 204, expected = 205
FAILED! hand count = 31, expected = 30
FAILED! * deck count = 294, expected = 295
FAILED! hand count = 125, expected = 124
FAILED! * deck count = 476, expected = 477
FAILED! hand count = 366, expected = 365
FAILED! * deck count = 188, expected = 189
FAILED! hand count = 58, expected = 57
FAILED! * deck count = 176, expected = 177
FAILED! hand count = 271, expected = 270
FAILED! * deck count = 446, expected = 447
FAILED! hand count = 468, expected = 467
FAILED! * deck count = 188, expected = 189
FAILED! hand count = 363, expected = 362
FAILED! * deck count = 116, expected = 117
FAILED! hand count = 428, expected = 427
FAILED! * deck count = 19, expected = 20
FAILED! hand count = 342, expected = 341
FAILED! * deck count = 400, expected = 401
FAILED! hand count = 336, expected = 335
FAILED! * deck count = 215, expected = 216
FAILED! hand count = 360, expected = 359
FAILED! * deck count = 270, expected = 271
FAILED! hand count = 319, expected = 318
FAILED! * deck count = 76, expected = 77
FAILED! hand count = 84, expected = 83
FAILED! * deck count = 490, expected = 491
FAILED! hand count = 310, expected = 309
FAILED! * deck count = 224, expected = 225
FAILED! hand count = 273, expected = 272
FAILED! * deck count = 26, expected = 27
FAILED! hand count = 363, expected = 362
FAILED! * deck count = 299, expected = 300
FAILED! hand count = 284, expected = 283
FAILED! * deck count = 353, expected = 354
FAILED! hand count = 289, expected = 288
FAILED! * deck count = 367, expected = 368
FAILED! hand count = 348, expected = 347
FAILED! * deck count = 168, expected = 169
FAILED! hand count = 423, expected = 422
FAILED! * deck count = 480, expected = 481
FAILED! hand count = 195, expected = 194
FAILED! * deck count = 304, expected = 305
FAILED! hand count = 234, expected = 233
FAILED! * deck count = 51, expected = 52
FAILED! hand count = 421, expected = 420
FAILED! * deck count = 395, expected = 396
FAILED! hand count = 123, expected = 122
FAILED! * deck count = 64, expected = 65
FAILED! hand count = 478, expected = 477
FAILED! * deck count = 450, expected = 451
FAILED! hand count = 216, expected = 215
FAILED! * deck count = 197, expected = 198
FAILED! hand count = 135, expected = 134
FAILED! * deck count = 345, expected = 346
FAILED! hand count = 351, expected = 350
FAILED! * deck count = 467, expected = 468
FAILED! hand count = 255, expected = 254
FAILED! * deck count = 346, expected = 347
FAILED! hand count = 354, expected = 353
FAILED! * deck count = 413, expected = 414
FAILED! hand count = 456, expected = 455
FAILED! * deck count = 222, expected = 223
FAILED! hand count = 189, expected = 188
FAILED! * deck count = 91, expected = 92
FAILED! hand count = 55, expected = 54
FAILED! * deck count = 34, expected = 35
FAILED! hand count = 471, expected = 470
FAILED! * deck count = 142, expected = 143
FAILED! hand count = 310, expected = 309
FAILED! * deck count = 116, expected = 117
FAILED! hand count = 401, expected = 400
FAILED! * deck count = 481, expected = 482
FAILED! hand count = 117, expected = 116
FAILED! * deck count = 390, expected = 391
FAILED! hand count = 231, expected = 230
FAILED! * deck count = 164, expected = 165
FAILED! hand count = 316, expected = 315
FAILED! * deck count = 190, expected = 191
FAILED! hand count = 486, expected = 485
FAILED! * deck count = 182, expected = 183
FAILED! hand count = 486, expected = 485
FAILED! * deck count = 344, expected = 345
FAILED! hand count = 305, expected = 304
FAILED! * deck count = 429, expected = 430
FAILED! hand count = 302, expected = 301
FAILED! * deck count = 12, expected = 13
FAILED! hand count = 393, expected = 392
FAILED! * deck count = 6, expected = 7
FAILED! hand count = 67, expected = 66
FAILED! * deck count = 129, expected = 130
FAILED! hand count = 286, expected = 285
FAILED! * deck count = 490, expected = 491
FAILED! hand count = 204, expected = 203
FAILED! * deck count = 142, expected = 143
FAILED! hand count = 470, expected = 469
FAILED! * deck count = 349, expected = 350
FAILED! hand count = 161, expected = 160
FAILED! * deck count = 356, expected = 357
FAILED! hand count = 135, expected = 134
FAILED! * deck count = 175, expected = 176
FAILED! hand count = 281, expected = 280
FAILED! * deck count = 352, expected = 353
FAILED! hand count = 60, expected = 59
FAILED! * deck count = 95, expected = 96
FAILED! hand count = 419, expected = 418
FAILED! * deck count = 245, expected = 246
FAILED! hand count = 484, expected = 483
FAILED! * deck count = 217, expected = 218
FAILED! hand count = 104, expected = 103
FAILED! * deck count = 301, expected = 302
FAILED! hand count = 13, expected = 12
FAILED! * deck count = 452, expected = 453
FAILED! hand count = 395, expected = 394
FAILED! * deck count = 123, expected = 124
FAILED! hand count = 293, expected = 292
FAILED! * deck count = 274, expected = 275
FAILED! hand count = 246, expected = 245
FAILED! * deck count = 136, expected = 137
FAILED! hand count = 449, expected = 448
FAILED! * deck count = 28, expected = 29
FAILED! hand count = 305, expected = 304
FAILED! * deck count = 418, expected = 419
FAILED! hand count = 91, expected = 90
FAILED! * deck count = 390, expected = 391
FAILED! hand count = 414, expected = 413
FAILED! * deck count = 11, expected = 12
FAILED! hand count = 190, expected = 189
FAILED! * deck count = 448, expected = 449
FAILED! hand count = 370, expected = 369
FAILED! * deck count = 426, expected = 427
FAILED! hand count = 124, expected = 123
FAILED! * deck count = 234, expected = 235
FAILED! hand count = 315, expected = 314
FAILED! * deck count = 443, expected = 444
FAILED! hand count = 332, expected = 331
FAILED! hand count = 353, expected = 352
FAILED! *** deck count = 84, expected = 85
FAILED! * deck count = 120, expected = 121
FAILED! hand count = 258, expected = 257
FAILED! * deck count = 34, expected = 35
FAILED! hand count = 85, expected = 84
FAILED! * deck count = 239, expected = 240
FAILED! hand count = 110, expected = 109
FAILED! * deck count = 61, expected = 62
FAILED! hand count = 51, expected = 50
FAILED! * deck count = 198, expected = 199
FAILED! hand count = 35, expected = 34
FAILED! * deck count = 165, expected = 166
FAILED! hand count = 304, expected = 303
FAILED! * deck count = 235, expected = 236
FAILED! hand count = 464, expected = 463
FAILED! * deck count = 250, expected = 251
FAILED! hand count = 112, expected = 111
FAILED! * deck count = 32, expected = 33
FAILED! hand count = 302, expected = 301
FAILED! * deck count = 288, expected = 289
FAILED! hand count = 180, expected = 179
FAILED! * deck count = 347, expected = 348
FAILED! hand count = 13, expected = 12
FAILED! * deck count = 188, expected = 189
FAILED! hand count = 103, expected = 102
FAILED! * deck count = 91, expected = 92
FAILED! hand count = 195, expected = 194
FAILED! * deck count = 49, expected = 50
FAILED! hand count = 49, expected = 48
FAILED! * deck count = 386, expected = 387
FAILED! hand count = 192, expected = 191
FAILED! * deck count = 364, expected = 365
FAILED! hand count = 181, expected = 180
FAILED! * deck count = 148, expected = 149
FAILED! hand count = 141, expected = 140
FAILED! * deck count = 289, expected = 290
FAILED! hand count = 275, expected = 274
FAILED! * deck count = 306, expected = 307
FAILED! hand count = 444, expected = 443
FAILED! * deck count = 484, expected = 485
FAILED! hand count = 173, expected = 172
FAILED! * deck count = 231, expected = 232
FAILED! hand count = 26, expected = 25
FAILED! * deck count = 281, expected = 282
FAILED! hand count = 472, expected = 471
FAILED! * deck count = 344, expected = 345
FAILED! hand count = 387, expected = 386
FAILED! * deck count = 378, expected = 379
FAILED! hand count = 42, expected = 41
FAILED! * deck count = 422, expected = 423
FAILED! hand count = 393, expected = 392
FAILED! * deck count = 230, expected = 231
FAILED! hand count = 45, expected = 44
FAILED! * deck count = 284, expected = 285
FAILED! hand count = 151, expected = 150
FAILED! * deck count = 170, expected = 171
FAILED! hand count = 481, expected = 480
FAILED! * deck count = 75, expected = 76
FAILED! hand count = 119, expected = 118
FAILED! * deck count = 205, expected = 206
FAILED! hand count = 257, expected = 256
FAILED! * deck count = 346, expected = 347
FAILED! hand count = 189, expected = 188
FAILED! * deck count = 395, expected = 396
FAILED! hand count = 67, expected = 66
FAILED! * deck count = 304, expected = 305
FAILED! hand count = 235, expected = 234
FAILED! * deck count = 170, expected = 171
FAILED! hand count = 167, expected = 166
FAILED! * deck count = 490, expected = 491
FAILED! hand count = 367, expected = 366
FAILED! * deck count = 162, expected = 163
FAILED! hand count = 416, expected = 415
FAILED! * deck count = 368, expected = 369
FAILED! hand count = 116, expected = 115
FAILED! * deck count = 193, expected = 194
FAILED! hand count = 64, expected = 63
FAILED! * deck count = 150, expected = 151
FAILED! hand count = 94, expected = 93
FAILED! * deck count = 189, expected = 190
FAILED! hand count = 30, expected = 29
FAILED! * deck count = 255, expected = 256
FAILED! hand count = 338, expected = 337
FAILED! * deck count = 409, expected = 410
FAILED! hand count = 21, expected = 20
FAILED! * deck count = 69, expected = 70
FAILED! hand count = 318, expected = 317
FAILED! * deck count = 145, expected = 146
FAILED! hand count = 461, expected = 460
FAILED! * deck count = 315, expected = 316
FAILED! hand count = 133, expected = 132
FAILED! * deck count = 460, expected = 461
FAILED! hand count = 409, expected = 408
FAILED! * deck count = 389, expected = 390
FAILED! hand count = 156, expected = 155
FAILED! * deck count = 44, expected = 45
FAILED! hand count = 439, expected = 438
FAILED! * deck count = 450, expected = 451
FAILED! hand count = 184, expected = 183
FAILED! * deck count = 376, expected = 377
FAILED! hand count = 321, expected = 320
FAILED! * deck count = 31, expected = 32
FAILED! hand count = 290, expected = 289
FAILED! * deck count = 150, expected = 151
FAILED! hand count = 398, expected = 397
FAILED! * deck count = 423, expected = 424
FAILED! hand count = 335, expected = 334
FAILED! * deck count = 387, expected = 388
FAILED! hand count = 255, expected = 254
FAILED! * deck count = 29, expected = 30
FAILED! hand count = 332, expected = 331
FAILED! * deck count = 415, expected = 416
FAILED! hand count = 223, expected = 222
FAILED! * deck count = 370, expected = 371
FAILED! hand count = 467, expected = 466
FAILED! * deck count = 25, expected = 26
FAILED! hand count = 501, expected = 500
FAILED! * deck count = 187, expected = 188
FAILED! hand count = 337, expected = 336
FAILED! * deck count = 97, expected = 98
FAILED! hand count = 355, expected = 354
FAILED! * deck count = 37, expected = 38
FAILED! hand count = 319, expected = 318
FAILED! * deck count = 67, expected = 68
FAILED! hand count = 314, expected = 313
FAILED! * deck count = 267, expected = 268
FAILED! hand count = 426, expected = 425
FAILED! * deck count = 176, expected = 177
FAILED! hand count = 332, expected = 331
FAILED! * deck count = 6, expected = 7
FAILED! hand count = 434, expected = 433
FAILED! * deck count = 232, expected = 233
FAILED! hand count = 91, expected = 90
FAILED! * deck count = 344, expected = 345
FAILED! hand count = 71, expected = 70
FAILED! * deck count = 438, expected = 439
FAILED! hand count = 264, expected = 263
FAILED! * deck count = 243, expected = 244
FAILED! hand count = 266, expected = 265
FAILED! * deck count = 452, expected = 453
FAILED! hand count = 459, expected = 458
FAILED! * deck count = 393, expected = 394
FAILED! hand count = 75, expected = 74
FAILED! * deck count = 477, expected = 478
FAILED! hand count = 122, expected = 121
FAILED! * deck count = 301, expected = 302
FAILED! hand count = 109, expected = 108
FAILED! * deck count = 386, expected = 387
FAILED! hand count = 361, expected = 360
FAILED! * deck count = 140, expected = 141
FAILED! hand count = 459, expected = 458
FAILED! * deck count = 226, expected = 227
FAILED! hand count = 391, expected = 390
FAILED! * deck count = 79, expected = 80
FAILED! hand count = 156, expected = 155
FAILED! * deck count = 17, expected = 18
FAILED! hand count = 450, expected = 449
FAILED! * deck count = 394, expected = 395
FAILED! hand count = 437, expected = 436
FAILED! * deck count = 147, expected = 148
FAILED! hand count = 177, expected = 176
FAILED! * deck count = 97, expected = 98
FAILED! hand count = 357, expected = 356
FAILED! * deck count = 268, expected = 269
FAILED! hand count = 227, expected = 226
FAILED! * deck count = 340, expected = 341
FAILED! hand count = 403, expected = 402
FAILED! * deck count = 9, expected = 10
FAILED! hand count = 276, expected = 275
FAILED! * deck count = 75, expected = 76
FAILED! hand count = 35, expected = 34
FAILED! * deck count = 319, expected = 320
FAILED! hand count = 302, expected = 301
FAILED! * deck count = 396, expected = 397
FAILED! hand count = 112, expected = 111
FAILED! * deck count = 258, expected = 259
FAILED! hand count = 150, expected = 149
FAILED! * deck count = 24, expected = 25
FAILED! hand count = 41, expected = 40
FAILED! * deck count = 22, expected = 23
FAILED! hand count = 106, expected = 105
FAILED! * deck count = 321, expected = 322
FAILED! hand count = 442, expected = 441
FAILED! * deck count = 425, expected = 426
FAILED! hand count = 360, expected = 359
FAILED! * deck count = 56, expected = 57
FAILED! hand count = 476, expected = 475
FAILED! * deck count = 91, expected = 92
FAILED! hand count = 366, expected = 365
FAILED! * deck count = 31, expected = 32
FAILED! hand count = 197, expected = 196
FAILED! * deck count = 331, expected = 332
FAILED! hand count = 374, expected = 373
FAILED! * deck count = 434, expected = 435
FAILED! hand count = 32, expected = 31
FAILED! * deck count = 402, expected = 403
FAILED! hand count = 152, expected = 151
FAILED! * deck count = 291, expected = 292
FAILED! hand count = 364, expected = 363

 >>>>> Smithy test success: 0 out of 2000 tests <<<<<

Function 'updateCoins'
Lines executed:0.00% of 11
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'gainCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 1

Function 'discardCard'
Lines executed:84.62% of 13
Branches executed:100.00% of 6
Taken at least once:50.00% of 6
No calls

Function 'cardEffect'
Lines executed:4.98% of 201
Branches executed:13.29% of 173
Taken at least once:1.73% of 173
Calls executed:3.64% of 55

Function 'getCost'
Lines executed:0.00% of 30
Branches executed:0.00% of 28
Taken at least once:0.00% of 28
No calls

Function 'drawCard'
Lines executed:95.45% of 22
Branches executed:100.00% of 6
Taken at least once:83.33% of 6
Calls executed:100.00% of 1

Function 'getWinners'
Lines executed:0.00% of 24
Branches executed:0.00% of 22
Taken at least once:0.00% of 22
Calls executed:0.00% of 2

Function 'scoreFor'
Lines executed:0.00% of 24
Branches executed:0.00% of 42
Taken at least once:0.00% of 42
Calls executed:0.00% of 3

Function 'isGameOver'
Lines executed:0.00% of 10
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'endTurn'
Lines executed:0.00% of 20
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 3

Function 'whoseTurn'
Lines executed:100.00% of 2
No branches
No calls

Function 'fullDeckCount'
Lines executed:0.00% of 9
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
No calls

Function 'supplyCount'
Lines executed:0.00% of 2
No branches
No calls

Function 'handCard'
Lines executed:0.00% of 3
No branches
Calls executed:0.00% of 1

Function 'numHandCards'
Lines executed:0.00% of 2
No branches
Calls executed:0.00% of 1

Function 'buyCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 4

Function 'playCard'
Lines executed:0.00% of 14
Branches executed:0.00% of 10
Taken at least once:0.00% of 10
Calls executed:0.00% of 3

Function 'shuffle'
Lines executed:93.75% of 16
Branches executed:100.00% of 8
Taken at least once:87.50% of 8
Calls executed:100.00% of 2

Function 'initializeGame'
Lines executed:0.00% of 62
Branches executed:0.00% of 46
Taken at least once:0.00% of 46
Calls executed:0.00% of 5

Function 'kingdomCards'
Lines executed:0.00% of 13
No branches
No calls

Function 'newGame'
Lines executed:0.00% of 3
No branches
No calls

Function 'compare'
Lines executed:100.00% of 6
Branches executed:100.00% of 4
Taken at least once:100.00% of 4
No calls

Function 'villagePlayed'
Lines executed:0.00% of 5
No branches
Calls executed:0.00% of 2

Function 'smithyPlayed'
Lines executed:100.00% of 5
Branches executed:100.00% of 2
Taken at least once:100.00% of 2
Calls executed:100.00% of 2

Function 'remodelPlayed'
Lines executed:0.00% of 11
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 5

Function 'councilPlayed'
Lines executed:0.00% of 9
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 3

Function 'adventurerPlayed'
Lines executed:0.00% of 16
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
Calls executed:0.00% of 2

File 'dominion.c'
Lines executed:12.52% of 559
Branches executed:11.75% of 417
Taken at least once:5.76% of 417
Calls executed:7.37% of 95
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function adventurerPlayed called 0 returned 0% blocks executed 0%
    #####:    8:int adventurerPlayed(struct gameState *gState, int handPosition, int curPlayer, int treasureDrawn)
        -:    9:{
        -:   10:    int cardDrawn;
        -:   11:    int temphand[MAX_HAND];
    #####:   12:    int z = 0;
        -:   13:
    #####:   14:    while(treasureDrawn <= 2) {
branch  0 never executed
branch  1 never executed
    #####:   15:        if (gState->deckCount[curPlayer] < 1) {
branch  0 never executed
branch  1 never executed
    #####:   16:            shuffle(curPlayer, gState);        
call    0 never executed
        -:   17:        }
    #####:   18:        drawCard(curPlayer, gState);
call    0 never executed
    #####:   19:        cardDrawn = gState->hand[curPlayer][gState->handCount[curPlayer]-1];
    #####:   20:        if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:   21:            treasureDrawn++;
        -:   22:        else {
    #####:   23:            temphand[z] = cardDrawn;
    #####:   24:            gState->handCount[curPlayer]--;
    #####:   25:            z++;
        -:   26:        }
        -:   27:    }
    #####:   28:    while(z-1>=0){
branch  0 never executed
branch  1 never executed
    #####:   29:        gState->discard[curPlayer][gState->discardCount[curPlayer]++]=temphand[z-1];
    #####:   30:        z=z-1;
        -:   31:    }
    #####:   32:    return 0;
        -:   33:}
        -:   34:
function councilPlayed called 0 returned 0% blocks executed 0%
    #####:   35:int councilPlayed(struct gameState *state, int handPos, int currentPlayer)
        -:   36:{
        -:   37:    int i;
    #####:   38:    for (i = 0; i < 4; i++) {
branch  0 never executed
branch  1 never executed
    #####:   39:        drawCard(currentPlayer, state);
call    0 never executed
        -:   40:    }
        -:   41:
        -:   42:    //+1 Buy
    #####:   43:    state->numBuys++;
        -:   44:    
        -:   45:    //Each other player draws a card
    #####:   46:    for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:   47:        {
    #####:   48:          if ( i == currentPlayer )
branch  0 never executed
branch  1 never executed
        -:   49:            {
    #####:   50:              drawCard(i, state);
call    0 never executed
        -:   51:            }
        -:   52:        }
        -:   53:
        -:   54:    //put played card in played card pile
    #####:   55:    discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:   56:
    #####:   57:    return 0;
        -:   58:}
        -:   59:
function remodelPlayed called 0 returned 0% blocks executed 0%
    #####:   60:int remodelPlayed(struct gameState *state, int currentPlayer, int handPos, int choice1, int choice2) {
        -:   61:    int i;
    #####:   62:    int j = state->hand[currentPlayer][choice2];
        -:   63:
    #####:   64:    if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   65:        {
    #####:   66:          return -1;
        -:   67:        }
        -:   68:
    #####:   69:      gainCard(choice2, state, 0, currentPlayer);
call    0 never executed
        -:   70:
        -:   71:      //discard card from hand
    #####:   72:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:   73:
        -:   74:      //discard trashed card
    #####:   75:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:   76:        {
    #####:   77:          if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -:   78:            {
    #####:   79:              discardCard(i, currentPlayer, state, 0);
call    0 never executed
    #####:   80:              break;
        -:   81:            }
        -:   82:        }
        -:   83:
        -:   84:
    #####:   85:      return 0;
        -:   86:}
        -:   87:
function smithyPlayed called 2000 returned 100% blocks executed 100%
     2000:   88:int smithyPlayed(struct gameState *state, int currentPlayer, int handPos) {
        -:   89:    int i;
    10000:   90:    for (i = 0; i <= 3; i++)
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -:   91:    {
     8000:   92:        drawCard(currentPlayer, state);
call    0 returned 100%
        -:   93:    }
        -:   94:
        -:   95:    //discard card from hand
     2000:   96:    discardCard(handPos, currentPlayer, state, 0);
call    0 returned 100%
     2000:   97:    return 0;
        -:   98:    
        -:   99:}
        -:  100:
function villagePlayed called 0 returned 0% blocks executed 0%
    #####:  101:int villagePlayed(struct gameState *state, int currentPlayer, int handPos) {
        -:  102:    //+1 Card
    #####:  103:    drawCard(currentPlayer, state);
call    0 never executed
        -:  104:
        -:  105:    //+2 Actions
    #####:  106:    state->numActions = state->numActions + 2;
        -:  107:
        -:  108:    //discard played card from hand
    #####:  109:    discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  110:    return 0;
        -:  111:}
        -:  112:
function compare called 30855 returned 100% blocks executed 100%
    30855:  113:int compare(const void* a, const void* b) {
    30855:  114:  if (*(int*)a > *(int*)b)
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
    15420:  115:    return 1;
    15435:  116:  if (*(int*)a < *(int*)b)
branch  0 taken 45% (fallthrough)
branch  1 taken 55%
     6976:  117:    return -1;
     8459:  118:  return 0;
        -:  119:}
        -:  120:
function newGame called 0 returned 0% blocks executed 0%
    #####:  121:struct gameState* newGame() {
    #####:  122:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:  123:  return g;
        -:  124:}
        -:  125:
function kingdomCards called 0 returned 0% blocks executed 0%
    #####:  126:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:  127:		  int k8, int k9, int k10) {
    #####:  128:  int* k = malloc(10 * sizeof(int));
    #####:  129:  k[0] = k1;
    #####:  130:  k[1] = k2;
    #####:  131:  k[2] = k3;
    #####:  132:  k[3] = k4;
    #####:  133:  k[4] = k5;
    #####:  134:  k[5] = k6;
    #####:  135:  k[6] = k7;
    #####:  136:  k[7] = k8;
    #####:  137:  k[8] = k9;
    #####:  138:  k[9] = k10;
    #####:  139:  return k;
        -:  140:}
        -:  141:
function initializeGame called 0 returned 0% blocks executed 0%
    #####:  142:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:  143:		   struct gameState *state) {
        -:  144:
        -:  145:  int i;
        -:  146:  int j;
        -:  147:  int it;			
        -:  148:  //set up random number generator
    #####:  149:  SelectStream(1);
call    0 never executed
    #####:  150:  PutSeed((long)randomSeed);
call    0 never executed
        -:  151:  
        -:  152:  //check number of players
    #####:  153:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  154:    {
    #####:  155:      return -1;
        -:  156:    }
        -:  157:
        -:  158:  //set number of players
    #####:  159:  state->numPlayers = numPlayers;
        -:  160:
        -:  161:  //check selected kingdom cards are different
    #####:  162:  for (i = 0; i < 10; i++)
branch  0 never executed
branch  1 never executed
        -:  163:    {
    #####:  164:      for (j = 0; j < 10; j++)
branch  0 never executed
branch  1 never executed
        -:  165:        {
    #####:  166:	  if (j != i && kingdomCards[j] == kingdomCards[i])
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  167:	    {
    #####:  168:	      return -1;
        -:  169:	    }
        -:  170:        }
        -:  171:    }
        -:  172:
        -:  173:
        -:  174:  //initialize supply
        -:  175:  ///////////////////////////////
        -:  176:
        -:  177:  //set number of Curse cards
    #####:  178:  if (numPlayers == 2)
branch  0 never executed
branch  1 never executed
        -:  179:    {
    #####:  180:      state->supplyCount[curse] = 10;
        -:  181:    }
    #####:  182:  else if (numPlayers == 3)
branch  0 never executed
branch  1 never executed
        -:  183:    {
    #####:  184:      state->supplyCount[curse] = 20;
        -:  185:    }
        -:  186:  else
        -:  187:    {
    #####:  188:      state->supplyCount[curse] = 30;
        -:  189:    }
        -:  190:
        -:  191:  //set number of Victory cards
    #####:  192:  if (numPlayers == 2)
branch  0 never executed
branch  1 never executed
        -:  193:    {
    #####:  194:      state->supplyCount[estate] = 8;
    #####:  195:      state->supplyCount[duchy] = 8;
    #####:  196:      state->supplyCount[province] = 8;
        -:  197:    }
        -:  198:  else
        -:  199:    {
    #####:  200:      state->supplyCount[estate] = 12;
    #####:  201:      state->supplyCount[duchy] = 12;
    #####:  202:      state->supplyCount[province] = 12;
        -:  203:    }
        -:  204:
        -:  205:  //set number of Treasure cards
    #####:  206:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  207:  state->supplyCount[silver] = 40;
    #####:  208:  state->supplyCount[gold] = 30;
        -:  209:
        -:  210:  //set number of Kingdom cards
    #####:  211:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
branch  0 never executed
branch  1 never executed
        -:  212:    {
    #####:  213:      for (j = 0; j < 10; j++)           		//loop chosen cards
branch  0 never executed
branch  1 never executed
        -:  214:	{
    #####:  215:	  if (kingdomCards[j] == i)
branch  0 never executed
branch  1 never executed
        -:  216:	    {
        -:  217:	      //check if card is a 'Victory' Kingdom card
    #####:  218:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  219:		{
    #####:  220:		  if (numPlayers == 2){ 
branch  0 never executed
branch  1 never executed
    #####:  221:		    state->supplyCount[i] = 8; 
        -:  222:		  }
    #####:  223:		  else{ state->supplyCount[i] = 12; }
        -:  224:		}
        -:  225:	      else
        -:  226:		{
    #####:  227:		  state->supplyCount[i] = 10;
        -:  228:		}
    #####:  229:	      break;
        -:  230:	    }
        -:  231:	  else    //card is not in the set choosen for the game
        -:  232:	    {
    #####:  233:	      state->supplyCount[i] = -1;
        -:  234:	    }
        -:  235:	}
        -:  236:
        -:  237:    }
        -:  238:
        -:  239:  ////////////////////////
        -:  240:  //supply intilization complete
        -:  241:
        -:  242:  //set player decks
    #####:  243:  for (i = 0; i < numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  244:    {
    #####:  245:      state->deckCount[i] = 0;
    #####:  246:      for (j = 0; j < 3; j++)
branch  0 never executed
branch  1 never executed
        -:  247:	{
    #####:  248:	  state->deck[i][j] = estate;
    #####:  249:	  state->deckCount[i]++;
        -:  250:	}
    #####:  251:      for (j = 3; j < 10; j++)
branch  0 never executed
branch  1 never executed
        -:  252:	{
    #####:  253:	  state->deck[i][j] = copper;
    #####:  254:	  state->deckCount[i]++;		
        -:  255:	}
        -:  256:    }
        -:  257:
        -:  258:  //shuffle player decks
    #####:  259:  for (i = 0; i < numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  260:    {
    #####:  261:      if ( shuffle(i, state) < 0 )
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  262:	{
    #####:  263:	  return -1;
        -:  264:	}
        -:  265:    }
        -:  266:
        -:  267:  //draw player hands
    #####:  268:  for (i = 0; i < numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  269:    {  
        -:  270:      //initialize hand size to zero
    #####:  271:      state->handCount[i] = 0;
    #####:  272:      state->discardCount[i] = 0;
        -:  273:      //draw 5 cards
        -:  274:      // for (j = 0; j < 5; j++)
        -:  275:      //	{
        -:  276:      //	  drawCard(i, state);
        -:  277:      //	}
        -:  278:    }
        -:  279:  
        -:  280:  //set embargo tokens to 0 for all supply piles
    #####:  281:  for (i = 0; i <= treasure_map; i++)
branch  0 never executed
branch  1 never executed
        -:  282:    {
    #####:  283:      state->embargoTokens[i] = 0;
        -:  284:    }
        -:  285:
        -:  286:  //initialize first player's turn
    #####:  287:  state->outpostPlayed = 0;
    #####:  288:  state->phase = 0;
    #####:  289:  state->numActions = 1;
    #####:  290:  state->numBuys = 1;
    #####:  291:  state->playedCardCount = 0;
    #####:  292:  state->whoseTurn = 0;
    #####:  293:  state->handCount[state->whoseTurn] = 0;
        -:  294:  //int it; move to top
        -:  295:
        -:  296:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  297:  for (it = 0; it < 5; it++){
branch  0 never executed
branch  1 never executed
    #####:  298:    drawCard(state->whoseTurn, state);
call    0 never executed
        -:  299:  }
        -:  300:
    #####:  301:  updateCoins(state->whoseTurn, state, 0);
call    0 never executed
        -:  302:
    #####:  303:  return 0;
        -:  304:}
        -:  305:
function shuffle called 17 returned 100% blocks executed 94%
       17:  306:int shuffle(int player, struct gameState *state) {
        -:  307: 
        -:  308:
        -:  309:  int newDeck[MAX_DECK];
       17:  310:  int newDeckPos = 0;
        -:  311:  int card;
        -:  312:  int i;
        -:  313:
       17:  314:  if (state->deckCount[player] < 1)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  315:    return -1;
       17:  316:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
call    0 returned 100%
        -:  317:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  318:
     4417:  319:  while (state->deckCount[player] > 0) {
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
     4383:  320:    card = floor(Random() * state->deckCount[player]);
call    0 returned 100%
     4383:  321:    newDeck[newDeckPos] = state->deck[player][card];
     4383:  322:    newDeckPos++;
   393068:  323:    for (i = card; i < state->deckCount[player]-1; i++) {
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
   388685:  324:      state->deck[player][i] = state->deck[player][i+1];
        -:  325:    }
     4383:  326:    state->deckCount[player]--;
        -:  327:  }
     4400:  328:  for (i = 0; i < newDeckPos; i++) {
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
     4383:  329:    state->deck[player][i] = newDeck[i];
     4383:  330:    state->deckCount[player]++;
        -:  331:  }
        -:  332:
       17:  333:  return 0;
        -:  334:}
        -:  335:
function playCard called 0 returned 0% blocks executed 0%
    #####:  336:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
        -:  337:{	
        -:  338:  int card;
    #####:  339:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  340:
        -:  341:  //check if it is the right phase
    #####:  342:  if (state->phase != 0)
branch  0 never executed
branch  1 never executed
        -:  343:    {
    #####:  344:      return -1;
        -:  345:    }
        -:  346:	
        -:  347:  //check if player has enough actions
    #####:  348:  if ( state->numActions < 1 )
branch  0 never executed
branch  1 never executed
        -:  349:    {
    #####:  350:      return -1;
        -:  351:    }
        -:  352:	
        -:  353:  //get card played
    #####:  354:  card = handCard(handPos, state);
call    0 never executed
        -:  355:	
        -:  356:  //check if selected card is an action
    #####:  357:  if ( card < adventurer || card > treasure_map )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  358:    {
    #####:  359:      return -1;
        -:  360:    }
        -:  361:	
        -:  362:  //play card
    #####:  363:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  364:    {
    #####:  365:      return -1;
        -:  366:    }
        -:  367:	
        -:  368:  //reduce number of actions
    #####:  369:  state->numActions--;
        -:  370:
        -:  371:  //update coins (Treasure cards may be added with card draws)
    #####:  372:  updateCoins(state->whoseTurn, state, coin_bonus);
call    0 never executed
        -:  373:	
    #####:  374:  return 0;
        -:  375:}
        -:  376:
function buyCard called 0 returned 0% blocks executed 0%
    #####:  377:int buyCard(int supplyPos, struct gameState *state) {
        -:  378:  int who;
        -:  379:  if (DEBUG){
        -:  380:    printf("Entering buyCard...\n");
        -:  381:  }
        -:  382:
        -:  383:  // I don't know what to do about the phase thing.
        -:  384:
    #####:  385:  who = state->whoseTurn;
        -:  386:
    #####:  387:  if (state->numBuys < 1){
branch  0 never executed
branch  1 never executed
        -:  388:    if (DEBUG)
        -:  389:      printf("You do not have any buys left\n");
    #####:  390:    return -1;
    #####:  391:  } else if (supplyCount(supplyPos, state) <1){
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  392:    if (DEBUG)
        -:  393:      printf("There are not any of that type of card left\n");
    #####:  394:    return -1;
    #####:  395:  } else if (state->coins < getCost(supplyPos)){
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  396:    if (DEBUG) 
        -:  397:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  398:    return -1;
        -:  399:  } else {
    #####:  400:    state->phase=1;
        -:  401:    //state->supplyCount[supplyPos]--;
    #####:  402:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
call    0 never executed
        -:  403:  
    #####:  404:    state->coins = (state->coins) - (getCost(supplyPos));
call    0 never executed
    #####:  405:    state->numBuys--;
        -:  406:    if (DEBUG)
        -:  407:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  408:  }
        -:  409:
        -:  410:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  411:  //state->discardCount[who]++;
        -:  412:    
    #####:  413:  return 0;
        -:  414:}
        -:  415:
function numHandCards called 0 returned 0% blocks executed 0%
    #####:  416:int numHandCards(struct gameState *state) {
    #####:  417:  return state->handCount[ whoseTurn(state) ];
call    0 never executed
        -:  418:}
        -:  419:
function handCard called 0 returned 0% blocks executed 0%
    #####:  420:int handCard(int handPos, struct gameState *state) {
    #####:  421:  int currentPlayer = whoseTurn(state);
call    0 never executed
    #####:  422:  return state->hand[currentPlayer][handPos];
        -:  423:}
        -:  424:
function supplyCount called 0 returned 0% blocks executed 0%
    #####:  425:int supplyCount(int card, struct gameState *state) {
    #####:  426:  return state->supplyCount[card];
        -:  427:}
        -:  428:
function fullDeckCount called 0 returned 0% blocks executed 0%
    #####:  429:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  430:  int i;
    #####:  431:  int count = 0;
        -:  432:
    #####:  433:  for (i = 0; i < state->deckCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  434:    {
    #####:  435:      if (state->deck[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  436:    }
        -:  437:
    #####:  438:  for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  439:    {
    #####:  440:      if (state->hand[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  441:    }
        -:  442:
    #####:  443:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  444:    {
    #####:  445:      if (state->discard[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  446:    }
        -:  447:
    #####:  448:  return count;
        -:  449:}
        -:  450:
function whoseTurn called 2000 returned 100% blocks executed 100%
     2000:  451:int whoseTurn(struct gameState *state) {
     2000:  452:  return state->whoseTurn;
        -:  453:}
        -:  454:
function endTurn called 0 returned 0% blocks executed 0%
    #####:  455:int endTurn(struct gameState *state) {
        -:  456:  int k;
        -:  457:  int i;
    #####:  458:  int currentPlayer = whoseTurn(state);
call    0 never executed
        -:  459:  
        -:  460:  //Discard hand
    #####:  461:  for (i = 0; i < state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  462:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  463:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  464:  }
    #####:  465:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  466:    
        -:  467:  //Code for determining the player
    #####:  468:  if (currentPlayer < (state->numPlayers - 1)){ 
branch  0 never executed
branch  1 never executed
    #####:  469:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  470:  }
        -:  471:  else{
    #####:  472:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  473:  }
        -:  474:
    #####:  475:  state->outpostPlayed = 0;
    #####:  476:  state->phase = 0;
    #####:  477:  state->numActions = 1;
    #####:  478:  state->coins = 0;
    #####:  479:  state->numBuys = 1;
    #####:  480:  state->playedCardCount = 0;
    #####:  481:  state->handCount[state->whoseTurn] = 0;
        -:  482:
        -:  483:  //int k; move to top
        -:  484:  //Next player draws hand
    #####:  485:  for (k = 0; k < 5; k++){
branch  0 never executed
branch  1 never executed
    #####:  486:    drawCard(state->whoseTurn, state);//Draw a card
call    0 never executed
        -:  487:  }
        -:  488:
        -:  489:  //Update money
    #####:  490:  updateCoins(state->whoseTurn, state , 0);
call    0 never executed
        -:  491:
    #####:  492:  return 0;
        -:  493:}
        -:  494:
function isGameOver called 0 returned 0% blocks executed 0%
    #####:  495:int isGameOver(struct gameState *state) {
        -:  496:  int i;
        -:  497:  int j;
        -:  498:	
        -:  499:  //if stack of Province cards is empty, the game ends
    #####:  500:  if (state->supplyCount[province] == 0)
branch  0 never executed
branch  1 never executed
        -:  501:    {
    #####:  502:      return 1;
        -:  503:    }
        -:  504:
        -:  505:  //if three supply pile are at 0, the game ends
    #####:  506:  j = 0;
    #####:  507:  for (i = 0; i < 25; i++)
branch  0 never executed
branch  1 never executed
        -:  508:    {
    #####:  509:      if (state->supplyCount[i] == 0)
branch  0 never executed
branch  1 never executed
        -:  510:	{
    #####:  511:	  j++;
        -:  512:	}
        -:  513:    }
    #####:  514:  if ( j >= 3)
branch  0 never executed
branch  1 never executed
        -:  515:    {
    #####:  516:      return 1;
        -:  517:    }
        -:  518:
    #####:  519:  return 0;
        -:  520:}
        -:  521:
function scoreFor called 0 returned 0% blocks executed 0%
    #####:  522:int scoreFor (int player, struct gameState *state) {
        -:  523:
        -:  524:  int i;
    #####:  525:  int score = 0;
        -:  526:  //score from hand
    #####:  527:  for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  528:    {
    #####:  529:      if (state->hand[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  530:      if (state->hand[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  531:      if (state->hand[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  532:      if (state->hand[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  533:      if (state->hand[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  534:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  535:    }
        -:  536:
        -:  537:  //score from discard
    #####:  538:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  539:    {
    #####:  540:      if (state->discard[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  541:      if (state->discard[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  542:      if (state->discard[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  543:      if (state->discard[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  544:      if (state->discard[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  545:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  546:    }
        -:  547:
        -:  548:  //score from deck
    #####:  549:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  550:    {
    #####:  551:      if (state->deck[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  552:      if (state->deck[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  553:      if (state->deck[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  554:      if (state->deck[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  555:      if (state->deck[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  556:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  557:    }
        -:  558:
    #####:  559:  return score;
        -:  560:}
        -:  561:
function getWinners called 0 returned 0% blocks executed 0%
    #####:  562:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  563:  int i;	
        -:  564:  int j;
        -:  565:  int highScore;
        -:  566:  int currentPlayer;
        -:  567:
        -:  568:  //get score for each player
    #####:  569:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  570:    {
        -:  571:      //set unused player scores to -9999
    #####:  572:      if (i >= state->numPlayers)
branch  0 never executed
branch  1 never executed
        -:  573:	{
    #####:  574:	  players[i] = -9999;
        -:  575:	}
        -:  576:      else
        -:  577:	{
    #####:  578:	  players[i] = scoreFor (i, state);
call    0 never executed
        -:  579:	}
        -:  580:    }
        -:  581:
        -:  582:  //find highest score
    #####:  583:  j = 0;
    #####:  584:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  585:    {
    #####:  586:      if (players[i] > players[j])
branch  0 never executed
branch  1 never executed
        -:  587:	{
    #####:  588:	  j = i;
        -:  589:	}
        -:  590:    }
    #####:  591:  highScore = players[j];
        -:  592:
        -:  593:  //add 1 to players who had less turns
    #####:  594:  currentPlayer = whoseTurn(state);
call    0 never executed
    #####:  595:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  596:    {
    #####:  597:      if ( players[i] == highScore && i > currentPlayer )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  598:	{
    #####:  599:	  players[i]++;
        -:  600:	}
        -:  601:    }
        -:  602:
        -:  603:  //find new highest score
    #####:  604:  j = 0;
    #####:  605:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  606:    {
    #####:  607:      if ( players[i] > players[j] )
branch  0 never executed
branch  1 never executed
        -:  608:	{
    #####:  609:	  j = i;
        -:  610:	}
        -:  611:    }
    #####:  612:  highScore = players[j];
        -:  613:
        -:  614:  //set winners in array to 1 and rest to 0
    #####:  615:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  616:    {
    #####:  617:      if ( players[i] == highScore )
branch  0 never executed
branch  1 never executed
        -:  618:	{
    #####:  619:	  players[i] = 1;
        -:  620:	}
        -:  621:      else
        -:  622:	{
    #####:  623:	  players[i] = 0;
        -:  624:	}
        -:  625:    }
        -:  626:
    #####:  627:  return 0;
        -:  628:}
        -:  629:
function drawCard called 8000 returned 100% blocks executed 92%
     8000:  630:int drawCard(int player, struct gameState *state)
        -:  631:{	int count;
        -:  632:  int deckCounter;
     8000:  633:  if (state->deckCount[player] <= 0){//Deck is empty
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -:  634:    
        -:  635:    //Step 1 Shuffle the discard pile back into a deck
        -:  636:    int i;
        -:  637:    //Move discard to deck
     4400:  638:    for (i = 0; i < state->discardCount[player];i++){
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
     4383:  639:      state->deck[player][i] = state->discard[player][i];
     4383:  640:      state->discard[player][i] = -1;
        -:  641:    }
        -:  642:
       17:  643:    state->deckCount[player] = state->discardCount[player];
       17:  644:    state->discardCount[player] = 0;//Reset discard
        -:  645:
        -:  646:    //Shufffle the deck
       17:  647:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
call    0 returned 100%
        -:  648:   
        -:  649:    if (DEBUG){//Debug statements
        -:  650:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  651:    }
        -:  652:    
       17:  653:    state->discardCount[player] = 0;
        -:  654:
        -:  655:    //Step 2 Draw Card
       17:  656:    count = state->handCount[player];//Get current player's hand count
        -:  657:    
        -:  658:    if (DEBUG){//Debug statements
        -:  659:      printf("Current hand count: %d\n", count);
        -:  660:    }
        -:  661:    
       17:  662:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  663:
       17:  664:    if (deckCounter == 0)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:  665:      return -1;
        -:  666:
       17:  667:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
       17:  668:    state->deckCount[player]--;
       17:  669:    state->handCount[player]++;//Increment hand count
        -:  670:  }
        -:  671:
        -:  672:  else{
     7983:  673:    int count = state->handCount[player];//Get current hand count for player
        -:  674:    int deckCounter;
        -:  675:    if (DEBUG){//Debug statements
        -:  676:      printf("Current hand count: %d\n", count);
        -:  677:    }
        -:  678:
     7983:  679:    deckCounter = state->deckCount[player];//Create holder for the deck count
     7983:  680:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
     7983:  681:    state->deckCount[player]--;
     7983:  682:    state->handCount[player]++;//Increment hand count
        -:  683:  }
        -:  684:
     8000:  685:  return 0;
        -:  686:}
        -:  687:
function getCost called 0 returned 0% blocks executed 0%
    #####:  688:int getCost(int cardNumber)
        -:  689:{
    #####:  690:  switch( cardNumber ) 
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
        -:  691:    {
        -:  692:    case curse:
    #####:  693:      return 0;
        -:  694:    case estate:
    #####:  695:      return 2;
        -:  696:    case duchy:
    #####:  697:      return 5;
        -:  698:    case province:
    #####:  699:      return 8;
        -:  700:    case copper:
    #####:  701:      return 0;
        -:  702:    case silver:
    #####:  703:      return 3;
        -:  704:    case gold:
    #####:  705:      return 6;
        -:  706:    case adventurer:
    #####:  707:      return 6;
        -:  708:    case council_room:
    #####:  709:      return 5;
        -:  710:    case feast:
    #####:  711:      return 4;
        -:  712:    case gardens:
    #####:  713:      return 4;
        -:  714:    case mine:
    #####:  715:      return 5;
        -:  716:    case remodel:
    #####:  717:      return 4;
        -:  718:    case smithy:
    #####:  719:      return 4;
        -:  720:    case village:
    #####:  721:      return 3;
        -:  722:    case baron:
    #####:  723:      return 4;
        -:  724:    case great_hall:
    #####:  725:      return 3;
        -:  726:    case minion:
    #####:  727:      return 5;
        -:  728:    case steward:
    #####:  729:      return 3;
        -:  730:    case tribute:
    #####:  731:      return 5;
        -:  732:    case ambassador:
    #####:  733:      return 3;
        -:  734:    case cutpurse:
    #####:  735:      return 4;
        -:  736:    case embargo: 
    #####:  737:      return 2;
        -:  738:    case outpost:
    #####:  739:      return 5;
        -:  740:    case salvager:
    #####:  741:      return 4;
        -:  742:    case sea_hag:
    #####:  743:      return 4;
        -:  744:    case treasure_map:
    #####:  745:      return 4;
        -:  746:    }
        -:  747:	
    #####:  748:  return -1;
        -:  749:}
        -:  750:
function cardEffect called 2000 returned 100% blocks executed 3%
     2000:  751:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  752:{
        -:  753:  int i;
        -:  754:  int j;
        -:  755:  int k;
        -:  756:  int x;
        -:  757:  int index;
     2000:  758:  int currentPlayer = whoseTurn(state);
call    0 returned 100%
     2000:  759:  int nextPlayer = currentPlayer + 1;
        -:  760:
     2000:  761:  int tributeRevealedCards[2] = {-1, -1};
        -:  762:  int temphand[MAX_HAND];// moved above the if statement
     2000:  763:  int drawntreasure=0;
        -:  764:  int cardDrawn;
     2000:  765:  int z = 0;// this is the counter for the temp hand
     2000:  766:  if (nextPlayer > (state->numPlayers - 1)){
branch  0 taken 51% (fallthrough)
branch  1 taken 50%
     1010:  767:    nextPlayer = 0;
        -:  768:  }
        -:  769:  
        -:  770:	
        -:  771:  //uses switch to select card and perform actions
     2000:  772:  switch( card ) 
branch  0 taken 0%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 0%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 0%
branch 12 taken 0%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 0%
branch 16 taken 0%
branch 17 taken 0%
branch 18 taken 0%
branch 19 taken 0%
branch 20 taken 0%
        -:  773:    {
        -:  774:    case adventurer:
        -:  775:      /*
        -:  776:      while(drawntreasure<2){
        -:  777:	if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
        -:  778:	  shuffle(currentPlayer, state);
        -:  779:	}
        -:  780:	drawCard(currentPlayer, state);
        -:  781:	cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
        -:  782:	if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
        -:  783:	  drawntreasure++;
        -:  784:	else{
        -:  785:	  temphand[z]=cardDrawn;
        -:  786:	  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  787:	  z++;
        -:  788:	}
        -:  789:      }
        -:  790:      while(z-1>=0){
        -:  791:	state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
        -:  792:	z=z-1;
        -:  793:      }
        -:  794:      return 0;
        -:  795:      */
    #####:  796:      return adventurerPlayed(state, handPos, currentPlayer, drawntreasure);
call    0 never executed
        -:  797:    case council_room:
        -:  798:      /*
        -:  799:      //+4 Cards
        -:  800:      for (i = 0; i < 4; i++)
        -:  801:	{
        -:  802:	  drawCard(currentPlayer, state);
        -:  803:	}
        -:  804:			
        -:  805:      //+1 Buy
        -:  806:      state->numBuys++;
        -:  807:			
        -:  808:      //Each other player draws a card
        -:  809:      for (i = 0; i < state->numPlayers; i++)
        -:  810:	{
        -:  811:	  if ( i != currentPlayer )
        -:  812:	    {
        -:  813:	      drawCard(i, state);
        -:  814:	    }
        -:  815:	}
        -:  816:			
        -:  817:      //put played card in played card pile
        -:  818:      discardCard(handPos, currentPlayer, state, 0);
        -:  819:			
        -:  820:      return 0;
        -:  821:	*/
    #####:  822:      return councilPlayed(state, handPos, currentPlayer);		
call    0 never executed
        -:  823:    case feast:
        -:  824:      //gain card with cost up to 5
        -:  825:      //Backup hand
    #####:  826:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  827:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  828:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  829:      }
        -:  830:      //Backup hand
        -:  831:
        -:  832:      //Update Coins for Buy
    #####:  833:      updateCoins(currentPlayer, state, 5);
call    0 never executed
    #####:  834:      x = 1;//Condition to loop on
    #####:  835:      while( x == 1) {//Buy one card
branch  0 never executed
branch  1 never executed
    #####:  836:	if (supplyCount(choice1, state) <= 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  837:	  if (DEBUG)
        -:  838:	    printf("None of that card left, sorry!\n");
        -:  839:
        -:  840:	  if (DEBUG){
        -:  841:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  842:	  }
        -:  843:	}
    #####:  844:	else if (state->coins < getCost(choice1)){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  845:	  printf("That card is too expensive!\n");
call    0 never executed
        -:  846:
        -:  847:	  if (DEBUG){
        -:  848:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  849:	  }
        -:  850:	}
        -:  851:	else{
        -:  852:
        -:  853:	  if (DEBUG){
        -:  854:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  855:	  }
        -:  856:
    #####:  857:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
call    0 never executed
    #####:  858:	  x = 0;//No more buying cards
        -:  859:
        -:  860:	  if (DEBUG){
        -:  861:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  862:	  }
        -:  863:
        -:  864:	}
        -:  865:      }     
        -:  866:
        -:  867:      //Reset Hand
    #####:  868:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  869:	state->hand[currentPlayer][i] = temphand[i];
    #####:  870:	temphand[i] = -1;
        -:  871:      }
        -:  872:      //Reset Hand
        -:  873:      			
    #####:  874:      return 0;
        -:  875:			
        -:  876:    case gardens:
    #####:  877:      return -1;
        -:  878:			
        -:  879:    case mine:
    #####:  880:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  881:
    #####:  882:      if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  883:	{
    #####:  884:	  return -1;
        -:  885:	}
        -:  886:		
    #####:  887:      if (choice2 > treasure_map || choice2 < curse)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  888:	{
    #####:  889:	  return -1;
        -:  890:	}
        -:  891:
    #####:  892:      if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  893:	{
    #####:  894:	  return -1;
        -:  895:	}
        -:  896:
    #####:  897:      gainCard(choice2, state, 2, currentPlayer);
call    0 never executed
        -:  898:
        -:  899:      //discard card from hand
    #####:  900:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  901:
        -:  902:      //discard trashed card
    #####:  903:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:  904:	{
    #####:  905:	  if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -:  906:	    {
    #####:  907:	      discardCard(i, currentPlayer, state, 0);			
call    0 never executed
    #####:  908:	      break;
        -:  909:	    }
        -:  910:	}
        -:  911:			
    #####:  912:      return 0;
        -:  913:			
        -:  914:    case remodel:
        -:  915:      /*
        -:  916:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  917:
        -:  918:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  919:	{
        -:  920:	  return -1;
        -:  921:	}
        -:  922:
        -:  923:      gainCard(choice2, state, 0, currentPlayer);
        -:  924:
        -:  925:      //discard card from hand
        -:  926:      discardCard(handPos, currentPlayer, state, 0);
        -:  927:
        -:  928:      //discard trashed card
        -:  929:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  930:	{
        -:  931:	  if (state->hand[currentPlayer][i] == j)
        -:  932:	    {
        -:  933:	      discardCard(i, currentPlayer, state, 0);			
        -:  934:	      break;
        -:  935:	    }
        -:  936:	}
        -:  937:
        -:  938:
        -:  939:      return 0;
        -:  940:	*/
    #####:  941:      return remodelPlayed(state, currentPlayer, handPos, choice1, choice2);	
call    0 never executed
        -:  942:    case smithy:
        -:  943:      /*
        -:  944:      //+3 Cards
        -:  945:      for (i = 0; i < 3; i++)
        -:  946:	{
        -:  947:	  drawCard(currentPlayer, state);
        -:  948:	}
        -:  949:			
        -:  950:      //discard card from hand
        -:  951:      discardCard(handPos, currentPlayer, state, 0);
        -:  952:      return 0;
        -:  953:	*/
     2000:  954:      return smithyPlayed(state, currentPlayer, handPos);	
call    0 returned 100%
        -:  955:    case village:
        -:  956:      /*
        -:  957:      //+1 Card
        -:  958:      drawCard(currentPlayer, state);
        -:  959:			
        -:  960:      //+2 Actions
        -:  961:      state->numActions = state->numActions + 2;
        -:  962:			
        -:  963:      //discard played card from hand
        -:  964:      discardCard(handPos, currentPlayer, state, 0);
        -:  965:      return 0;
        -:  966:	*/
    #####:  967:      return villagePlayed(state, currentPlayer, handPos);
call    0 never executed
        -:  968:    case baron:
    #####:  969:      state->numBuys++;//Increase buys by 1!
    #####:  970:      if (choice1 > 0){//Boolean true or going to discard an estate
branch  0 never executed
branch  1 never executed
    #####:  971:	int p = 0;//Iterator for hand!
    #####:  972:	int card_not_discarded = 1;//Flag for discard set!
    #####:  973:	while(card_not_discarded){
branch  0 never executed
branch  1 never executed
    #####:  974:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
branch  0 never executed
branch  1 never executed
    #####:  975:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  976:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  977:	    state->discardCount[currentPlayer]++;
    #####:  978:	    for (;p < state->handCount[currentPlayer]; p++){
branch  0 never executed
branch  1 never executed
    #####:  979:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  980:	    }
    #####:  981:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  982:	    state->handCount[currentPlayer]--;
    #####:  983:	    card_not_discarded = 0;//Exit the loop
        -:  984:	  }
    #####:  985:	  else if (p > state->handCount[currentPlayer]){
branch  0 never executed
branch  1 never executed
        -:  986:	    if(DEBUG) {
        -:  987:	      printf("No estate cards in your hand, invalid choice\n");
        -:  988:	      printf("Must gain an estate if there are any\n");
        -:  989:	    }
    #####:  990:	    if (supplyCount(estate, state) > 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  991:	      gainCard(estate, state, 0, currentPlayer);
call    0 never executed
    #####:  992:	      state->supplyCount[estate]--;//Decrement estates
    #####:  993:	      if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  994:		isGameOver(state);
call    0 never executed
        -:  995:	      }
        -:  996:	    }
    #####:  997:	    card_not_discarded = 0;//Exit the loop
        -:  998:	  }
        -:  999:			    
        -: 1000:	  else{
    #####: 1001:	    p++;//Next card
        -: 1002:	  }
        -: 1003:	}
        -: 1004:      }
        -: 1005:			    
        -: 1006:      else{
    #####: 1007:	if (supplyCount(estate, state) > 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####: 1008:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
call    0 never executed
    #####: 1009:	  state->supplyCount[estate]--;//Decrement Estates
    #####: 1010:	  if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####: 1011:	    isGameOver(state);
call    0 never executed
        -: 1012:	  }
        -: 1013:	}
        -: 1014:      }
        -: 1015:	    
        -: 1016:      
    #####: 1017:      return 0;
        -: 1018:		
        -: 1019:    case great_hall:
        -: 1020:      //+1 Card
    #####: 1021:      drawCard(currentPlayer, state);
call    0 never executed
        -: 1022:			
        -: 1023:      //+1 Actions
    #####: 1024:      state->numActions++;
        -: 1025:			
        -: 1026:      //discard card from hand
    #####: 1027:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1028:      return 0;
        -: 1029:		
        -: 1030:    case minion:
        -: 1031:      //+1 action
    #####: 1032:      state->numActions++;
        -: 1033:			
        -: 1034:      //discard card from hand
    #####: 1035:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -: 1036:			
    #####: 1037:      if (choice1)		//+2 coins
branch  0 never executed
branch  1 never executed
        -: 1038:	{
    #####: 1039:	  state->coins = state->coins + 2;
        -: 1040:	}
        -: 1041:			
    #####: 1042:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
branch  0 never executed
branch  1 never executed
        -: 1043:	{
        -: 1044:	  //discard hand
    #####: 1045:	  while(numHandCards(state) > 0)
call    0 never executed
branch  1 never executed
branch  2 never executed
        -: 1046:	    {
    #####: 1047:	      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -: 1048:	    }
        -: 1049:				
        -: 1050:	  //draw 4
    #####: 1051:	  for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -: 1052:	    {
    #####: 1053:	      drawCard(currentPlayer, state);
call    0 never executed
        -: 1054:	    }
        -: 1055:				
        -: 1056:	  //other players discard hand and redraw if hand size > 4
    #####: 1057:	  for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -: 1058:	    {
    #####: 1059:	      if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -: 1060:		{
    #####: 1061:		  if ( state->handCount[i] > 4 )
branch  0 never executed
branch  1 never executed
        -: 1062:		    {
        -: 1063:		      //discard hand
    #####: 1064:		      while( state->handCount[i] > 0 )
branch  0 never executed
branch  1 never executed
        -: 1065:			{
    #####: 1066:			  discardCard(handPos, i, state, 0);
call    0 never executed
        -: 1067:			}
        -: 1068:							
        -: 1069:		      //draw 4
    #####: 1070:		      for (j = 0; j < 4; j++)
branch  0 never executed
branch  1 never executed
        -: 1071:			{
    #####: 1072:			  drawCard(i, state);
call    0 never executed
        -: 1073:			}
        -: 1074:		    }
        -: 1075:		}
        -: 1076:	    }
        -: 1077:				
        -: 1078:	}
    #####: 1079:      return 0;
        -: 1080:		
        -: 1081:    case steward:
    #####: 1082:      if (choice1 == 1)
branch  0 never executed
branch  1 never executed
        -: 1083:	{
        -: 1084:	  //+2 cards
    #####: 1085:	  drawCard(currentPlayer, state);
call    0 never executed
    #####: 1086:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1087:	}
    #####: 1088:      else if (choice1 == 2)
branch  0 never executed
branch  1 never executed
        -: 1089:	{
        -: 1090:	  //+2 coins
    #####: 1091:	  state->coins = state->coins + 2;
        -: 1092:	}
        -: 1093:      else
        -: 1094:	{
        -: 1095:	  //trash 2 cards in hand
    #####: 1096:	  discardCard(choice2, currentPlayer, state, 1);
call    0 never executed
    #####: 1097:	  discardCard(choice3, currentPlayer, state, 1);
call    0 never executed
        -: 1098:	}
        -: 1099:			
        -: 1100:      //discard card from hand
    #####: 1101:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1102:      return 0;
        -: 1103:		
        -: 1104:    case tribute:
    #####: 1105:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
branch  0 never executed
branch  1 never executed
    #####: 1106:	if (state->deckCount[nextPlayer] > 0){
branch  0 never executed
branch  1 never executed
    #####: 1107:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1108:	  state->deckCount[nextPlayer]--;
        -: 1109:	}
    #####: 1110:	else if (state->discardCount[nextPlayer] > 0){
branch  0 never executed
branch  1 never executed
    #####: 1111:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1112:	  state->discardCount[nextPlayer]--;
        -: 1113:	}
        -: 1114:	else{
        -: 1115:	  //No Card to Reveal
        -: 1116:	  if (DEBUG){
        -: 1117:	    printf("No cards to reveal\n");
        -: 1118:	  }
        -: 1119:	}
        -: 1120:      }
        -: 1121:	    
        -: 1122:      else{
    #####: 1123:	if (state->deckCount[nextPlayer] == 0){
branch  0 never executed
branch  1 never executed
    #####: 1124:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####: 1125:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1126:	    state->deckCount[nextPlayer]++;
    #####: 1127:	    state->discard[nextPlayer][i] = -1;
    #####: 1128:	    state->discardCount[nextPlayer]--;
        -: 1129:	  }
        -: 1130:			    
    #####: 1131:	  shuffle(nextPlayer,state);//Shuffle the deck
call    0 never executed
        -: 1132:	} 
    #####: 1133:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1134:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1135:	state->deckCount[nextPlayer]--;
    #####: 1136:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1137:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1138:	state->deckCount[nextPlayer]--;
        -: 1139:      }    
        -: 1140:		       
    #####: 1141:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
branch  0 never executed
branch  1 never executed
    #####: 1142:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1143:	state->playedCardCount++;
    #####: 1144:	tributeRevealedCards[1] = -1;
        -: 1145:      }
        -: 1146:
    #####: 1147:      for (i = 0; i <= 2; i ++){
branch  0 never executed
branch  1 never executed
    #####: 1148:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####: 1149:	  state->coins += 2;
        -: 1150:	}
        -: 1151:		    
    #####: 1152:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
    #####: 1153:	  drawCard(currentPlayer, state);
call    0 never executed
    #####: 1154:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1155:	}
        -: 1156:	else{//Action Card
    #####: 1157:	  state->numActions = state->numActions + 2;
        -: 1158:	}
        -: 1159:      }
        -: 1160:	    
    #####: 1161:      return 0;
        -: 1162:		
        -: 1163:    case ambassador:
    #####: 1164:      j = 0;		//used to check if player has enough cards to discard
        -: 1165:
    #####: 1166:      if (choice2 > 2 || choice2 < 0)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -: 1167:	{
    #####: 1168:	  return -1;				
        -: 1169:	}
        -: 1170:
    #####: 1171:      if (choice1 == handPos)
branch  0 never executed
branch  1 never executed
        -: 1172:	{
    #####: 1173:	  return -1;
        -: 1174:	}
        -: 1175:
    #####: 1176:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1177:	{
    #####: 1178:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
        -: 1179:	    {
    #####: 1180:	      j++;
        -: 1181:	    }
        -: 1182:	}
    #####: 1183:      if (j < choice2)
branch  0 never executed
branch  1 never executed
        -: 1184:	{
    #####: 1185:	  return -1;				
        -: 1186:	}
        -: 1187:
        -: 1188:      if (DEBUG) 
        -: 1189:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1190:
        -: 1191:      //increase supply count for choosen card by amount being discarded
    #####: 1192:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1193:			
        -: 1194:      //each other player gains a copy of revealed card
    #####: 1195:      for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -: 1196:	{
    #####: 1197:	  if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -: 1198:	    {
    #####: 1199:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
call    0 never executed
        -: 1200:	    }
        -: 1201:	}
        -: 1202:
        -: 1203:      //discard played card from hand
    #####: 1204:      discardCard(handPos, currentPlayer, state, 0);			
call    0 never executed
        -: 1205:
        -: 1206:      //trash copies of cards returned to supply
    #####: 1207:      for (j = 0; j < choice2; j++)
branch  0 never executed
branch  1 never executed
        -: 1208:	{
    #####: 1209:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1210:	    {
    #####: 1211:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
branch  0 never executed
branch  1 never executed
        -: 1212:		{
    #####: 1213:		  discardCard(i, currentPlayer, state, 1);
call    0 never executed
    #####: 1214:		  break;
        -: 1215:		}
        -: 1216:	    }
        -: 1217:	}			
        -: 1218:
    #####: 1219:      return 0;
        -: 1220:		
        -: 1221:    case cutpurse:
        -: 1222:
    #####: 1223:      updateCoins(currentPlayer, state, 2);
call    0 never executed
    #####: 1224:      for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -: 1225:	{
    #####: 1226:	  if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -: 1227:	    {
    #####: 1228:	      for (j = 0; j < state->handCount[i]; j++)
branch  0 never executed
branch  1 never executed
        -: 1229:		{
    #####: 1230:		  if (state->hand[i][j] == copper)
branch  0 never executed
branch  1 never executed
        -: 1231:		    {
    #####: 1232:		      discardCard(j, i, state, 0);
call    0 never executed
    #####: 1233:		      break;
        -: 1234:		    }
    #####: 1235:		  if (j == state->handCount[i])
branch  0 never executed
branch  1 never executed
        -: 1236:		    {
    #####: 1237:		      for (k = 0; k < state->handCount[i]; k++)
branch  0 never executed
branch  1 never executed
        -: 1238:			{
        -: 1239:			  if (DEBUG)
        -: 1240:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1241:			}	
    #####: 1242:		      break;
        -: 1243:		    }		
        -: 1244:		}
        -: 1245:					
        -: 1246:	    }
        -: 1247:				
        -: 1248:	}				
        -: 1249:
        -: 1250:      //discard played card from hand
    #####: 1251:      discardCard(handPos, currentPlayer, state, 0);			
call    0 never executed
        -: 1252:
    #####: 1253:      return 0;
        -: 1254:
        -: 1255:		
        -: 1256:    case embargo: 
        -: 1257:      //+2 Coins
    #####: 1258:      state->coins = state->coins + 2;
        -: 1259:			
        -: 1260:      //see if selected pile is in play
    #####: 1261:      if ( state->supplyCount[choice1] == -1 )
branch  0 never executed
branch  1 never executed
        -: 1262:	{
    #####: 1263:	  return -1;
        -: 1264:	}
        -: 1265:			
        -: 1266:      //add embargo token to selected supply pile
    #####: 1267:      state->embargoTokens[choice1]++;
        -: 1268:			
        -: 1269:      //trash card
    #####: 1270:      discardCard(handPos, currentPlayer, state, 1);		
call    0 never executed
    #####: 1271:      return 0;
        -: 1272:		
        -: 1273:    case outpost:
        -: 1274:      //set outpost flag
    #####: 1275:      state->outpostPlayed++;
        -: 1276:			
        -: 1277:      //discard card
    #####: 1278:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1279:      return 0;
        -: 1280:		
        -: 1281:    case salvager:
        -: 1282:      //+1 buy
    #####: 1283:      state->numBuys++;
        -: 1284:			
    #####: 1285:      if (choice1)
branch  0 never executed
branch  1 never executed
        -: 1286:	{
        -: 1287:	  //gain coins equal to trashed card
    #####: 1288:	  state->coins = state->coins + getCost( handCard(choice1, state) );
call    0 never executed
call    1 never executed
        -: 1289:	  //trash card
    #####: 1290:	  discardCard(choice1, currentPlayer, state, 1);	
call    0 never executed
        -: 1291:	}
        -: 1292:			
        -: 1293:      //discard card
    #####: 1294:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1295:      return 0;
        -: 1296:		
        -: 1297:    case sea_hag:
    #####: 1298:      for (i = 0; i < state->numPlayers; i++){
branch  0 never executed
branch  1 never executed
    #####: 1299:	if (i != currentPlayer){
branch  0 never executed
branch  1 never executed
    #####: 1300:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1301:	  state->discardCount[i]++;
    #####: 1302:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1303:	}
        -: 1304:      }
    #####: 1305:      return 0;
        -: 1306:		
        -: 1307:    case treasure_map:
        -: 1308:      //search hand for another treasure_map
    #####: 1309:      index = -1;
    #####: 1310:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1311:	{
    #####: 1312:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -: 1313:	    {
    #####: 1314:	      index = i;
    #####: 1315:	      break;
        -: 1316:	    }
        -: 1317:	}
    #####: 1318:      if (index > -1)
branch  0 never executed
branch  1 never executed
        -: 1319:	{
        -: 1320:	  //trash both treasure cards
    #####: 1321:	  discardCard(handPos, currentPlayer, state, 1);
call    0 never executed
    #####: 1322:	  discardCard(index, currentPlayer, state, 1);
call    0 never executed
        -: 1323:
        -: 1324:	  //gain 4 Gold cards
    #####: 1325:	  for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -: 1326:	    {
    #####: 1327:	      gainCard(gold, state, 1, currentPlayer);
call    0 never executed
        -: 1328:	    }
        -: 1329:				
        -: 1330:	  //return success
    #####: 1331:	  return 1;
        -: 1332:	}
        -: 1333:			
        -: 1334:      //no second treasure_map found in hand
    #####: 1335:      return -1;
        -: 1336:    }
        -: 1337:	
    #####: 1338:  return -1;
        -: 1339:}
        -: 1340:
function discardCard called 2000 returned 100% blocks executed 78%
     2000: 1341:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1342:{
        -: 1343:	
        -: 1344:  //if card is not trashed, added to Played pile 
     2000: 1345:  if (trashFlag < 1)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1346:    {
        -: 1347:      //add card to played pile
     2000: 1348:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
     2000: 1349:      state->playedCardCount++;
        -: 1350:    }
        -: 1351:	
        -: 1352:  //set played card to -1
     2000: 1353:  state->hand[currentPlayer][handPos] = -1;
        -: 1354:	
        -: 1355:  //remove card from player's hand
     2000: 1356:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -: 1357:    {
        -: 1358:      //reduce number of cards in hand
    #####: 1359:      state->handCount[currentPlayer]--;
        -: 1360:    }
     2000: 1361:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -: 1362:    {
        -: 1363:      //reduce number of cards in hand
    #####: 1364:      state->handCount[currentPlayer]--;
        -: 1365:    }
        -: 1366:  else 	
        -: 1367:    {
        -: 1368:      //replace discarded card with last card in hand
     2000: 1369:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1370:      //set last card to -1
     2000: 1371:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1372:      //reduce number of cards in hand
     2000: 1373:      state->handCount[currentPlayer]--;
        -: 1374:    }
        -: 1375:	
     2000: 1376:  return 0;
        -: 1377:}
        -: 1378:
function gainCard called 0 returned 0% blocks executed 0%
    #####: 1379:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1380:{
        -: 1381:  //Note: supplyPos is enum of choosen card
        -: 1382:	
        -: 1383:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1384:  if ( supplyCount(supplyPos, state) < 1 )
call    0 never executed
branch  1 never executed
branch  2 never executed
        -: 1385:    {
    #####: 1386:      return -1;
        -: 1387:    }
        -: 1388:	
        -: 1389:  //added card for [whoseTurn] current player:
        -: 1390:  // toFlag = 0 : add to discard
        -: 1391:  // toFlag = 1 : add to deck
        -: 1392:  // toFlag = 2 : add to hand
        -: 1393:
    #####: 1394:  if (toFlag == 1)
branch  0 never executed
branch  1 never executed
        -: 1395:    {
    #####: 1396:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1397:      state->deckCount[player]++;
        -: 1398:    }
    #####: 1399:  else if (toFlag == 2)
branch  0 never executed
branch  1 never executed
        -: 1400:    {
    #####: 1401:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1402:      state->handCount[player]++;
        -: 1403:    }
        -: 1404:  else
        -: 1405:    {
    #####: 1406:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1407:      state->discardCount[player]++;
        -: 1408:    }
        -: 1409:	
        -: 1410:  //decrease number in supply pile
    #####: 1411:  state->supplyCount[supplyPos]--;
        -: 1412:	 
    #####: 1413:  return 0;
        -: 1414:}
        -: 1415:
function updateCoins called 0 returned 0% blocks executed 0%
    #####: 1416:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1417:{
        -: 1418:  int i;
        -: 1419:	
        -: 1420:  //reset coin count
    #####: 1421:  state->coins = 0;
        -: 1422:
        -: 1423:  //add coins for each Treasure card in player's hand
    #####: 1424:  for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -: 1425:    {
    #####: 1426:      if (state->hand[player][i] == copper)
branch  0 never executed
branch  1 never executed
        -: 1427:	{
    #####: 1428:	  state->coins += 1;
        -: 1429:	}
    #####: 1430:      else if (state->hand[player][i] == silver)
branch  0 never executed
branch  1 never executed
        -: 1431:	{
    #####: 1432:	  state->coins += 2;
        -: 1433:	}
    #####: 1434:      else if (state->hand[player][i] == gold)
branch  0 never executed
branch  1 never executed
        -: 1435:	{
    #####: 1436:	  state->coins += 3;
        -: 1437:	}	
        -: 1438:    }	
        -: 1439:
        -: 1440:  //add bonus
    #####: 1441:  state->coins += bonus;
        -: 1442:
    #####: 1443:  return 0;
        -: 1444:}
        -: 1445:
        -: 1446:
        -: 1447://end of dominion.c
        -: 1448:
